###############################################################################
#
# IAR ANSI C/C++ Compiler V7.20.2.7424/W32 for ARM        10/Dec/2016  09:44:07
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after\app\hardware.c
#    Command line =  
#        C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after\app\hardware.c
#        -D LPLD_K60 -D USE_K60F12 -lCN
#        C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after\iar\RAM\List\
#        -lB
#        C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after\iar\RAM\List\
#        -o
#        C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after\iar\RAM\Obj\
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M4F -e --fpu=VFPv4_sp --dlib_config
#        D:\IAR\arm\INC\c\DLib_Config_Normal.h -I
#        C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after\iar\..\app\
#        -I
#        C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after\iar\..\..\..\lib\CPU\
#        -I
#        C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after\iar\..\..\..\lib\common\
#        -I
#        C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after\iar\..\..\..\lib\LPLD\
#        -I
#        C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after\iar\..\..\..\lib\LPLD\HW\
#        -I
#        C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after\iar\..\..\..\lib\LPLD\DEV\
#        -I
#        C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after\iar\..\..\..\lib\LPLD\FUNC\
#        -I
#        C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after\iar\..\..\..\lib\uCOS-II\Ports\
#        -I
#        C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after\iar\..\..\..\lib\uCOS-II\Source\
#        -I
#        C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after\iar\..\..\..\lib\FatFs\
#        -I
#        C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after\iar\..\..\..\lib\FatFs\option\
#        -I
#        C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after\iar\..\..\..\lib\USB\common\
#        -I
#        C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after\iar\..\..\..\lib\USB\driver\
#        -I
#        C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after\iar\..\..\..\lib\USB\descriptor\
#        -I
#        C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after\iar\..\..\..\lib\USB\class\
#        -Ol -I D:\IAR\arm\CMSIS\Include\ -D ARM_MATH_CM4
#    List file    =  
#        C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after\iar\RAM\List\hardware.lst
#    Object file  =  
#        C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after\iar\RAM\Obj\hardware.o
#
###############################################################################

C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after\app\hardware.c
      1          #include "Includes.h"
      2          
      3          

   \                                 In section .text, align 2, keep-with-next
      4          void HardwareInit()
      5          {  
   \                     HardwareInit: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
      6            //nvic_init();
      7            //hcsr04_init();
      8            sensor_adc_init();
   \   00000002   0x.... 0x....      BL       sensor_adc_init
      9            Rudder_ftm3_init();
   \   00000006   0x.... 0x....      BL       Rudder_ftm3_init
     10            Motor_ftm0_init();
   \   0000000A   0x.... 0x....      BL       Motor_ftm0_init
     11            qd_ftm2_init();
   \   0000000E   0x.... 0x....      BL       qd_ftm2_init
     12            bluetooth_uart3_init();
   \   00000012   0x.... 0x....      BL       bluetooth_uart3_init
     13            pit_5ms_init();
   \   00000016   0x.... 0x....      BL       pit_5ms_init
     14            
     15          }
   \   0000001A   0xBD01             POP      {R0,PC}          ;; return
     16          

   \                                 In section .text, align 2, keep-with-next
     17          void bluetooth_uart3_init()
     18          {
   \                     bluetooth_uart3_init: (+1)
   \   00000000   0xB500             PUSH     {LR}
   \   00000002   0xB08B             SUB      SP,SP,#+44
     19             UART_InitTypeDef   bluetooth_init;
     20             bluetooth_init.UART_Uartx = UART3;         //使用UART1	
   \   00000004   0x....             LDR.N    R0,??DataTable6  ;; 0x4006d000
   \   00000006   0x9003             STR      R0,[SP, #+12]
     21             bluetooth_init.UART_BaudRate = 115200;     //设置波特率115200	
   \   00000008   0xF45F 0x30E1      MOVS     R0,#+115200
   \   0000000C   0x9004             STR      R0,[SP, #+16]
     22             bluetooth_init.UART_TxPin = PTE4;          
   \   0000000E   0x2080             MOVS     R0,#+128
   \   00000010   0xF88D 0x0014      STRB     R0,[SP, #+20]
     23             bluetooth_init.UART_RxPin = PTE5;          
   \   00000014   0x2081             MOVS     R0,#+129
   \   00000016   0xF88D 0x0015      STRB     R0,[SP, #+21]
     24             LPLD_UART_Init(bluetooth_init);	
   \   0000001A   0xA903             ADD      R1,SP,#+12
   \   0000001C   0xB084             SUB      SP,SP,#+16
   \   0000001E   0x4668             MOV      R0,SP
   \   00000020   0x221C             MOVS     R2,#+28
   \   00000022   0x.... 0x....      BL       __aeabi_memcpy4
   \   00000026   0xBC0F             POP      {R0-R3}
   \   00000028   0x.... 0x....      BL       LPLD_UART_Init
     25          
     26          }
   \   0000002C   0xB00B             ADD      SP,SP,#+44
   \   0000002E   0xBD00             POP      {PC}             ;; return
     27          
     28          

   \                                 In section .text, align 2, keep-with-next
     29          void hcsr04_init()
     30          {
   \                     hcsr04_init: (+1)
   \   00000000   0xB500             PUSH     {LR}
   \   00000002   0xB087             SUB      SP,SP,#+28
     31            //超声波触发控制：PTB18作为TRIG
     32            GPIO_InitTypeDef  hc_trig_init_struct;
     33            hc_trig_init_struct.GPIO_PTx = PTB;
   \   00000004   0x....             LDR.N    R0,??DataTable6_1  ;; 0x400ff040
   \   00000006   0x9001             STR      R0,[SP, #+4]
     34            hc_trig_init_struct.GPIO_Pins = GPIO_Pin18;
   \   00000008   0xF45F 0x2080      MOVS     R0,#+262144
   \   0000000C   0x9002             STR      R0,[SP, #+8]
     35            hc_trig_init_struct.GPIO_PinControl = OUTPUT_DSH|IRQC_DIS;
   \   0000000E   0x2040             MOVS     R0,#+64
   \   00000010   0x9003             STR      R0,[SP, #+12]
     36            hc_trig_init_struct.GPIO_Dir = DIR_OUTPUT;
   \   00000012   0x2001             MOVS     R0,#+1
   \   00000014   0xF88D 0x0010      STRB     R0,[SP, #+16]
     37            hc_trig_init_struct.GPIO_Output = OUTPUT_L;
   \   00000018   0x2000             MOVS     R0,#+0
   \   0000001A   0xF88D 0x0011      STRB     R0,[SP, #+17]
     38            hc_trig_init_struct.GPIO_Isr = NULL;
   \   0000001E   0x2000             MOVS     R0,#+0
   \   00000020   0x9005             STR      R0,[SP, #+20]
     39            LPLD_GPIO_Init(hc_trig_init_struct);    
   \   00000022   0xA901             ADD      R1,SP,#+4
   \   00000024   0xB084             SUB      SP,SP,#+16
   \   00000026   0x4668             MOV      R0,SP
   \   00000028   0x2214             MOVS     R2,#+20
   \   0000002A   0x.... 0x....      BL       __aeabi_memcpy4
   \   0000002E   0xBC0F             POP      {R0-R3}
   \   00000030   0x.... 0x....      BL       LPLD_GPIO_Init
     40            
     41            //超声波回响信号：PTC3作为ECHO
     42            GPIO_InitTypeDef  hc_echo_init_struct;
     43            hc_echo_init_struct.GPIO_PTx = PTC;
   \   00000034   0x....             LDR.N    R0,??DataTable6_2  ;; 0x400ff080
   \   00000036   0x9001             STR      R0,[SP, #+4]
     44            hc_echo_init_struct.GPIO_Pins = GPIO_Pin3;
   \   00000038   0x2008             MOVS     R0,#+8
   \   0000003A   0x9002             STR      R0,[SP, #+8]
     45            hc_echo_init_struct.GPIO_PinControl = IRQC_RI;
   \   0000003C   0xF45F 0x2010      MOVS     R0,#+589824
   \   00000040   0x9003             STR      R0,[SP, #+12]
     46            hc_echo_init_struct.GPIO_Dir = DIR_INPUT;
   \   00000042   0x2000             MOVS     R0,#+0
   \   00000044   0xF88D 0x0010      STRB     R0,[SP, #+16]
     47            hc_echo_init_struct.GPIO_Isr = Dis_measure;
   \   00000048   0x....             LDR.N    R0,??DataTable6_3
   \   0000004A   0x9005             STR      R0,[SP, #+20]
     48            LPLD_GPIO_Init(hc_echo_init_struct);    
   \   0000004C   0xA901             ADD      R1,SP,#+4
   \   0000004E   0xB084             SUB      SP,SP,#+16
   \   00000050   0x4668             MOV      R0,SP
   \   00000052   0x2214             MOVS     R2,#+20
   \   00000054   0x.... 0x....      BL       __aeabi_memcpy4
   \   00000058   0xBC0F             POP      {R0-R3}
   \   0000005A   0x.... 0x....      BL       LPLD_GPIO_Init
     49            LPLD_GPIO_EnableIrq(hc_echo_init_struct);
   \   0000005E   0xA901             ADD      R1,SP,#+4
   \   00000060   0xB084             SUB      SP,SP,#+16
   \   00000062   0x4668             MOV      R0,SP
   \   00000064   0x2214             MOVS     R2,#+20
   \   00000066   0x.... 0x....      BL       __aeabi_memcpy4
   \   0000006A   0xBC0F             POP      {R0-R3}
   \   0000006C   0x.... 0x....      BL       LPLD_GPIO_EnableIrq
     50          }
   \   00000070   0xB007             ADD      SP,SP,#+28
   \   00000072   0xBD00             POP      {PC}             ;; return
     51          
     52          

   \                                 In section .text, align 2, keep-with-next
     53          void pit_5ms_init(void)
     54          {
   \                     pit_5ms_init: (+1)
   \   00000000   0xB500             PUSH     {LR}
   \   00000002   0xB087             SUB      SP,SP,#+28
     55            PIT_InitTypeDef  pit0_init_struct; 
     56            pit0_init_struct.PIT_Pitx = PIT0;
   \   00000004   0x2000             MOVS     R0,#+0
   \   00000006   0xF88D 0x0004      STRB     R0,[SP, #+4]
     57            pit0_init_struct.PIT_PeriodS = 0;
   \   0000000A   0x2000             MOVS     R0,#+0
   \   0000000C   0x9004             STR      R0,[SP, #+16]
     58            pit0_init_struct.PIT_PeriodUs = 0;
   \   0000000E   0x2000             MOVS     R0,#+0
   \   00000010   0x9002             STR      R0,[SP, #+8]
     59            pit0_init_struct.PIT_PeriodMs = 10;  //定时周期5ms
   \   00000012   0x200A             MOVS     R0,#+10
   \   00000014   0x9003             STR      R0,[SP, #+12]
     60            pit0_init_struct.PIT_Isr =  pit_5ms;//设置中断函数
   \   00000016   0x....             LDR.N    R0,??DataTable6_4
   \   00000018   0x9005             STR      R0,[SP, #+20]
     61            LPLD_PIT_Init(pit0_init_struct);    //初始化PIT0
   \   0000001A   0xA901             ADD      R1,SP,#+4
   \   0000001C   0xB084             SUB      SP,SP,#+16
   \   0000001E   0x4668             MOV      R0,SP
   \   00000020   0x2214             MOVS     R2,#+20
   \   00000022   0x.... 0x....      BL       __aeabi_memcpy4
   \   00000026   0xBC0F             POP      {R0-R3}
   \   00000028   0x.... 0x....      BL       LPLD_PIT_Init
     62            LPLD_PIT_EnableIrq(pit0_init_struct);
   \   0000002C   0xA901             ADD      R1,SP,#+4
   \   0000002E   0xB084             SUB      SP,SP,#+16
   \   00000030   0x4668             MOV      R0,SP
   \   00000032   0x2214             MOVS     R2,#+20
   \   00000034   0x.... 0x....      BL       __aeabi_memcpy4
   \   00000038   0xBC0F             POP      {R0-R3}
   \   0000003A   0x.... 0x....      BL       LPLD_PIT_EnableIrq
     63          }
   \   0000003E   0xB007             ADD      SP,SP,#+28
   \   00000040   0xBD00             POP      {PC}             ;; return
     64          

   \                                 In section .text, align 2, keep-with-next
     65          void nvic_init()
     66          {
   \                     nvic_init: (+1)
   \   00000000   0xB500             PUSH     {LR}
   \   00000002   0xB087             SUB      SP,SP,#+28
     67            NVIC_InitTypeDef nvic_init_struct;
     68            //配置PIT0的NVIC分组
     69            nvic_init_struct.NVIC_IRQChannel = PIT0_IRQn;
   \   00000004   0x2044             MOVS     R0,#+68
   \   00000006   0xF88D 0x0004      STRB     R0,[SP, #+4]
     70            nvic_init_struct.NVIC_IRQChannelGroupPriority = NVIC_PriorityGroup_1;
   \   0000000A   0x2006             MOVS     R0,#+6
   \   0000000C   0x9002             STR      R0,[SP, #+8]
     71            nvic_init_struct.NVIC_IRQChannelPreemptionPriority = 1;
   \   0000000E   0x2001             MOVS     R0,#+1
   \   00000010   0x9003             STR      R0,[SP, #+12]
     72            LPLD_NVIC_Init(nvic_init_struct);
   \   00000012   0xA901             ADD      R1,SP,#+4
   \   00000014   0xB084             SUB      SP,SP,#+16
   \   00000016   0x4668             MOV      R0,SP
   \   00000018   0x2214             MOVS     R2,#+20
   \   0000001A   0x.... 0x....      BL       __aeabi_memcpy4
   \   0000001E   0xBC0F             POP      {R0-R3}
   \   00000020   0x.... 0x....      BL       LPLD_NVIC_Init
     73            //配置PORTC_IRQn的NVIC分组
     74            nvic_init_struct.NVIC_IRQChannel = PORTC_IRQn;
   \   00000024   0x2059             MOVS     R0,#+89
   \   00000026   0xF88D 0x0004      STRB     R0,[SP, #+4]
     75            nvic_init_struct.NVIC_IRQChannelGroupPriority = NVIC_PriorityGroup_1;
   \   0000002A   0x2006             MOVS     R0,#+6
   \   0000002C   0x9002             STR      R0,[SP, #+8]
     76            nvic_init_struct.NVIC_IRQChannelPreemptionPriority = 0;
   \   0000002E   0x2000             MOVS     R0,#+0
   \   00000030   0x9003             STR      R0,[SP, #+12]
     77            LPLD_NVIC_Init(nvic_init_struct);
   \   00000032   0xA901             ADD      R1,SP,#+4
   \   00000034   0xB084             SUB      SP,SP,#+16
   \   00000036   0x4668             MOV      R0,SP
   \   00000038   0x2214             MOVS     R2,#+20
   \   0000003A   0x.... 0x....      BL       __aeabi_memcpy4
   \   0000003E   0xBC0F             POP      {R0-R3}
   \   00000040   0x.... 0x....      BL       LPLD_NVIC_Init
     78          }
   \   00000044   0xB007             ADD      SP,SP,#+28
   \   00000046   0xBD00             POP      {PC}             ;; return
     79          

   \                                 In section .text, align 2, keep-with-next
     80          void sensor_adc_init()
     81          {
   \                     sensor_adc_init: (+1)
   \   00000000   0xB500             PUSH     {LR}
   \   00000002   0xB087             SUB      SP,SP,#+28
     82            ADC_InitTypeDef sensor1_adc_init;
     83            sensor1_adc_init.ADC_Adcx = ADC1;	
   \   00000004   0x....             LDR.N    R0,??DataTable6_5  ;; 0x400bb000
   \   00000006   0x9001             STR      R0,[SP, #+4]
     84            sensor1_adc_init.ADC_DiffMode = ADC_SE;       //单端采集	
   \   00000008   0x2000             MOVS     R0,#+0
   \   0000000A   0xF88D 0x0008      STRB     R0,[SP, #+8]
     85            sensor1_adc_init.ADC_BitMode = SE_8BIT;       //单端8位精度	
   \   0000000E   0x2000             MOVS     R0,#+0
   \   00000010   0xF88D 0x0009      STRB     R0,[SP, #+9]
     86            sensor1_adc_init.ADC_SampleTimeCfg = SAMTIME_SHORT;    //短采样时间	
   \   00000014   0x2000             MOVS     R0,#+0
   \   00000016   0xF88D 0x000A      STRB     R0,[SP, #+10]
     87            sensor1_adc_init.ADC_HwAvgSel = HW_DISAVG;       //禁用硬件平均	
   \   0000001A   0x2000             MOVS     R0,#+0
   \   0000001C   0xF88D 0x000C      STRB     R0,[SP, #+12]
     88            sensor1_adc_init.ADC_CalEnable = TRUE; //使能初始化校验	
   \   00000020   0x2001             MOVS     R0,#+1
   \   00000022   0xF88D 0x000F      STRB     R0,[SP, #+15]
     89            sensor1_adc_init.ADC_MuxSel = MUX_ADXXA;
   \   00000026   0x2000             MOVS     R0,#+0
   \   00000028   0xF88D 0x000E      STRB     R0,[SP, #+14]
     90            LPLD_ADC_Init(sensor1_adc_init);	
   \   0000002C   0xA901             ADD      R1,SP,#+4
   \   0000002E   0xB084             SUB      SP,SP,#+16
   \   00000030   0x4668             MOV      R0,SP
   \   00000032   0x2214             MOVS     R2,#+20
   \   00000034   0x.... 0x....      BL       __aeabi_memcpy4
   \   00000038   0xBC0F             POP      {R0-R3}
   \   0000003A   0x.... 0x....      BL       LPLD_ADC_Init
     91            LPLD_ADC_Chn_Enable(ADC1, AD5);
   \   0000003E   0x2105             MOVS     R1,#+5
   \   00000040   0x....             LDR.N    R0,??DataTable6_5  ;; 0x400bb000
   \   00000042   0x.... 0x....      BL       LPLD_ADC_Chn_Enable
     92            LPLD_ADC_Chn_Enable(ADC1, AD6);
   \   00000046   0x2106             MOVS     R1,#+6
   \   00000048   0x....             LDR.N    R0,??DataTable6_5  ;; 0x400bb000
   \   0000004A   0x.... 0x....      BL       LPLD_ADC_Chn_Enable
     93            LPLD_ADC_Chn_Enable(ADC1, AD7);
   \   0000004E   0x2107             MOVS     R1,#+7
   \   00000050   0x....             LDR.N    R0,??DataTable6_5  ;; 0x400bb000
   \   00000052   0x.... 0x....      BL       LPLD_ADC_Chn_Enable
     94            LPLD_ADC_Chn_Enable(ADC1, AD4);
   \   00000056   0x2104             MOVS     R1,#+4
   \   00000058   0x....             LDR.N    R0,??DataTable6_5  ;; 0x400bb000
   \   0000005A   0x.... 0x....      BL       LPLD_ADC_Chn_Enable
     95          }
   \   0000005E   0xB007             ADD      SP,SP,#+28
   \   00000060   0xBD00             POP      {PC}             ;; return
     96          

   \                                 In section .text, align 2, keep-with-next
     97          void Rudder_ftm3_init()
     98          {
   \                     Rudder_ftm3_init: (+1)
   \   00000000   0xB500             PUSH     {LR}
   \   00000002   0xB08B             SUB      SP,SP,#+44
     99            FTM_InitTypeDef Rudder_ftm3_init;
    100            Rudder_ftm3_init.FTM_Ftmx = FTM3;           
   \   00000004   0x....             LDR.N    R0,??DataTable6_6  ;; 0x400b9000
   \   00000006   0x9003             STR      R0,[SP, #+12]
    101            Rudder_ftm3_init.FTM_Mode = FTM_MODE_PWM;   
   \   00000008   0x2001             MOVS     R0,#+1
   \   0000000A   0xF88D 0x0010      STRB     R0,[SP, #+16]
    102            Rudder_ftm3_init.FTM_PwmFreq = 50;          
   \   0000000E   0x2032             MOVS     R0,#+50
   \   00000010   0x9005             STR      R0,[SP, #+20]
    103            Rudder_ftm3_init.FTM_Isr = NULL;
   \   00000012   0x2000             MOVS     R0,#+0
   \   00000014   0x9009             STR      R0,[SP, #+36]
    104            LPLD_FTM_Init(Rudder_ftm3_init);    
   \   00000016   0xA903             ADD      R1,SP,#+12
   \   00000018   0xB084             SUB      SP,SP,#+16
   \   0000001A   0x4668             MOV      R0,SP
   \   0000001C   0x221C             MOVS     R2,#+28
   \   0000001E   0x.... 0x....      BL       __aeabi_memcpy4
   \   00000022   0xBC0F             POP      {R0-R3}
   \   00000024   0x.... 0x....      BL       LPLD_FTM_Init
    105            LPLD_FTM_PWM_Enable(FTM3, FTM_Ch0, 650, PTD0, ALIGN_LEFT); 
   \   00000028   0x2028             MOVS     R0,#+40
   \   0000002A   0x9000             STR      R0,[SP, #+0]
   \   0000002C   0x235C             MOVS     R3,#+92
   \   0000002E   0xF240 0x228A      MOVW     R2,#+650
   \   00000032   0x2100             MOVS     R1,#+0
   \   00000034   0x....             LDR.N    R0,??DataTable6_6  ;; 0x400b9000
   \   00000036   0x.... 0x....      BL       LPLD_FTM_PWM_Enable
    106          }
   \   0000003A   0xB00B             ADD      SP,SP,#+44
   \   0000003C   0xBD00             POP      {PC}             ;; return
    107          

   \                                 In section .text, align 2, keep-with-next
    108          void Motor_ftm0_init()
    109          {
   \                     Motor_ftm0_init: (+1)
   \   00000000   0xB500             PUSH     {LR}
   \   00000002   0xB08B             SUB      SP,SP,#+44
    110            FTM_InitTypeDef motor_ftm0_init;
    111            motor_ftm0_init.FTM_Ftmx = FTM0;           
   \   00000004   0x....             LDR.N    R0,??DataTable6_7  ;; 0x40038000
   \   00000006   0x9003             STR      R0,[SP, #+12]
    112            motor_ftm0_init.FTM_Mode = FTM_MODE_PWM;   
   \   00000008   0x2001             MOVS     R0,#+1
   \   0000000A   0xF88D 0x0010      STRB     R0,[SP, #+16]
    113            motor_ftm0_init.FTM_PwmFreq = 20000;          
   \   0000000E   0xF644 0x6020      MOVW     R0,#+20000
   \   00000012   0x9005             STR      R0,[SP, #+20]
    114            motor_ftm0_init.FTM_Isr = NULL;
   \   00000014   0x2000             MOVS     R0,#+0
   \   00000016   0x9009             STR      R0,[SP, #+36]
    115            LPLD_FTM_Init(motor_ftm0_init);    
   \   00000018   0xA903             ADD      R1,SP,#+12
   \   0000001A   0xB084             SUB      SP,SP,#+16
   \   0000001C   0x4668             MOV      R0,SP
   \   0000001E   0x221C             MOVS     R2,#+28
   \   00000020   0x.... 0x....      BL       __aeabi_memcpy4
   \   00000024   0xBC0F             POP      {R0-R3}
   \   00000026   0x.... 0x....      BL       LPLD_FTM_Init
    116            LPLD_FTM_PWM_Enable(FTM0, FTM_Ch1, 0, PTA4, ALIGN_LEFT); 
   \   0000002A   0x2028             MOVS     R0,#+40
   \   0000002C   0x9000             STR      R0,[SP, #+0]
   \   0000002E   0x2304             MOVS     R3,#+4
   \   00000030   0x2200             MOVS     R2,#+0
   \   00000032   0x2101             MOVS     R1,#+1
   \   00000034   0x....             LDR.N    R0,??DataTable6_7  ;; 0x40038000
   \   00000036   0x.... 0x....      BL       LPLD_FTM_PWM_Enable
    117            LPLD_FTM_PWM_Enable(FTM0, FTM_Ch2, 0, PTA5, ALIGN_LEFT); 
   \   0000003A   0x2028             MOVS     R0,#+40
   \   0000003C   0x9000             STR      R0,[SP, #+0]
   \   0000003E   0x2305             MOVS     R3,#+5
   \   00000040   0x2200             MOVS     R2,#+0
   \   00000042   0x2102             MOVS     R1,#+2
   \   00000044   0x....             LDR.N    R0,??DataTable6_7  ;; 0x40038000
   \   00000046   0x.... 0x....      BL       LPLD_FTM_PWM_Enable
    118          }
   \   0000004A   0xB00B             ADD      SP,SP,#+44
   \   0000004C   0xBD00             POP      {PC}             ;; return
    119          

   \                                 In section .text, align 2, keep-with-next
    120          void qd_ftm2_init()
    121          {
   \                     qd_ftm2_init: (+1)
   \   00000000   0xB500             PUSH     {LR}
   \   00000002   0xB08B             SUB      SP,SP,#+44
    122            FTM_InitTypeDef QD_init_struct;
    123            QD_init_struct.FTM_Ftmx = FTM2;  //初始化右编码器
   \   00000004   0x....             LDR.N    R0,??DataTable6_8  ;; 0x400b8000
   \   00000006   0x9003             STR      R0,[SP, #+12]
    124            QD_init_struct.FTM_Mode = FTM_MODE_QD; 
   \   00000008   0x2004             MOVS     R0,#+4
   \   0000000A   0xF88D 0x0010      STRB     R0,[SP, #+16]
    125            QD_init_struct.FTM_QdMode = QD_MODE_PHAB;  
   \   0000000E   0x2000             MOVS     R0,#+0
   \   00000010   0xF88D 0x001E      STRB     R0,[SP, #+30]
    126            QD_init_struct.FTM_ToiEnable = FALSE;
   \   00000014   0x2000             MOVS     R0,#+0
   \   00000016   0xF88D 0x0020      STRB     R0,[SP, #+32]
    127            LPLD_FTM_Init(QD_init_struct);
   \   0000001A   0xA903             ADD      R1,SP,#+12
   \   0000001C   0xB084             SUB      SP,SP,#+16
   \   0000001E   0x4668             MOV      R0,SP
   \   00000020   0x221C             MOVS     R2,#+28
   \   00000022   0x.... 0x....      BL       __aeabi_memcpy4
   \   00000026   0xBC0F             POP      {R0-R3}
   \   00000028   0x.... 0x....      BL       LPLD_FTM_Init
    128            LPLD_FTM_QD_Enable(FTM2, PTA10, PTA11); 
   \   0000002C   0x220B             MOVS     R2,#+11
   \   0000002E   0x210A             MOVS     R1,#+10
   \   00000030   0x....             LDR.N    R0,??DataTable6_8  ;; 0x400b8000
   \   00000032   0x.... 0x....      BL       LPLD_FTM_QD_Enable
    129          }
   \   00000036   0xB00B             ADD      SP,SP,#+44
   \   00000038   0xBD00             POP      {PC}             ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6:
   \   00000000   0x4006D000         DC32     0x4006d000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_1:
   \   00000000   0x400FF040         DC32     0x400ff040

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_2:
   \   00000000   0x400FF080         DC32     0x400ff080

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_3:
   \   00000000   0x........         DC32     Dis_measure

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_4:
   \   00000000   0x........         DC32     pit_5ms

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_5:
   \   00000000   0x400BB000         DC32     0x400bb000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_6:
   \   00000000   0x400B9000         DC32     0x400b9000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_7:
   \   00000000   0x40038000         DC32     0x40038000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_8:
   \   00000000   0x400B8000         DC32     0x400b8000

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   HardwareInit
         8   -> Motor_ftm0_init
         8   -> Rudder_ftm3_init
         8   -> bluetooth_uart3_init
         8   -> pit_5ms_init
         8   -> qd_ftm2_init
         8   -> sensor_adc_init
      64   Motor_ftm0_init
        48   -> LPLD_FTM_Init
        48   -> LPLD_FTM_PWM_Enable
        64   -> __aeabi_memcpy4
      64   Rudder_ftm3_init
        48   -> LPLD_FTM_Init
        48   -> LPLD_FTM_PWM_Enable
        64   -> __aeabi_memcpy4
      64   bluetooth_uart3_init
        48   -> LPLD_UART_Init
        64   -> __aeabi_memcpy4
      48   hcsr04_init
        32   -> LPLD_GPIO_EnableIrq
        32   -> LPLD_GPIO_Init
        48   -> __aeabi_memcpy4
      48   nvic_init
        32   -> LPLD_NVIC_Init
        48   -> __aeabi_memcpy4
      48   pit_5ms_init
        32   -> LPLD_PIT_EnableIrq
        32   -> LPLD_PIT_Init
        48   -> __aeabi_memcpy4
      64   qd_ftm2_init
        48   -> LPLD_FTM_Init
        48   -> LPLD_FTM_QD_Enable
        64   -> __aeabi_memcpy4
      48   sensor_adc_init
        32   -> LPLD_ADC_Chn_Enable
        32   -> LPLD_ADC_Init
        48   -> __aeabi_memcpy4


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable6
       4  ??DataTable6_1
       4  ??DataTable6_2
       4  ??DataTable6_3
       4  ??DataTable6_4
       4  ??DataTable6_5
       4  ??DataTable6_6
       4  ??DataTable6_7
       4  ??DataTable6_8
      28  HardwareInit
      78  Motor_ftm0_init
      62  Rudder_ftm3_init
      48  bluetooth_uart3_init
     116  hcsr04_init
      72  nvic_init
      66  pit_5ms_init
      58  qd_ftm2_init
      98  sensor_adc_init

 
 662 bytes in section .text
 
 662 bytes of CODE memory

Errors: none
Warnings: none
