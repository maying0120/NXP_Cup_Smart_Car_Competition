###############################################################################
#
# IAR ANSI C/C++ Compiler V7.20.2.7424/W32 for ARM        10/Dec/2016  11:48:01
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after\app\Motor_Ctrl.c
#    Command line =  
#        C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after\app\Motor_Ctrl.c
#        -D LPLD_K60 -D USE_K60F12 -lCN
#        C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after\iar\RAM\List\
#        -lB
#        C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after\iar\RAM\List\
#        -o
#        C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after\iar\RAM\Obj\
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M4F -e --fpu=VFPv4_sp --dlib_config
#        D:\IAR\arm\INC\c\DLib_Config_Normal.h -I
#        C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after\iar\..\app\
#        -I
#        C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after\iar\..\..\..\lib\CPU\
#        -I
#        C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after\iar\..\..\..\lib\common\
#        -I
#        C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after\iar\..\..\..\lib\LPLD\
#        -I
#        C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after\iar\..\..\..\lib\LPLD\HW\
#        -I
#        C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after\iar\..\..\..\lib\LPLD\DEV\
#        -I
#        C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after\iar\..\..\..\lib\LPLD\FUNC\
#        -I
#        C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after\iar\..\..\..\lib\uCOS-II\Ports\
#        -I
#        C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after\iar\..\..\..\lib\uCOS-II\Source\
#        -I
#        C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after\iar\..\..\..\lib\FatFs\
#        -I
#        C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after\iar\..\..\..\lib\FatFs\option\
#        -I
#        C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after\iar\..\..\..\lib\USB\common\
#        -I
#        C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after\iar\..\..\..\lib\USB\driver\
#        -I
#        C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after\iar\..\..\..\lib\USB\descriptor\
#        -I
#        C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after\iar\..\..\..\lib\USB\class\
#        -Ol -I D:\IAR\arm\CMSIS\Include\ -D ARM_MATH_CM4
#    List file    =  
#        C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after\iar\RAM\List\Motor_Ctrl.lst
#    Object file  =  
#        C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after\iar\RAM\Obj\Motor_Ctrl.o
#
###############################################################################

C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after\app\Motor_Ctrl.c
      1          #include "Includes.h"
      2          

   \                                 In section .bss, align 4
      3          struct Speed Spd;
   \                     Spd:
   \   00000000                      DS8 116
      4          

   \                                 In section .data, align 4
      5          int speed = 400;
   \                     speed:
   \   00000000   0x00000190         DC32 400

   \                                 In section .text, align 2, keep-with-next
      6          void Spd_Set()
      7          {
      8            Spd.target = speed;
   \                     Spd_Set: (+1)
   \   00000000   0x....             LDR.N    R0,??DataTable3
   \   00000002   0x6800             LDR      R0,[R0, #+0]
   \   00000004   0x....             LDR.N    R1,??DataTable3_1
   \   00000006   0x6008             STR      R0,[R1, #+0]
      9          }
   \   00000008   0x4770             BX       LR               ;; return
     10          
     11          

   \                                 In section .text, align 2, keep-with-next
     12          void Spd_Ctrl()
     13          {
     14            //参数设定
     15            Spd.tag_error = (int)(Spd.target-Spd.preTarget[5]);
   \                     Spd_Ctrl: (+1)
   \   00000000   0x....             LDR.N    R0,??DataTable3_1
   \   00000002   0xED90 0x0A00      VLDR     S0,[R0, #0]
   \   00000006   0xEEB8 0x0AC0      VCVT.F32.S32 S0,S0
   \   0000000A   0x....             LDR.N    R0,??DataTable3_1
   \   0000000C   0xEDD0 0x0A17      VLDR     S1,[R0, #+92]
   \   00000010   0xEE30 0x0A60      VSUB.F32 S0,S0,S1
   \   00000014   0xEEBD 0x0AC0      VCVT.S32.F32 S0,S0
   \   00000018   0x....             LDR.N    R0,??DataTable3_1
   \   0000001A   0xED80 0x0A01      VSTR     S0,[R0, #+4]
     16            Spd.I = 0.5; 
   \   0000001E   0x....             LDR.N    R0,??DataTable3_1
   \   00000020   0xF05F 0x517C      MOVS     R1,#+1056964608
   \   00000024   0x6401             STR      R1,[R0, #+64]
     17            Spd.P = 0;
   \   00000026   0x....             LDR.N    R0,??DataTable3_1
   \   00000028   0x2100             MOVS     R1,#+0
   \   0000002A   0x63C1             STR      R1,[R0, #+60]
     18            Spd.error = Spd.target - Spd.feedback;
   \   0000002C   0x....             LDR.N    R0,??DataTable3_1
   \   0000002E   0x6800             LDR      R0,[R0, #+0]
   \   00000030   0x....             LDR.N    R1,??DataTable3_1
   \   00000032   0x6909             LDR      R1,[R1, #+16]
   \   00000034   0x1A40             SUBS     R0,R0,R1
   \   00000036   0x....             LDR.N    R1,??DataTable3_1
   \   00000038   0x6088             STR      R0,[R1, #+8]
     19            Spd.drror = Spd.feedback - Spd.pre_feedback[5];
   \   0000003A   0x....             LDR.N    R0,??DataTable3_1
   \   0000003C   0x6900             LDR      R0,[R0, #+16]
   \   0000003E   0x....             LDR.N    R1,??DataTable3_1
   \   00000040   0x6A89             LDR      R1,[R1, #+40]
   \   00000042   0x1A40             SUBS     R0,R0,R1
   \   00000044   0x....             LDR.N    R1,??DataTable3_1
   \   00000046   0x60C8             STR      R0,[R1, #+12]
     20            for(int i=0; i<9; i++)
   \   00000048   0x2000             MOVS     R0,#+0
   \   0000004A   0xE008             B.N      ??Spd_Ctrl_0
     21               Spd.pre_feedback[i] = Spd.pre_feedback[i+1];
   \                     ??Spd_Ctrl_1: (+1)
   \   0000004C   0x....             LDR.N    R1,??DataTable3_1
   \   0000004E   0xEB11 0x0180      ADDS     R1,R1,R0, LSL #+2
   \   00000052   0x6989             LDR      R1,[R1, #+24]
   \   00000054   0x....             LDR.N    R2,??DataTable3_1
   \   00000056   0xEB12 0x0280      ADDS     R2,R2,R0, LSL #+2
   \   0000005A   0x6151             STR      R1,[R2, #+20]
   \   0000005C   0x1C40             ADDS     R0,R0,#+1
   \                     ??Spd_Ctrl_0: (+1)
   \   0000005E   0x2809             CMP      R0,#+9
   \   00000060   0xDBF4             BLT.N    ??Spd_Ctrl_1
     22            Spd.pre_feedback[9] = Spd.feedback;
   \   00000062   0x....             LDR.N    R0,??DataTable3_1
   \   00000064   0x6900             LDR      R0,[R0, #+16]
   \   00000066   0x....             LDR.N    R1,??DataTable3_1
   \   00000068   0x6388             STR      R0,[R1, #+56]
     23            
     24            //增量式PID
     25            Spd.MotorPWM += Spd.I*Spd.error + Spd.P*Spd.drror + Spd.T*Spd.tag_error;                
   \   0000006A   0x....             LDR.N    R0,??DataTable3_1
   \   0000006C   0xF8B0 0x0070      LDRH     R0,[R0, #+112]
   \   00000070   0xEE00 0x0A10      VMOV     S0,R0
   \   00000074   0xEEB8 0x0A40      VCVT.F32.U32 S0,S0
   \   00000078   0x....             LDR.N    R0,??DataTable3_1
   \   0000007A   0xEDD0 0x0A02      VLDR     S1,[R0, #+8]
   \   0000007E   0xEEF8 0x0AE0      VCVT.F32.S32 S1,S1
   \   00000082   0x....             LDR.N    R0,??DataTable3_1
   \   00000084   0xED90 0x1A10      VLDR     S2,[R0, #+64]
   \   00000088   0xEE60 0x0A81      VMUL.F32 S1,S1,S2
   \   0000008C   0x....             LDR.N    R0,??DataTable3_1
   \   0000008E   0xED90 0x1A03      VLDR     S2,[R0, #+12]
   \   00000092   0xEEB8 0x1AC1      VCVT.F32.S32 S2,S2
   \   00000096   0x....             LDR.N    R0,??DataTable3_1
   \   00000098   0xEDD0 0x1A0F      VLDR     S3,[R0, #+60]
   \   0000009C   0xEE41 0x0A21      VMLA.F32 S1,S2,S3
   \   000000A0   0x....             LDR.N    R0,??DataTable3_1
   \   000000A2   0xED90 0x1A01      VLDR     S2,[R0, #+4]
   \   000000A6   0xEEB8 0x1AC1      VCVT.F32.S32 S2,S2
   \   000000AA   0x....             LDR.N    R0,??DataTable3_1
   \   000000AC   0xEDD0 0x1A11      VLDR     S3,[R0, #+68]
   \   000000B0   0xEE41 0x0A21      VMLA.F32 S1,S2,S3
   \   000000B4   0xEE30 0x0A20      VADD.F32 S0,S0,S1
   \   000000B8   0xEEBD 0x0AC0      VCVT.S32.F32 S0,S0
   \   000000BC   0xEE10 0x0A10      VMOV     R0,S0
   \   000000C0   0x....             LDR.N    R1,??DataTable3_1
   \   000000C2   0xF8A1 0x0070      STRH     R0,[R1, #+112]
     26            
     27            //棒棒
     28            if(Spd.feedback+300 < Spd.target)
   \   000000C6   0x....             LDR.N    R0,??DataTable3_1
   \   000000C8   0x6900             LDR      R0,[R0, #+16]
   \   000000CA   0xF510 0x7096      ADDS     R0,R0,#+300
   \   000000CE   0x....             LDR.N    R1,??DataTable3_1
   \   000000D0   0x6809             LDR      R1,[R1, #+0]
   \   000000D2   0x4288             CMP      R0,R1
   \   000000D4   0xDA05             BGE.N    ??Spd_Ctrl_2
     29              Spd.MotorPWM = 9800;
   \   000000D6   0xF242 0x6048      MOVW     R0,#+9800
   \   000000DA   0x....             LDR.N    R1,??DataTable3_1
   \   000000DC   0xF8A1 0x0070      STRH     R0,[R1, #+112]
   \   000000E0   0xE00B             B.N      ??Spd_Ctrl_3
     30            else if(Spd.feedback-300 > Spd.target)
   \                     ??Spd_Ctrl_2: (+1)
   \   000000E2   0x....             LDR.N    R0,??DataTable3_1
   \   000000E4   0x6800             LDR      R0,[R0, #+0]
   \   000000E6   0x....             LDR.N    R1,??DataTable3_1
   \   000000E8   0x6909             LDR      R1,[R1, #+16]
   \   000000EA   0xF5B1 0x7196      SUBS     R1,R1,#+300
   \   000000EE   0x4288             CMP      R0,R1
   \   000000F0   0xDA03             BGE.N    ??Spd_Ctrl_3
     31              Spd.MotorPWM = 0;
   \   000000F2   0x2000             MOVS     R0,#+0
   \   000000F4   0x....             LDR.N    R1,??DataTable3_1
   \   000000F6   0xF8A1 0x0070      STRH     R0,[R1, #+112]
     32          }
   \                     ??Spd_Ctrl_3: (+1)
   \   000000FA   0x4770             BX       LR               ;; return
     33          

   \                                 In section .text, align 2, keep-with-next
     34          void Motor_Ctrl()
     35          {  
   \                     Motor_Ctrl: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
     36             Spd_Set();
   \   00000002   0x.... 0x....      BL       Spd_Set
     37             Spd_Ctrl();
   \   00000006   0x.... 0x....      BL       Spd_Ctrl
     38               
     39             //限幅
     40             if(Spd.MotorPWM > 9800)
   \   0000000A   0x....             LDR.N    R0,??DataTable3_1
   \   0000000C   0xF8B0 0x0070      LDRH     R0,[R0, #+112]
   \   00000010   0xF242 0x6149      MOVW     R1,#+9801
   \   00000014   0x4288             CMP      R0,R1
   \   00000016   0xDB05             BLT.N    ??Motor_Ctrl_0
     41               Spd.MotorPWM = 9800;
   \   00000018   0xF242 0x6048      MOVW     R0,#+9800
   \   0000001C   0x....             LDR.N    R1,??DataTable3_1
   \   0000001E   0xF8A1 0x0070      STRH     R0,[R1, #+112]
   \   00000022   0xE008             B.N      ??Motor_Ctrl_1
     42             else if(Spd.MotorPWM < 200)
   \                     ??Motor_Ctrl_0: (+1)
   \   00000024   0x....             LDR.N    R0,??DataTable3_1
   \   00000026   0xF8B0 0x0070      LDRH     R0,[R0, #+112]
   \   0000002A   0x28C8             CMP      R0,#+200
   \   0000002C   0xDA03             BGE.N    ??Motor_Ctrl_1
     43               Spd.MotorPWM = 200;
   \   0000002E   0x20C8             MOVS     R0,#+200
   \   00000030   0x....             LDR.N    R1,??DataTable3_1
   \   00000032   0xF8A1 0x0070      STRH     R0,[R1, #+112]
     44             
     45             //输出
     46             LPLD_FTM_PWM_ChangeDuty(FTM0, FTM_Ch1, 0);
   \                     ??Motor_Ctrl_1: (+1)
   \   00000036   0x2200             MOVS     R2,#+0
   \   00000038   0x2101             MOVS     R1,#+1
   \   0000003A   0x....             LDR.N    R0,??DataTable3_2  ;; 0x40038000
   \   0000003C   0x.... 0x....      BL       LPLD_FTM_PWM_ChangeDuty
     47             LPLD_FTM_PWM_ChangeDuty(FTM0, FTM_Ch2, Spd.MotorPWM);
   \   00000040   0x....             LDR.N    R0,??DataTable3_1
   \   00000042   0xF8B0 0x2070      LDRH     R2,[R0, #+112]
   \   00000046   0x2102             MOVS     R1,#+2
   \   00000048   0x....             LDR.N    R0,??DataTable3_2  ;; 0x40038000
   \   0000004A   0x.... 0x....      BL       LPLD_FTM_PWM_ChangeDuty
     48          }
   \   0000004E   0xBD01             POP      {R0,PC}          ;; return
     49          
     50          

   \                                 In section .text, align 2, keep-with-next
     51          void Spd_Get()
     52          { 
   \                     Spd_Get: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
     53            Spd.feedback = 65536 - LPLD_FTM_GetCounter(FTM2) ; 
   \   00000002   0x....             LDR.N    R0,??DataTable3_3  ;; 0x400b8000
   \   00000004   0x.... 0x....      BL       LPLD_FTM_GetCounter
   \   00000008   0xF5D0 0x3080      RSBS     R0,R0,#+65536
   \   0000000C   0x....             LDR.N    R1,??DataTable3_1
   \   0000000E   0x6108             STR      R0,[R1, #+16]
     54            if(Spd.feedback > 40000)
   \   00000010   0x....             LDR.N    R0,??DataTable3_1
   \   00000012   0x6900             LDR      R0,[R0, #+16]
   \   00000014   0xF649 0x4141      MOVW     R1,#+40001
   \   00000018   0x4288             CMP      R0,R1
   \   0000001A   0xDB02             BLT.N    ??Spd_Get_0
     55              Spd.feedback = 0;   
   \   0000001C   0x2000             MOVS     R0,#+0
   \   0000001E   0x....             LDR.N    R1,??DataTable3_1
   \   00000020   0x6108             STR      R0,[R1, #+16]
     56            LPLD_FTM_ClearCounter(FTM2);     
   \                     ??Spd_Get_0: (+1)
   \   00000022   0x....             LDR.N    R0,??DataTable3_3  ;; 0x400b8000
   \   00000024   0x.... 0x....      BL       LPLD_FTM_ClearCounter
     57          }
   \   00000028   0xBD01             POP      {R0,PC}          ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3:
   \   00000000   0x........         DC32     speed

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_1:
   \   00000000   0x........         DC32     Spd

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_2:
   \   00000000   0x40038000         DC32     0x40038000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_3:
   \   00000000   0x400B8000         DC32     0x400b8000
     58          
     59          
     60          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   Motor_Ctrl
         8   -> LPLD_FTM_PWM_ChangeDuty
         8   -> Spd_Ctrl
         8   -> Spd_Set
       0   Spd_Ctrl
       8   Spd_Get
         8   -> LPLD_FTM_ClearCounter
         8   -> LPLD_FTM_GetCounter
       0   Spd_Set


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable3
       4  ??DataTable3_1
       4  ??DataTable3_2
       4  ??DataTable3_3
      80  Motor_Ctrl
     116  Spd
     252  Spd_Ctrl
      42  Spd_Get
      10  Spd_Set
       4  speed

 
 116 bytes in section .bss
   4 bytes in section .data
 400 bytes in section .text
 
 400 bytes of CODE memory
 120 bytes of DATA memory

Errors: none
Warnings: none
