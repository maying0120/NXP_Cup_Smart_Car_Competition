###############################################################################
#
# IAR ANSI C/C++ Compiler V7.20.2.7424/W32 for ARM        10/Dec/2016  09:44:08
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after\app\Rudder_Ctrl.c
#    Command line =  
#        C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after\app\Rudder_Ctrl.c
#        -D LPLD_K60 -D USE_K60F12 -lCN
#        C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after\iar\RAM\List\
#        -lB
#        C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after\iar\RAM\List\
#        -o
#        C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after\iar\RAM\Obj\
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M4F -e --fpu=VFPv4_sp --dlib_config
#        D:\IAR\arm\INC\c\DLib_Config_Normal.h -I
#        C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after\iar\..\app\
#        -I
#        C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after\iar\..\..\..\lib\CPU\
#        -I
#        C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after\iar\..\..\..\lib\common\
#        -I
#        C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after\iar\..\..\..\lib\LPLD\
#        -I
#        C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after\iar\..\..\..\lib\LPLD\HW\
#        -I
#        C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after\iar\..\..\..\lib\LPLD\DEV\
#        -I
#        C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after\iar\..\..\..\lib\LPLD\FUNC\
#        -I
#        C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after\iar\..\..\..\lib\uCOS-II\Ports\
#        -I
#        C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after\iar\..\..\..\lib\uCOS-II\Source\
#        -I
#        C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after\iar\..\..\..\lib\FatFs\
#        -I
#        C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after\iar\..\..\..\lib\FatFs\option\
#        -I
#        C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after\iar\..\..\..\lib\USB\common\
#        -I
#        C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after\iar\..\..\..\lib\USB\driver\
#        -I
#        C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after\iar\..\..\..\lib\USB\descriptor\
#        -I
#        C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after\iar\..\..\..\lib\USB\class\
#        -Ol -I D:\IAR\arm\CMSIS\Include\ -D ARM_MATH_CM4
#    List file    =  
#        C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after\iar\RAM\List\Rudder_Ctrl.lst
#    Object file  =  
#        C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after\iar\RAM\Obj\Rudder_Ctrl.o
#
###############################################################################

C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after\app\Rudder_Ctrl.c
      1          #include "Includes.h"
      2          

   \                                 In section .bss, align 4
      3          struct Rudder Angle;
   \                     Angle:
   \   00000000                      DS8 60
      4          extern int Distance;

   \                                 In section .data, align 4
      5          int xy = 800;
   \                     xy:
   \   00000000   0x00000320         DC32 800
      6          

   \                                 In section .text, align 4, keep-with-next
      7          void Rudder_Ctrl()
      8          {
   \                     Rudder_Ctrl: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
      9            //PID调节
     10            if(fabs(Distance) < 10)
   \   00000002   0x484A             LDR.N    R0,??Rudder_Ctrl_0+0x8
   \   00000004   0x6800             LDR      R0,[R0, #+0]
   \   00000006   0x.... 0x....      BL       __aeabi_i2d
   \   0000000A   0xF031 0x4100      BICS     R1,R1,#0x80000000
   \   0000000E   0x2200             MOVS     R2,#+0
   \   00000010   0x4B47             LDR.N    R3,??Rudder_Ctrl_0+0xC  ;; 0x40240000
   \   00000012   0x.... 0x....      BL       __aeabi_cdcmple
   \   00000016   0xD204             BCS.N    ??Rudder_Ctrl_1
     11              Angle.P = 4.0;
   \   00000018   0x4846             LDR.N    R0,??Rudder_Ctrl_0+0x10
   \   0000001A   0xF05F 0x4181      MOVS     R1,#+1082130432
   \   0000001E   0x6301             STR      R1,[R0, #+48]
   \   00000020   0xE018             B.N      ??Rudder_Ctrl_2
     12            else
     13              Angle.P = 4.0 + 0.3*fabs(fabs(Distance)-10);
   \                     ??Rudder_Ctrl_1: (+1)
   \   00000022   0x4842             LDR.N    R0,??Rudder_Ctrl_0+0x8
   \   00000024   0x6800             LDR      R0,[R0, #+0]
   \   00000026   0x.... 0x....      BL       __aeabi_i2d
   \   0000002A   0xF031 0x4100      BICS     R1,R1,#0x80000000
   \   0000002E   0x2200             MOVS     R2,#+0
   \   00000030   0x4B41             LDR.N    R3,??Rudder_Ctrl_0+0x14  ;; 0xc0240000
   \   00000032   0x.... 0x....      BL       __aeabi_dadd
   \   00000036   0xF031 0x4100      BICS     R1,R1,#0x80000000
   \   0000003A   0xF05F 0x3233      MOVS     R2,#+858993459
   \   0000003E   0x4B3F             LDR.N    R3,??Rudder_Ctrl_0+0x18  ;; 0x3fd33333
   \   00000040   0x.... 0x....      BL       __aeabi_dmul
   \   00000044   0x2200             MOVS     R2,#+0
   \   00000046   0x4B3E             LDR.N    R3,??Rudder_Ctrl_0+0x1C  ;; 0x40100000
   \   00000048   0x.... 0x....      BL       __aeabi_dadd
   \   0000004C   0x.... 0x....      BL       __aeabi_d2f
   \   00000050   0x4938             LDR.N    R1,??Rudder_Ctrl_0+0x10
   \   00000052   0x6308             STR      R0,[R1, #+48]
     14            if(Angle.P > 9)
   \                     ??Rudder_Ctrl_2: (+1)
   \   00000054   0x4837             LDR.N    R0,??Rudder_Ctrl_0+0x10
   \   00000056   0xED90 0x0A0C      VLDR     S0,[R0, #+48]
   \   0000005A   0xEDDF 0x0A32      VLDR.W   S1,??Rudder_Ctrl_0  ;; 0x41100001
   \   0000005E   0xEEB4 0x0A60      VCMP.F32 S0,S1
   \   00000062   0xEEF1 0xFA10      FMSTAT   
   \   00000066   0xDB02             BLT.N    ??Rudder_Ctrl_3
     15              Angle.P = 9; 
   \   00000068   0x4832             LDR.N    R0,??Rudder_Ctrl_0+0x10
   \   0000006A   0x4936             LDR.N    R1,??Rudder_Ctrl_0+0x20  ;; 0x41100000
   \   0000006C   0x6301             STR      R1,[R0, #+48]
     16            
     17            Angle.D = 0;
   \                     ??Rudder_Ctrl_3: (+1)
   \   0000006E   0x4831             LDR.N    R0,??Rudder_Ctrl_0+0x10
   \   00000070   0x2100             MOVS     R1,#+0
   \   00000072   0x6341             STR      R1,[R0, #+52]
     18            Angle.error = -Distance;
   \   00000074   0x482D             LDR.N    R0,??Rudder_Ctrl_0+0x8
   \   00000076   0x6800             LDR      R0,[R0, #+0]
   \   00000078   0x4240             RSBS     R0,R0,#+0
   \   0000007A   0x492E             LDR.N    R1,??Rudder_Ctrl_0+0x10
   \   0000007C   0x6008             STR      R0,[R1, #+0]
     19            Angle.drror = Angle.error - Angle.error_pre[5];
   \   0000007E   0x482D             LDR.N    R0,??Rudder_Ctrl_0+0x10
   \   00000080   0x6800             LDR      R0,[R0, #+0]
   \   00000082   0x492C             LDR.N    R1,??Rudder_Ctrl_0+0x10
   \   00000084   0x69C9             LDR      R1,[R1, #+28]
   \   00000086   0x1A40             SUBS     R0,R0,R1
   \   00000088   0x492A             LDR.N    R1,??Rudder_Ctrl_0+0x10
   \   0000008A   0x6048             STR      R0,[R1, #+4]
     20            Angle.RudderPWM = (uint16)(Rudder_Mid + Angle.P*Angle.error + Angle.D*Angle.drror); 
   \   0000008C   0x4829             LDR.N    R0,??Rudder_Ctrl_0+0x10
   \   0000008E   0xED90 0x0A00      VLDR     S0,[R0, #0]
   \   00000092   0xEEB8 0x0AC0      VCVT.F32.S32 S0,S0
   \   00000096   0x4827             LDR.N    R0,??Rudder_Ctrl_0+0x10
   \   00000098   0xEDD0 0x0A0C      VLDR     S1,[R0, #+48]
   \   0000009C   0xED9F 0x1A22      VLDR.W   S2,??Rudder_Ctrl_0+0x4  ;; 0x4473c000
   \   000000A0   0xEE00 0x1A20      VMLA.F32 S2,S0,S1
   \   000000A4   0x4823             LDR.N    R0,??Rudder_Ctrl_0+0x10
   \   000000A6   0xED90 0x0A01      VLDR     S0,[R0, #+4]
   \   000000AA   0xEEB8 0x0AC0      VCVT.F32.S32 S0,S0
   \   000000AE   0x4821             LDR.N    R0,??Rudder_Ctrl_0+0x10
   \   000000B0   0xEDD0 0x0A0D      VLDR     S1,[R0, #+52]
   \   000000B4   0xEE00 0x1A20      VMLA.F32 S2,S0,S1
   \   000000B8   0xEEBD 0x0AC1      VCVT.S32.F32 S0,S2
   \   000000BC   0xEE10 0x0A10      VMOV     R0,S0
   \   000000C0   0x491C             LDR.N    R1,??Rudder_Ctrl_0+0x10
   \   000000C2   0x8708             STRH     R0,[R1, #+56]
     21            
     22            //参数更新
     23            Angle.error_pre[9] = Angle.error;
   \   000000C4   0x481B             LDR.N    R0,??Rudder_Ctrl_0+0x10
   \   000000C6   0x6800             LDR      R0,[R0, #+0]
   \   000000C8   0x491A             LDR.N    R1,??Rudder_Ctrl_0+0x10
   \   000000CA   0x62C8             STR      R0,[R1, #+44]
     24            for(uint8 i=0; i<9; i++)
   \   000000CC   0x2000             MOVS     R0,#+0
   \   000000CE   0xE00A             B.N      ??Rudder_Ctrl_4
     25              Angle.error_pre[i] = Angle.error_pre[i];
   \                     ??Rudder_Ctrl_5: (+1)
   \   000000D0   0x4918             LDR.N    R1,??Rudder_Ctrl_0+0x10
   \   000000D2   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000D4   0xEB11 0x0180      ADDS     R1,R1,R0, LSL #+2
   \   000000D8   0x6889             LDR      R1,[R1, #+8]
   \   000000DA   0x4A16             LDR.N    R2,??Rudder_Ctrl_0+0x10
   \   000000DC   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000DE   0xEB12 0x0280      ADDS     R2,R2,R0, LSL #+2
   \   000000E2   0x6091             STR      R1,[R2, #+8]
   \   000000E4   0x1C40             ADDS     R0,R0,#+1
   \                     ??Rudder_Ctrl_4: (+1)
   \   000000E6   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000E8   0x2809             CMP      R0,#+9
   \   000000EA   0xDBF1             BLT.N    ??Rudder_Ctrl_5
     26            
     27            //限幅保护  
     28            if(Angle.RudderPWM > Rudder_Max)
   \   000000EC   0x4811             LDR.N    R0,??Rudder_Ctrl_0+0x10
   \   000000EE   0x8F00             LDRH     R0,[R0, #+56]
   \   000000F0   0xF240 0x4125      MOVW     R1,#+1061
   \   000000F4   0x4288             CMP      R0,R1
   \   000000F6   0xDB04             BLT.N    ??Rudder_Ctrl_6
     29              Angle.RudderPWM = Rudder_Max;
   \   000000F8   0xF240 0x4024      MOVW     R0,#+1060
   \   000000FC   0x490D             LDR.N    R1,??Rudder_Ctrl_0+0x10
   \   000000FE   0x8708             STRH     R0,[R1, #+56]
   \   00000100   0xE008             B.N      ??Rudder_Ctrl_7
     30            else if(Angle.RudderPWM < Rudder_Min)
   \                     ??Rudder_Ctrl_6: (+1)
   \   00000102   0x480C             LDR.N    R0,??Rudder_Ctrl_0+0x10
   \   00000104   0x8F00             LDRH     R0,[R0, #+56]
   \   00000106   0xF5B0 0x7F5C      CMP      R0,#+880
   \   0000010A   0xDA03             BGE.N    ??Rudder_Ctrl_7
     31              Angle.RudderPWM = Rudder_Min;
   \   0000010C   0xF44F 0x705C      MOV      R0,#+880
   \   00000110   0x4908             LDR.N    R1,??Rudder_Ctrl_0+0x10
   \   00000112   0x8708             STRH     R0,[R1, #+56]
     32            
     33            LPLD_FTM_PWM_ChangeDuty(FTM3, FTM_Ch0, Angle.RudderPWM);
   \                     ??Rudder_Ctrl_7: (+1)
   \   00000114   0x4807             LDR.N    R0,??Rudder_Ctrl_0+0x10
   \   00000116   0x8F02             LDRH     R2,[R0, #+56]
   \   00000118   0x2100             MOVS     R1,#+0
   \   0000011A   0x480B             LDR.N    R0,??Rudder_Ctrl_0+0x24  ;; 0x400b9000
   \   0000011C   0x.... 0x....      BL       LPLD_FTM_PWM_ChangeDuty
     34          }
   \   00000120   0xBD01             POP      {R0,PC}          ;; return
   \   00000122   0xBF00             Nop      
   \                     ??Rudder_Ctrl_0:
   \   00000124   0x41100001         DC32     0x41100001
   \   00000128   0x4473C000         DC32     0x4473c000
   \   0000012C   0x........         DC32     Distance
   \   00000130   0x40240000         DC32     0x40240000
   \   00000134   0x........         DC32     Angle
   \   00000138   0xC0240000         DC32     0xc0240000
   \   0000013C   0x3FD33333         DC32     0x3fd33333
   \   00000140   0x40100000         DC32     0x40100000
   \   00000144   0x41100000         DC32     0x41100000
   \   00000148   0x400B9000         DC32     0x400b9000
     35          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   Rudder_Ctrl
         8   -> LPLD_FTM_PWM_ChangeDuty
         8   -> __aeabi_d2f
         8   -> __aeabi_dadd
         8   -> __aeabi_dmul
         8   -> __aeabi_i2d
         8 __aeabi_cdcmple


   Section sizes:

   Bytes  Function/Label
   -----  --------------
      60  Angle
     332  Rudder_Ctrl
       4  xy

 
  60 bytes in section .bss
   4 bytes in section .data
 332 bytes in section .text
 
 332 bytes of CODE memory
  64 bytes of DATA memory

Errors: none
Warnings: none
