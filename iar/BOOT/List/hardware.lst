###############################################################################
#
# IAR ANSI C/C++ Compiler V7.20.2.7424/W32 for ARM        01/Mar/2017  17:00:28
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after合并程序(0228)\app\hardware.c
#    Command line =  
#        "C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after合并程序(0228)\app\hardware.c"
#        -D LPLD_K60 -D USE_K60F12 -lCN
#        "C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after合并程序(0228)\iar\BOOT\List\"
#        -lB
#        "C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after合并程序(0228)\iar\BOOT\List\"
#        -o
#        "C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after合并程序(0228)\iar\BOOT\Obj\"
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M4F -e --fpu=VFPv4_sp --dlib_config
#        D:\IAR\arm\INC\c\DLib_Config_Normal.h -I
#        "C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after合并程序(0228)\iar\..\app\"
#        -I
#        "C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after合并程序(0228)\iar\..\..\..\lib\CPU\"
#        -I
#        "C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after合并程序(0228)\iar\..\..\..\lib\common\"
#        -I
#        "C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after合并程序(0228)\iar\..\..\..\lib\LPLD\"
#        -I
#        "C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after合并程序(0228)\iar\..\..\..\lib\LPLD\HW\"
#        -I
#        "C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after合并程序(0228)\iar\..\..\..\lib\LPLD\DEV\"
#        -I
#        "C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after合并程序(0228)\iar\..\..\..\lib\LPLD\FUNC\"
#        -I
#        "C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after合并程序(0228)\iar\..\..\..\lib\uCOS-II\Ports\"
#        -I
#        "C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after合并程序(0228)\iar\..\..\..\lib\uCOS-II\Source\"
#        -I
#        "C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after合并程序(0228)\iar\..\..\..\lib\FatFs\"
#        -I
#        "C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after合并程序(0228)\iar\..\..\..\lib\FatFs\option\"
#        -I
#        "C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after合并程序(0228)\iar\..\..\..\lib\USB\common\"
#        -I
#        "C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after合并程序(0228)\iar\..\..\..\lib\USB\driver\"
#        -I
#        "C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after合并程序(0228)\iar\..\..\..\lib\USB\descriptor\"
#        -I
#        "C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after合并程序(0228)\iar\..\..\..\lib\USB\class\"
#        -Ol -I D:\IAR\arm\CMSIS\Include\ -D ARM_MATH_CM4
#    List file    =  
#        C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after合并程序(0228)\iar\BOOT\List\hardware.lst
#    Object file  =  
#        C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after合并程序(0228)\iar\BOOT\Obj\hardware.o
#
###############################################################################

C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after合并程序(0228)\app\hardware.c
      1          #include "Includes.h"
      2          extern uint8 Turn_Around;
      3          

   \                                 In section .text, align 2, keep-with-next
      4          void HardwareInit()
      5          {  
   \                     HardwareInit: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
      6            bluetooth_uart4_init();
   \   00000002   0x.... 0x....      BL       bluetooth_uart4_init
      7            LPLD_LPTMR_DelayMs(500); 
   \   00000006   0xF44F 0x70FA      MOV      R0,#+500
   \   0000000A   0x.... 0x....      BL       LPLD_LPTMR_DelayMs
      8            hcsr04_init();
   \   0000000E   0x.... 0x....      BL       hcsr04_init
      9            pit_hcsr04_init();
   \   00000012   0x.... 0x....      BL       pit_hcsr04_init
     10            nvic_init();
   \   00000016   0x.... 0x....      BL       nvic_init
     11            sensor_adc_init();
   \   0000001A   0x.... 0x....      BL       sensor_adc_init
     12            Rudder_ftm2_init();
   \   0000001E   0x.... 0x....      BL       Rudder_ftm2_init
     13            Motor_ftm0_init();
   \   00000022   0x.... 0x....      BL       Motor_ftm0_init
     14            qd_ftm1_init();
   \   00000026   0x.... 0x....      BL       qd_ftm1_init
     15            pit_10ms_init();  
   \   0000002A   0x.... 0x....      BL       pit_10ms_init
     16            Led_init();
   \   0000002E   0x.... 0x....      BL       Led_init
     17          }
   \   00000032   0xBD01             POP      {R0,PC}          ;; return
     18          

   \                                 In section .text, align 2, keep-with-next
     19          void bluetooth_uart4_init()
     20          {
   \                     bluetooth_uart4_init: (+1)
   \   00000000   0xB500             PUSH     {LR}
   \   00000002   0xB08B             SUB      SP,SP,#+44
     21            UART_InitTypeDef  uart4_init_struct;
     22            uart4_init_struct.UART_Uartx = UART4;         //使用UART3	
   \   00000004   0x.... 0x....      LDR.W    R0,??DataTable9  ;; 0x400ea000
   \   00000008   0x9003             STR      R0,[SP, #+12]
     23            uart4_init_struct.UART_BaudRate = 9600;     //设置波特率9600
   \   0000000A   0xF44F 0x5016      MOV      R0,#+9600
   \   0000000E   0x9004             STR      R0,[SP, #+16]
     24            uart4_init_struct.UART_RxIntEnable = TRUE;
   \   00000010   0x2001             MOVS     R0,#+1
   \   00000012   0xF88D 0x0016      STRB     R0,[SP, #+22]
     25            uart4_init_struct.UART_TxPin = PTE24;          
   \   00000016   0x2094             MOVS     R0,#+148
   \   00000018   0xF88D 0x0014      STRB     R0,[SP, #+20]
     26            uart4_init_struct.UART_RxPin = PTE25;       
   \   0000001C   0x2095             MOVS     R0,#+149
   \   0000001E   0xF88D 0x0015      STRB     R0,[SP, #+21]
     27            uart4_init_struct.UART_RxIsr = RecData;
   \   00000022   0x.... 0x....      LDR.W    R0,??DataTable9_1
   \   00000026   0x9008             STR      R0,[SP, #+32]
     28            LPLD_UART_Init(uart4_init_struct);
   \   00000028   0xA903             ADD      R1,SP,#+12
   \   0000002A   0xB084             SUB      SP,SP,#+16
   \   0000002C   0x4668             MOV      R0,SP
   \   0000002E   0x221C             MOVS     R2,#+28
   \   00000030   0x.... 0x....      BL       __aeabi_memcpy4
   \   00000034   0xBC0F             POP      {R0-R3}
   \   00000036   0x.... 0x....      BL       LPLD_UART_Init
     29            LPLD_UART_EnableIrq(uart4_init_struct);
   \   0000003A   0xA903             ADD      R1,SP,#+12
   \   0000003C   0xB084             SUB      SP,SP,#+16
   \   0000003E   0x4668             MOV      R0,SP
   \   00000040   0x221C             MOVS     R2,#+28
   \   00000042   0x.... 0x....      BL       __aeabi_memcpy4
   \   00000046   0xBC0F             POP      {R0-R3}
   \   00000048   0x.... 0x....      BL       LPLD_UART_EnableIrq
     30          }
   \   0000004C   0xB00B             ADD      SP,SP,#+44
   \   0000004E   0xBD00             POP      {PC}             ;; return
     31          
     32          

   \                                 In section .text, align 2, keep-with-next
     33          void hcsr04_init()
     34          {
   \                     hcsr04_init: (+1)
   \   00000000   0xB500             PUSH     {LR}
   \   00000002   0xB087             SUB      SP,SP,#+28
     35            //超声波回响信号：PTA10作为ECHO
     36            GPIO_InitTypeDef  hc_echo_init_struct;
     37            hc_echo_init_struct.GPIO_PTx = PTA;
   \   00000004   0x....             LDR.N    R0,??DataTable9_2  ;; 0x400ff000
   \   00000006   0x9001             STR      R0,[SP, #+4]
     38            hc_echo_init_struct.GPIO_Pins = GPIO_Pin10;
   \   00000008   0xF44F 0x6080      MOV      R0,#+1024
   \   0000000C   0x9002             STR      R0,[SP, #+8]
     39            hc_echo_init_struct.GPIO_PinControl = IRQC_ET;
   \   0000000E   0xF45F 0x2030      MOVS     R0,#+720896
   \   00000012   0x9003             STR      R0,[SP, #+12]
     40            hc_echo_init_struct.GPIO_Dir = DIR_INPUT;
   \   00000014   0x2000             MOVS     R0,#+0
   \   00000016   0xF88D 0x0010      STRB     R0,[SP, #+16]
     41            hc_echo_init_struct.GPIO_Isr = Dis_measure;
   \   0000001A   0x....             LDR.N    R0,??DataTable9_3
   \   0000001C   0x9005             STR      R0,[SP, #+20]
     42            LPLD_GPIO_Init(hc_echo_init_struct);    
   \   0000001E   0xA901             ADD      R1,SP,#+4
   \   00000020   0xB084             SUB      SP,SP,#+16
   \   00000022   0x4668             MOV      R0,SP
   \   00000024   0x2214             MOVS     R2,#+20
   \   00000026   0x.... 0x....      BL       __aeabi_memcpy4
   \   0000002A   0xBC0F             POP      {R0-R3}
   \   0000002C   0x.... 0x....      BL       LPLD_GPIO_Init
     43            LPLD_GPIO_EnableIrq(hc_echo_init_struct);
   \   00000030   0xA901             ADD      R1,SP,#+4
   \   00000032   0xB084             SUB      SP,SP,#+16
   \   00000034   0x4668             MOV      R0,SP
   \   00000036   0x2214             MOVS     R2,#+20
   \   00000038   0x.... 0x....      BL       __aeabi_memcpy4
   \   0000003C   0xBC0F             POP      {R0-R3}
   \   0000003E   0x.... 0x....      BL       LPLD_GPIO_EnableIrq
     44          }
   \   00000042   0xB007             ADD      SP,SP,#+28
   \   00000044   0xBD00             POP      {PC}             ;; return
     45          

   \                                 In section .text, align 2, keep-with-next
     46          void pit_10ms_init(void)
     47          {
   \                     pit_10ms_init: (+1)
   \   00000000   0xB500             PUSH     {LR}
   \   00000002   0xB087             SUB      SP,SP,#+28
     48            PIT_InitTypeDef  pit0_init_struct; 
     49            pit0_init_struct.PIT_Pitx = PIT0;
   \   00000004   0x2000             MOVS     R0,#+0
   \   00000006   0xF88D 0x0004      STRB     R0,[SP, #+4]
     50            pit0_init_struct.PIT_PeriodS = 0;
   \   0000000A   0x2000             MOVS     R0,#+0
   \   0000000C   0x9004             STR      R0,[SP, #+16]
     51            pit0_init_struct.PIT_PeriodUs = 0;
   \   0000000E   0x2000             MOVS     R0,#+0
   \   00000010   0x9002             STR      R0,[SP, #+8]
     52            pit0_init_struct.PIT_PeriodMs = 10;  //定时周期5ms
   \   00000012   0x200A             MOVS     R0,#+10
   \   00000014   0x9003             STR      R0,[SP, #+12]
     53            pit0_init_struct.PIT_Isr = pit_10ms;//设置中断函数
   \   00000016   0x....             LDR.N    R0,??DataTable9_4
   \   00000018   0x9005             STR      R0,[SP, #+20]
     54            LPLD_PIT_Init(pit0_init_struct);    //初始化PIT0
   \   0000001A   0xA901             ADD      R1,SP,#+4
   \   0000001C   0xB084             SUB      SP,SP,#+16
   \   0000001E   0x4668             MOV      R0,SP
   \   00000020   0x2214             MOVS     R2,#+20
   \   00000022   0x.... 0x....      BL       __aeabi_memcpy4
   \   00000026   0xBC0F             POP      {R0-R3}
   \   00000028   0x.... 0x....      BL       LPLD_PIT_Init
     55            LPLD_PIT_EnableIrq(pit0_init_struct);
   \   0000002C   0xA901             ADD      R1,SP,#+4
   \   0000002E   0xB084             SUB      SP,SP,#+16
   \   00000030   0x4668             MOV      R0,SP
   \   00000032   0x2214             MOVS     R2,#+20
   \   00000034   0x.... 0x....      BL       __aeabi_memcpy4
   \   00000038   0xBC0F             POP      {R0-R3}
   \   0000003A   0x.... 0x....      BL       LPLD_PIT_EnableIrq
     56          }
   \   0000003E   0xB007             ADD      SP,SP,#+28
   \   00000040   0xBD00             POP      {PC}             ;; return
     57          

   \                                 In section .text, align 2, keep-with-next
     58          void nvic_init()
     59          {
   \                     nvic_init: (+1)
   \   00000000   0xB500             PUSH     {LR}
   \   00000002   0xB087             SUB      SP,SP,#+28
     60            NVIC_InitTypeDef nvic_init_struct;
     61           
     62            //配置PIT0_IRQn的抢占优先级为1
     63            nvic_init_struct.NVIC_IRQChannel = PIT0_IRQn;
   \   00000004   0x2044             MOVS     R0,#+68
   \   00000006   0xF88D 0x0004      STRB     R0,[SP, #+4]
     64            nvic_init_struct.NVIC_IRQChannelGroupPriority = NVIC_PriorityGroup_2;
   \   0000000A   0x2005             MOVS     R0,#+5
   \   0000000C   0x9002             STR      R0,[SP, #+8]
     65            nvic_init_struct.NVIC_IRQChannelPreemptionPriority = 2;
   \   0000000E   0x2002             MOVS     R0,#+2
   \   00000010   0x9003             STR      R0,[SP, #+12]
     66            LPLD_NVIC_Init(nvic_init_struct);
   \   00000012   0xA901             ADD      R1,SP,#+4
   \   00000014   0xB084             SUB      SP,SP,#+16
   \   00000016   0x4668             MOV      R0,SP
   \   00000018   0x2214             MOVS     R2,#+20
   \   0000001A   0x.... 0x....      BL       __aeabi_memcpy4
   \   0000001E   0xBC0F             POP      {R0-R3}
   \   00000020   0x.... 0x....      BL       LPLD_NVIC_Init
     67          
     68            //配置PORTA_IRQn的抢占优先级为0
     69            nvic_init_struct.NVIC_IRQChannel = PORTA_IRQn;
   \   00000024   0x2057             MOVS     R0,#+87
   \   00000026   0xF88D 0x0004      STRB     R0,[SP, #+4]
     70            nvic_init_struct.NVIC_IRQChannelGroupPriority = NVIC_PriorityGroup_2;
   \   0000002A   0x2005             MOVS     R0,#+5
   \   0000002C   0x9002             STR      R0,[SP, #+8]
     71            nvic_init_struct.NVIC_IRQChannelPreemptionPriority = 0;
   \   0000002E   0x2000             MOVS     R0,#+0
   \   00000030   0x9003             STR      R0,[SP, #+12]
     72            nvic_init_struct.NVIC_IRQChannelEnable = TRUE;
   \   00000032   0x2001             MOVS     R0,#+1
   \   00000034   0xF88D 0x0014      STRB     R0,[SP, #+20]
     73            LPLD_NVIC_Init(nvic_init_struct);
   \   00000038   0xA901             ADD      R1,SP,#+4
   \   0000003A   0xB084             SUB      SP,SP,#+16
   \   0000003C   0x4668             MOV      R0,SP
   \   0000003E   0x2214             MOVS     R2,#+20
   \   00000040   0x.... 0x....      BL       __aeabi_memcpy4
   \   00000044   0xBC0F             POP      {R0-R3}
   \   00000046   0x.... 0x....      BL       LPLD_NVIC_Init
     74            
     75            //配置UART4_IRQn的抢占优先级为2
     76            nvic_init_struct.NVIC_IRQChannel = UART4_RX_TX_IRQn;
   \   0000004A   0x2035             MOVS     R0,#+53
   \   0000004C   0xF88D 0x0004      STRB     R0,[SP, #+4]
     77            nvic_init_struct.NVIC_IRQChannelGroupPriority = NVIC_PriorityGroup_2;
   \   00000050   0x2005             MOVS     R0,#+5
   \   00000052   0x9002             STR      R0,[SP, #+8]
     78            nvic_init_struct.NVIC_IRQChannelPreemptionPriority = 1;
   \   00000054   0x2001             MOVS     R0,#+1
   \   00000056   0x9003             STR      R0,[SP, #+12]
     79            nvic_init_struct.NVIC_IRQChannelEnable = TRUE;
   \   00000058   0x2001             MOVS     R0,#+1
   \   0000005A   0xF88D 0x0014      STRB     R0,[SP, #+20]
     80            LPLD_NVIC_Init(nvic_init_struct);
   \   0000005E   0xA901             ADD      R1,SP,#+4
   \   00000060   0xB084             SUB      SP,SP,#+16
   \   00000062   0x4668             MOV      R0,SP
   \   00000064   0x2214             MOVS     R2,#+20
   \   00000066   0x.... 0x....      BL       __aeabi_memcpy4
   \   0000006A   0xBC0F             POP      {R0-R3}
   \   0000006C   0x.... 0x....      BL       LPLD_NVIC_Init
     81          }
   \   00000070   0xB007             ADD      SP,SP,#+28
   \   00000072   0xBD00             POP      {PC}             ;; return
     82          

   \                                 In section .text, align 2, keep-with-next
     83          void sensor_adc_init()
     84          {
   \                     sensor_adc_init: (+1)
   \   00000000   0xB500             PUSH     {LR}
   \   00000002   0xB087             SUB      SP,SP,#+28
     85            ADC_InitTypeDef sensor1_adc_init;
     86            sensor1_adc_init.ADC_Adcx = ADC1;	
   \   00000004   0x....             LDR.N    R0,??DataTable9_5  ;; 0x400bb000
   \   00000006   0x9001             STR      R0,[SP, #+4]
     87            sensor1_adc_init.ADC_DiffMode = ADC_SE;       //单端采集	
   \   00000008   0x2000             MOVS     R0,#+0
   \   0000000A   0xF88D 0x0008      STRB     R0,[SP, #+8]
     88            sensor1_adc_init.ADC_BitMode = SE_8BIT;       //单端8位精度	
   \   0000000E   0x2000             MOVS     R0,#+0
   \   00000010   0xF88D 0x0009      STRB     R0,[SP, #+9]
     89            sensor1_adc_init.ADC_SampleTimeCfg = SAMTIME_SHORT;    //短采样时间	
   \   00000014   0x2000             MOVS     R0,#+0
   \   00000016   0xF88D 0x000A      STRB     R0,[SP, #+10]
     90            sensor1_adc_init.ADC_HwAvgSel = HW_4AVG;       //禁用硬件平均	
   \   0000001A   0x2004             MOVS     R0,#+4
   \   0000001C   0xF88D 0x000C      STRB     R0,[SP, #+12]
     91            sensor1_adc_init.ADC_CalEnable = TRUE; //使能初始化校验	
   \   00000020   0x2001             MOVS     R0,#+1
   \   00000022   0xF88D 0x000F      STRB     R0,[SP, #+15]
     92            sensor1_adc_init.ADC_MuxSel = MUX_ADXXA;
   \   00000026   0x2000             MOVS     R0,#+0
   \   00000028   0xF88D 0x000E      STRB     R0,[SP, #+14]
     93            LPLD_ADC_Init(sensor1_adc_init);
   \   0000002C   0xA901             ADD      R1,SP,#+4
   \   0000002E   0xB084             SUB      SP,SP,#+16
   \   00000030   0x4668             MOV      R0,SP
   \   00000032   0x2214             MOVS     R2,#+20
   \   00000034   0x.... 0x....      BL       __aeabi_memcpy4
   \   00000038   0xBC0F             POP      {R0-R3}
   \   0000003A   0x.... 0x....      BL       LPLD_ADC_Init
     94            LPLD_ADC_Chn_Enable(ADC1, AD13);     //AD5--5
   \   0000003E   0x210D             MOVS     R1,#+13
   \   00000040   0x....             LDR.N    R0,??DataTable9_5  ;; 0x400bb000
   \   00000042   0x.... 0x....      BL       LPLD_ADC_Chn_Enable
     95            LPLD_ADC_Chn_Enable(ADC1, AD12);    //AD6--0
   \   00000046   0x210C             MOVS     R1,#+12
   \   00000048   0x....             LDR.N    R0,??DataTable9_5  ;; 0x400bb000
   \   0000004A   0x.... 0x....      BL       LPLD_ADC_Chn_Enable
     96            LPLD_ADC_Chn_Enable(ADC1, AD14);    //AD8--1
   \   0000004E   0x210E             MOVS     R1,#+14
   \   00000050   0x....             LDR.N    R0,??DataTable9_5  ;; 0x400bb000
   \   00000052   0x.... 0x....      BL       LPLD_ADC_Chn_Enable
     97            LPLD_ADC_Chn_Enable(ADC1, AD15);    //AD7--2
   \   00000056   0x210F             MOVS     R1,#+15
   \   00000058   0x....             LDR.N    R0,??DataTable9_5  ;; 0x400bb000
   \   0000005A   0x.... 0x....      BL       LPLD_ADC_Chn_Enable
     98            LPLD_ADC_Chn_Enable(ADC1, AD10);    //AD4--3
   \   0000005E   0x210A             MOVS     R1,#+10
   \   00000060   0x....             LDR.N    R0,??DataTable9_5  ;; 0x400bb000
   \   00000062   0x.... 0x....      BL       LPLD_ADC_Chn_Enable
     99            LPLD_ADC_Chn_Enable(ADC1, AD11);    //AD3--4
   \   00000066   0x210B             MOVS     R1,#+11
   \   00000068   0x....             LDR.N    R0,??DataTable9_5  ;; 0x400bb000
   \   0000006A   0x.... 0x....      BL       LPLD_ADC_Chn_Enable
    100            LPLD_ADC_Chn_Enable(ADC1, AD8);     //AD2--6
   \   0000006E   0x2108             MOVS     R1,#+8
   \   00000070   0x....             LDR.N    R0,??DataTable9_5  ;; 0x400bb000
   \   00000072   0x.... 0x....      BL       LPLD_ADC_Chn_Enable
    101          }
   \   00000076   0xB007             ADD      SP,SP,#+28
   \   00000078   0xBD00             POP      {PC}             ;; return
    102          

   \                                 In section .text, align 2, keep-with-next
    103          void Rudder_ftm2_init()
    104          {
   \                     Rudder_ftm2_init: (+1)
   \   00000000   0xB500             PUSH     {LR}
   \   00000002   0xB08B             SUB      SP,SP,#+44
    105            FTM_InitTypeDef Rudder_ftm2_init;
    106            Rudder_ftm2_init.FTM_Ftmx = FTM2;           
   \   00000004   0x....             LDR.N    R0,??DataTable9_6  ;; 0x400b8000
   \   00000006   0x9003             STR      R0,[SP, #+12]
    107            Rudder_ftm2_init.FTM_Mode = FTM_MODE_PWM;   
   \   00000008   0x2001             MOVS     R0,#+1
   \   0000000A   0xF88D 0x0010      STRB     R0,[SP, #+16]
    108            Rudder_ftm2_init.FTM_PwmFreq = 180;          
   \   0000000E   0x20B4             MOVS     R0,#+180
   \   00000010   0x9005             STR      R0,[SP, #+20]
    109            Rudder_ftm2_init.FTM_Isr = NULL;
   \   00000012   0x2000             MOVS     R0,#+0
   \   00000014   0x9009             STR      R0,[SP, #+36]
    110            LPLD_FTM_Init(Rudder_ftm2_init);    
   \   00000016   0xA903             ADD      R1,SP,#+12
   \   00000018   0xB084             SUB      SP,SP,#+16
   \   0000001A   0x4668             MOV      R0,SP
   \   0000001C   0x221C             MOVS     R2,#+28
   \   0000001E   0x.... 0x....      BL       __aeabi_memcpy4
   \   00000022   0xBC0F             POP      {R0-R3}
   \   00000024   0x.... 0x....      BL       LPLD_FTM_Init
    111            LPLD_FTM_PWM_Enable(FTM2, FTM_Ch1, 650, PTA11, ALIGN_LEFT); 
   \   00000028   0x2028             MOVS     R0,#+40
   \   0000002A   0x9000             STR      R0,[SP, #+0]
   \   0000002C   0x230B             MOVS     R3,#+11
   \   0000002E   0xF240 0x228A      MOVW     R2,#+650
   \   00000032   0x2101             MOVS     R1,#+1
   \   00000034   0x....             LDR.N    R0,??DataTable9_6  ;; 0x400b8000
   \   00000036   0x.... 0x....      BL       LPLD_FTM_PWM_Enable
    112          }
   \   0000003A   0xB00B             ADD      SP,SP,#+44
   \   0000003C   0xBD00             POP      {PC}             ;; return
    113          

   \                                 In section .text, align 2, keep-with-next
    114          void Motor_ftm0_init()
    115          {
   \                     Motor_ftm0_init: (+1)
   \   00000000   0xB500             PUSH     {LR}
   \   00000002   0xB08B             SUB      SP,SP,#+44
    116            FTM_InitTypeDef motor_ftm0_init;
    117            motor_ftm0_init.FTM_Ftmx = FTM0;           
   \   00000004   0x....             LDR.N    R0,??DataTable9_7  ;; 0x40038000
   \   00000006   0x9003             STR      R0,[SP, #+12]
    118            motor_ftm0_init.FTM_Mode = FTM_MODE_PWM;   
   \   00000008   0x2001             MOVS     R0,#+1
   \   0000000A   0xF88D 0x0010      STRB     R0,[SP, #+16]
    119            motor_ftm0_init.FTM_PwmFreq = 20000;          
   \   0000000E   0xF644 0x6020      MOVW     R0,#+20000
   \   00000012   0x9005             STR      R0,[SP, #+20]
    120            motor_ftm0_init.FTM_Isr = NULL;
   \   00000014   0x2000             MOVS     R0,#+0
   \   00000016   0x9009             STR      R0,[SP, #+36]
    121            LPLD_FTM_Init(motor_ftm0_init);    
   \   00000018   0xA903             ADD      R1,SP,#+12
   \   0000001A   0xB084             SUB      SP,SP,#+16
   \   0000001C   0x4668             MOV      R0,SP
   \   0000001E   0x221C             MOVS     R2,#+28
   \   00000020   0x.... 0x....      BL       __aeabi_memcpy4
   \   00000024   0xBC0F             POP      {R0-R3}
   \   00000026   0x.... 0x....      BL       LPLD_FTM_Init
    122            LPLD_FTM_PWM_Enable(FTM0, FTM_Ch1, 0, PTA4, ALIGN_LEFT); 
   \   0000002A   0x2028             MOVS     R0,#+40
   \   0000002C   0x9000             STR      R0,[SP, #+0]
   \   0000002E   0x2304             MOVS     R3,#+4
   \   00000030   0x2200             MOVS     R2,#+0
   \   00000032   0x2101             MOVS     R1,#+1
   \   00000034   0x....             LDR.N    R0,??DataTable9_7  ;; 0x40038000
   \   00000036   0x.... 0x....      BL       LPLD_FTM_PWM_Enable
    123            LPLD_FTM_PWM_Enable(FTM0, FTM_Ch2, 0, PTA5, ALIGN_LEFT); 
   \   0000003A   0x2028             MOVS     R0,#+40
   \   0000003C   0x9000             STR      R0,[SP, #+0]
   \   0000003E   0x2305             MOVS     R3,#+5
   \   00000040   0x2200             MOVS     R2,#+0
   \   00000042   0x2102             MOVS     R1,#+2
   \   00000044   0x....             LDR.N    R0,??DataTable9_7  ;; 0x40038000
   \   00000046   0x.... 0x....      BL       LPLD_FTM_PWM_Enable
    124          }
   \   0000004A   0xB00B             ADD      SP,SP,#+44
   \   0000004C   0xBD00             POP      {PC}             ;; return
    125          

   \                                 In section .text, align 2, keep-with-next
    126          void qd_ftm1_init()
    127          {
   \                     qd_ftm1_init: (+1)
   \   00000000   0xB500             PUSH     {LR}
   \   00000002   0xB08B             SUB      SP,SP,#+44
    128            FTM_InitTypeDef QD_init_struct;
    129            QD_init_struct.FTM_Ftmx = FTM1;  //初始化右编码器
   \   00000004   0x....             LDR.N    R0,??DataTable9_8  ;; 0x40039000
   \   00000006   0x9003             STR      R0,[SP, #+12]
    130            QD_init_struct.FTM_Mode = FTM_MODE_QD; 
   \   00000008   0x2004             MOVS     R0,#+4
   \   0000000A   0xF88D 0x0010      STRB     R0,[SP, #+16]
    131            QD_init_struct.FTM_QdMode = QD_MODE_PHAB;  
   \   0000000E   0x2000             MOVS     R0,#+0
   \   00000010   0xF88D 0x001E      STRB     R0,[SP, #+30]
    132            QD_init_struct.FTM_ToiEnable = FALSE;
   \   00000014   0x2000             MOVS     R0,#+0
   \   00000016   0xF88D 0x0020      STRB     R0,[SP, #+32]
    133            LPLD_FTM_Init(QD_init_struct);
   \   0000001A   0xA903             ADD      R1,SP,#+12
   \   0000001C   0xB084             SUB      SP,SP,#+16
   \   0000001E   0x4668             MOV      R0,SP
   \   00000020   0x221C             MOVS     R2,#+28
   \   00000022   0x.... 0x....      BL       __aeabi_memcpy4
   \   00000026   0xBC0F             POP      {R0-R3}
   \   00000028   0x.... 0x....      BL       LPLD_FTM_Init
    134            LPLD_FTM_QD_Enable(FTM1, PTA8, PTA9); 
   \   0000002C   0x2209             MOVS     R2,#+9
   \   0000002E   0x2108             MOVS     R1,#+8
   \   00000030   0x....             LDR.N    R0,??DataTable9_8  ;; 0x40039000
   \   00000032   0x.... 0x....      BL       LPLD_FTM_QD_Enable
    135          }
   \   00000036   0xB00B             ADD      SP,SP,#+44
   \   00000038   0xBD00             POP      {PC}             ;; return
    136          

   \                                 In section .text, align 2, keep-with-next
    137          void pit_hcsr04_init()
    138          {
    139            //开启定时模块时钟
    140            SIM->SCGC6 |= SIM_SCGC6_PIT_MASK;
   \                     pit_hcsr04_init: (+1)
   \   00000000   0x....             LDR.N    R0,??DataTable9_9  ;; 0x4004803c
   \   00000002   0x6800             LDR      R0,[R0, #+0]
   \   00000004   0xF450 0x0000      ORRS     R0,R0,#0x800000
   \   00000008   0x....             LDR.N    R1,??DataTable9_9  ;; 0x4004803c
   \   0000000A   0x6008             STR      R0,[R1, #+0]
    141            PIT->MCR = 0x00;
   \   0000000C   0x2000             MOVS     R0,#+0
   \   0000000E   0x....             LDR.N    R1,??DataTable9_10  ;; 0x40037000
   \   00000010   0x6008             STR      R0,[R1, #+0]
    142            PIT->CHANNEL[1].LDVAL = 0x20000000;
   \   00000012   0xF05F 0x5000      MOVS     R0,#+536870912
   \   00000016   0x....             LDR.N    R1,??DataTable9_11  ;; 0x40037110
   \   00000018   0x6008             STR      R0,[R1, #+0]
    143            PIT->CHANNEL[1].TCTRL = PIT_TCTRL_TEN_MASK; 
   \   0000001A   0x2001             MOVS     R0,#+1
   \   0000001C   0x....             LDR.N    R1,??DataTable9_12  ;; 0x40037118
   \   0000001E   0x6008             STR      R0,[R1, #+0]
    144            PIT->CHANNEL[1].TFLG |= PIT_TFLG_TIF_MASK; 
   \   00000020   0x....             LDR.N    R0,??DataTable9_13  ;; 0x4003711c
   \   00000022   0x6800             LDR      R0,[R0, #+0]
   \   00000024   0xF050 0x0001      ORRS     R0,R0,#0x1
   \   00000028   0x....             LDR.N    R1,??DataTable9_13  ;; 0x4003711c
   \   0000002A   0x6008             STR      R0,[R1, #+0]
    145          }
   \   0000002C   0x4770             BX       LR               ;; return
    146          

   \                                 In section .text, align 2, keep-with-next
    147          void DialSwitch_init()
    148          {
   \                     DialSwitch_init: (+1)
   \   00000000   0xB500             PUSH     {LR}
   \   00000002   0xB087             SUB      SP,SP,#+28
    149            //拨码开关： PTD7->1, PTD6->2, PTD9->3, PTD8->4
    150            GPIO_InitTypeDef  DialSwitch_init_struct;
    151            DialSwitch_init_struct.GPIO_PTx = PTD;
   \   00000004   0x....             LDR.N    R0,??DataTable9_14  ;; 0x400ff0c0
   \   00000006   0x9001             STR      R0,[SP, #+4]
    152            DialSwitch_init_struct.GPIO_Pins = GPIO_Pin7|GPIO_Pin6|GPIO_Pin9|GPIO_Pin8;
   \   00000008   0xF44F 0x7070      MOV      R0,#+960
   \   0000000C   0x9002             STR      R0,[SP, #+8]
    153            DialSwitch_init_struct.GPIO_PinControl = IRQC_DIS;
   \   0000000E   0x2000             MOVS     R0,#+0
   \   00000010   0x9003             STR      R0,[SP, #+12]
    154            DialSwitch_init_struct.GPIO_Dir = DIR_INPUT;
   \   00000012   0x2000             MOVS     R0,#+0
   \   00000014   0xF88D 0x0010      STRB     R0,[SP, #+16]
    155            DialSwitch_init_struct.GPIO_Isr = NULL;
   \   00000018   0x2000             MOVS     R0,#+0
   \   0000001A   0x9005             STR      R0,[SP, #+20]
    156            LPLD_GPIO_Init(DialSwitch_init_struct);    
   \   0000001C   0xA901             ADD      R1,SP,#+4
   \   0000001E   0xB084             SUB      SP,SP,#+16
   \   00000020   0x4668             MOV      R0,SP
   \   00000022   0x2214             MOVS     R2,#+20
   \   00000024   0x.... 0x....      BL       __aeabi_memcpy4
   \   00000028   0xBC0F             POP      {R0-R3}
   \   0000002A   0x.... 0x....      BL       LPLD_GPIO_Init
    157          }
   \   0000002E   0xB007             ADD      SP,SP,#+28
   \   00000030   0xBD00             POP      {PC}             ;; return
    158          

   \                                 In section .text, align 2, keep-with-next
    159          void Led_init()
    160          {
   \                     Led_init: (+1)
   \   00000000   0xB500             PUSH     {LR}
   \   00000002   0xB087             SUB      SP,SP,#+28
    161            //尾灯LED
    162            GPIO_InitTypeDef  BoardLed_init_struct;
    163            BoardLed_init_struct.GPIO_PTx = PTD;
   \   00000004   0x....             LDR.N    R0,??DataTable9_14  ;; 0x400ff0c0
   \   00000006   0x9001             STR      R0,[SP, #+4]
    164            BoardLed_init_struct.GPIO_Pins = GPIO_Pin2|GPIO_Pin4|GPIO_Pin5;
   \   00000008   0x2034             MOVS     R0,#+52
   \   0000000A   0x9002             STR      R0,[SP, #+8]
    165            BoardLed_init_struct.GPIO_PinControl = IRQC_DIS|OUTPUT_DSH;
   \   0000000C   0x2040             MOVS     R0,#+64
   \   0000000E   0x9003             STR      R0,[SP, #+12]
    166            BoardLed_init_struct.GPIO_Dir = DIR_OUTPUT;
   \   00000010   0x2001             MOVS     R0,#+1
   \   00000012   0xF88D 0x0010      STRB     R0,[SP, #+16]
    167            BoardLed_init_struct.GPIO_Output = OUTPUT_L;
   \   00000016   0x2000             MOVS     R0,#+0
   \   00000018   0xF88D 0x0011      STRB     R0,[SP, #+17]
    168            BoardLed_init_struct.GPIO_Isr = NULL;
   \   0000001C   0x2000             MOVS     R0,#+0
   \   0000001E   0x9005             STR      R0,[SP, #+20]
    169            LPLD_GPIO_Init(BoardLed_init_struct);    
   \   00000020   0xA901             ADD      R1,SP,#+4
   \   00000022   0xB084             SUB      SP,SP,#+16
   \   00000024   0x4668             MOV      R0,SP
   \   00000026   0x2214             MOVS     R2,#+20
   \   00000028   0x.... 0x....      BL       __aeabi_memcpy4
   \   0000002C   0xBC0F             POP      {R0-R3}
   \   0000002E   0x.... 0x....      BL       LPLD_GPIO_Init
    170            
    171            //核心板LED: PTE26, PTD15, PTC0, PTA17
    172            GPIO_InitTypeDef CoreLed1_init_struct;
    173            CoreLed1_init_struct.GPIO_PTx = PTE;
   \   00000032   0x....             LDR.N    R0,??DataTable9_15  ;; 0x400ff100
   \   00000034   0x9001             STR      R0,[SP, #+4]
    174            CoreLed1_init_struct.GPIO_Pins = GPIO_Pin26;
   \   00000036   0xF05F 0x6080      MOVS     R0,#+67108864
   \   0000003A   0x9002             STR      R0,[SP, #+8]
    175            CoreLed1_init_struct.GPIO_PinControl = OUTPUT_DSH|IRQC_DIS;
   \   0000003C   0x2040             MOVS     R0,#+64
   \   0000003E   0x9003             STR      R0,[SP, #+12]
    176            CoreLed1_init_struct.GPIO_Dir = DIR_OUTPUT;
   \   00000040   0x2001             MOVS     R0,#+1
   \   00000042   0xF88D 0x0010      STRB     R0,[SP, #+16]
    177            CoreLed1_init_struct.GPIO_Output = OUTPUT_H;
   \   00000046   0x2001             MOVS     R0,#+1
   \   00000048   0xF88D 0x0011      STRB     R0,[SP, #+17]
    178            CoreLed1_init_struct.GPIO_Isr = NULL;
   \   0000004C   0x2000             MOVS     R0,#+0
   \   0000004E   0x9005             STR      R0,[SP, #+20]
    179            LPLD_GPIO_Init(CoreLed1_init_struct);    
   \   00000050   0xA901             ADD      R1,SP,#+4
   \   00000052   0xB084             SUB      SP,SP,#+16
   \   00000054   0x4668             MOV      R0,SP
   \   00000056   0x2214             MOVS     R2,#+20
   \   00000058   0x.... 0x....      BL       __aeabi_memcpy4
   \   0000005C   0xBC0F             POP      {R0-R3}
   \   0000005E   0x.... 0x....      BL       LPLD_GPIO_Init
    180            
    181            GPIO_InitTypeDef CoreLed2_init_struct;
    182            CoreLed2_init_struct.GPIO_PTx = PTA;
   \   00000062   0x....             LDR.N    R0,??DataTable9_2  ;; 0x400ff000
   \   00000064   0x9001             STR      R0,[SP, #+4]
    183            CoreLed2_init_struct.GPIO_Pins = GPIO_Pin17;
   \   00000066   0xF45F 0x3000      MOVS     R0,#+131072
   \   0000006A   0x9002             STR      R0,[SP, #+8]
    184            CoreLed2_init_struct.GPIO_PinControl = OUTPUT_DSH|IRQC_DIS;
   \   0000006C   0x2040             MOVS     R0,#+64
   \   0000006E   0x9003             STR      R0,[SP, #+12]
    185            CoreLed2_init_struct.GPIO_Dir = DIR_OUTPUT;
   \   00000070   0x2001             MOVS     R0,#+1
   \   00000072   0xF88D 0x0010      STRB     R0,[SP, #+16]
    186            CoreLed2_init_struct.GPIO_Output = OUTPUT_H;
   \   00000076   0x2001             MOVS     R0,#+1
   \   00000078   0xF88D 0x0011      STRB     R0,[SP, #+17]
    187            CoreLed2_init_struct.GPIO_Isr = NULL;
   \   0000007C   0x2000             MOVS     R0,#+0
   \   0000007E   0x9005             STR      R0,[SP, #+20]
    188            LPLD_GPIO_Init(CoreLed2_init_struct);    
   \   00000080   0xA901             ADD      R1,SP,#+4
   \   00000082   0xB084             SUB      SP,SP,#+16
   \   00000084   0x4668             MOV      R0,SP
   \   00000086   0x2214             MOVS     R2,#+20
   \   00000088   0x.... 0x....      BL       __aeabi_memcpy4
   \   0000008C   0xBC0F             POP      {R0-R3}
   \   0000008E   0x.... 0x....      BL       LPLD_GPIO_Init
    189           
    190            GPIO_InitTypeDef CoreLed3_init_struct;
    191            CoreLed3_init_struct.GPIO_PTx = PTC;
   \   00000092   0x....             LDR.N    R0,??DataTable9_16  ;; 0x400ff080
   \   00000094   0x9001             STR      R0,[SP, #+4]
    192            CoreLed3_init_struct.GPIO_Pins = GPIO_Pin0;
   \   00000096   0x2001             MOVS     R0,#+1
   \   00000098   0x9002             STR      R0,[SP, #+8]
    193            CoreLed3_init_struct.GPIO_PinControl = OUTPUT_DSH|IRQC_DIS;
   \   0000009A   0x2040             MOVS     R0,#+64
   \   0000009C   0x9003             STR      R0,[SP, #+12]
    194            CoreLed3_init_struct.GPIO_Dir = DIR_OUTPUT;
   \   0000009E   0x2001             MOVS     R0,#+1
   \   000000A0   0xF88D 0x0010      STRB     R0,[SP, #+16]
    195            CoreLed3_init_struct.GPIO_Output = OUTPUT_H;
   \   000000A4   0x2001             MOVS     R0,#+1
   \   000000A6   0xF88D 0x0011      STRB     R0,[SP, #+17]
    196            CoreLed3_init_struct.GPIO_Isr = NULL;
   \   000000AA   0x2000             MOVS     R0,#+0
   \   000000AC   0x9005             STR      R0,[SP, #+20]
    197            LPLD_GPIO_Init(CoreLed3_init_struct);     
   \   000000AE   0xA901             ADD      R1,SP,#+4
   \   000000B0   0xB084             SUB      SP,SP,#+16
   \   000000B2   0x4668             MOV      R0,SP
   \   000000B4   0x2214             MOVS     R2,#+20
   \   000000B6   0x.... 0x....      BL       __aeabi_memcpy4
   \   000000BA   0xBC0F             POP      {R0-R3}
   \   000000BC   0x.... 0x....      BL       LPLD_GPIO_Init
    198          
    199            GPIO_InitTypeDef CoreLed4_init_struct;
    200            CoreLed4_init_struct.GPIO_PTx = PTD;
   \   000000C0   0x....             LDR.N    R0,??DataTable9_14  ;; 0x400ff0c0
   \   000000C2   0x9001             STR      R0,[SP, #+4]
    201            CoreLed4_init_struct.GPIO_Pins = GPIO_Pin15;
   \   000000C4   0xF44F 0x4000      MOV      R0,#+32768
   \   000000C8   0x9002             STR      R0,[SP, #+8]
    202            CoreLed4_init_struct.GPIO_PinControl = OUTPUT_DSH|IRQC_DIS;
   \   000000CA   0x2040             MOVS     R0,#+64
   \   000000CC   0x9003             STR      R0,[SP, #+12]
    203            CoreLed4_init_struct.GPIO_Dir = DIR_OUTPUT;
   \   000000CE   0x2001             MOVS     R0,#+1
   \   000000D0   0xF88D 0x0010      STRB     R0,[SP, #+16]
    204            CoreLed4_init_struct.GPIO_Output = OUTPUT_H;
   \   000000D4   0x2001             MOVS     R0,#+1
   \   000000D6   0xF88D 0x0011      STRB     R0,[SP, #+17]
    205            CoreLed4_init_struct.GPIO_Isr = NULL;
   \   000000DA   0x2000             MOVS     R0,#+0
   \   000000DC   0x9005             STR      R0,[SP, #+20]
    206            LPLD_GPIO_Init(CoreLed4_init_struct);    
   \   000000DE   0xA901             ADD      R1,SP,#+4
   \   000000E0   0xB084             SUB      SP,SP,#+16
   \   000000E2   0x4668             MOV      R0,SP
   \   000000E4   0x2214             MOVS     R2,#+20
   \   000000E6   0x.... 0x....      BL       __aeabi_memcpy4
   \   000000EA   0xBC0F             POP      {R0-R3}
   \   000000EC   0x.... 0x....      BL       LPLD_GPIO_Init
    207          }
   \   000000F0   0xB007             ADD      SP,SP,#+28
   \   000000F2   0xBD00             POP      {PC}             ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9:
   \   00000000   0x400EA000         DC32     0x400ea000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_1:
   \   00000000   0x........         DC32     RecData

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_2:
   \   00000000   0x400FF000         DC32     0x400ff000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_3:
   \   00000000   0x........         DC32     Dis_measure

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_4:
   \   00000000   0x........         DC32     pit_10ms

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_5:
   \   00000000   0x400BB000         DC32     0x400bb000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_6:
   \   00000000   0x400B8000         DC32     0x400b8000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_7:
   \   00000000   0x40038000         DC32     0x40038000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_8:
   \   00000000   0x40039000         DC32     0x40039000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_9:
   \   00000000   0x4004803C         DC32     0x4004803c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_10:
   \   00000000   0x40037000         DC32     0x40037000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_11:
   \   00000000   0x40037110         DC32     0x40037110

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_12:
   \   00000000   0x40037118         DC32     0x40037118

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_13:
   \   00000000   0x4003711C         DC32     0x4003711c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_14:
   \   00000000   0x400FF0C0         DC32     0x400ff0c0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_15:
   \   00000000   0x400FF100         DC32     0x400ff100

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_16:
   \   00000000   0x400FF080         DC32     0x400ff080

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      48   DialSwitch_init
        32   -> LPLD_GPIO_Init
        48   -> __aeabi_memcpy4
       8   HardwareInit
         8   -> LPLD_LPTMR_DelayMs
         8   -> Led_init
         8   -> Motor_ftm0_init
         8   -> Rudder_ftm2_init
         8   -> bluetooth_uart4_init
         8   -> hcsr04_init
         8   -> nvic_init
         8   -> pit_10ms_init
         8   -> pit_hcsr04_init
         8   -> qd_ftm1_init
         8   -> sensor_adc_init
      48   Led_init
        32   -> LPLD_GPIO_Init
        48   -> __aeabi_memcpy4
      64   Motor_ftm0_init
        48   -> LPLD_FTM_Init
        48   -> LPLD_FTM_PWM_Enable
        64   -> __aeabi_memcpy4
      64   Rudder_ftm2_init
        48   -> LPLD_FTM_Init
        48   -> LPLD_FTM_PWM_Enable
        64   -> __aeabi_memcpy4
      64   bluetooth_uart4_init
        48   -> LPLD_UART_EnableIrq
        48   -> LPLD_UART_Init
        64   -> __aeabi_memcpy4
      48   hcsr04_init
        32   -> LPLD_GPIO_EnableIrq
        32   -> LPLD_GPIO_Init
        48   -> __aeabi_memcpy4
      48   nvic_init
        32   -> LPLD_NVIC_Init
        48   -> __aeabi_memcpy4
      48   pit_10ms_init
        32   -> LPLD_PIT_EnableIrq
        32   -> LPLD_PIT_Init
        48   -> __aeabi_memcpy4
       0   pit_hcsr04_init
      64   qd_ftm1_init
        48   -> LPLD_FTM_Init
        48   -> LPLD_FTM_QD_Enable
        64   -> __aeabi_memcpy4
      48   sensor_adc_init
        32   -> LPLD_ADC_Chn_Enable
        32   -> LPLD_ADC_Init
        48   -> __aeabi_memcpy4


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable9
       4  ??DataTable9_1
       4  ??DataTable9_10
       4  ??DataTable9_11
       4  ??DataTable9_12
       4  ??DataTable9_13
       4  ??DataTable9_14
       4  ??DataTable9_15
       4  ??DataTable9_16
       4  ??DataTable9_2
       4  ??DataTable9_3
       4  ??DataTable9_4
       4  ??DataTable9_5
       4  ??DataTable9_6
       4  ??DataTable9_7
       4  ??DataTable9_8
       4  ??DataTable9_9
      50  DialSwitch_init
      52  HardwareInit
     244  Led_init
      78  Motor_ftm0_init
      62  Rudder_ftm2_init
      80  bluetooth_uart4_init
      70  hcsr04_init
     116  nvic_init
      66  pit_10ms_init
      46  pit_hcsr04_init
      58  qd_ftm1_init
     122  sensor_adc_init

 
 1 112 bytes in section .text
 
 1 112 bytes of CODE memory

Errors: none
Warnings: none
