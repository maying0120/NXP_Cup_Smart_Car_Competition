###############################################################################
#
# IAR ANSI C/C++ Compiler V7.20.2.7424/W32 for ARM        01/Mar/2017  22:00:33
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after合并程序(0228)\app\Bluetooth.c
#    Command line =  
#        "C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after合并程序(0228)\app\Bluetooth.c"
#        -D LPLD_K60 -D USE_K60F12 -lCN
#        "C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after合并程序(0228)\iar\BOOT\List\"
#        -lB
#        "C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after合并程序(0228)\iar\BOOT\List\"
#        -o
#        "C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after合并程序(0228)\iar\BOOT\Obj\"
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M4F -e --fpu=VFPv4_sp --dlib_config
#        D:\IAR\arm\INC\c\DLib_Config_Normal.h -I
#        "C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after合并程序(0228)\iar\..\app\"
#        -I
#        "C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after合并程序(0228)\iar\..\..\..\lib\CPU\"
#        -I
#        "C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after合并程序(0228)\iar\..\..\..\lib\common\"
#        -I
#        "C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after合并程序(0228)\iar\..\..\..\lib\LPLD\"
#        -I
#        "C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after合并程序(0228)\iar\..\..\..\lib\LPLD\HW\"
#        -I
#        "C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after合并程序(0228)\iar\..\..\..\lib\LPLD\DEV\"
#        -I
#        "C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after合并程序(0228)\iar\..\..\..\lib\LPLD\FUNC\"
#        -I
#        "C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after合并程序(0228)\iar\..\..\..\lib\uCOS-II\Ports\"
#        -I
#        "C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after合并程序(0228)\iar\..\..\..\lib\uCOS-II\Source\"
#        -I
#        "C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after合并程序(0228)\iar\..\..\..\lib\FatFs\"
#        -I
#        "C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after合并程序(0228)\iar\..\..\..\lib\FatFs\option\"
#        -I
#        "C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after合并程序(0228)\iar\..\..\..\lib\USB\common\"
#        -I
#        "C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after合并程序(0228)\iar\..\..\..\lib\USB\driver\"
#        -I
#        "C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after合并程序(0228)\iar\..\..\..\lib\USB\descriptor\"
#        -I
#        "C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after合并程序(0228)\iar\..\..\..\lib\USB\class\"
#        -Ol -I D:\IAR\arm\CMSIS\Include\ -D ARM_MATH_CM4
#    List file    =  
#        C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after合并程序(0228)\iar\BOOT\List\Bluetooth.lst
#    Object file  =  
#        C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after合并程序(0228)\iar\BOOT\Obj\Bluetooth.o
#
###############################################################################

C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after合并程序(0228)\app\Bluetooth.c
      1          #include "Includes.h"
      2          
      3          #define UartDataNum  17	
      4          #define FreeCarsDataNum (UartDataNum*2)
      5          #define TransDataNum_limit 2
      6          

   \                                 In section .bss, align 4
      7          int Count_Last = 0;
   \                     Count_Last:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
      8          int TransDataNum = 0;
   \                     TransDataNum:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
      9          uint8 uSendBuf[UartDataNum*2]={0};
   \                     uSendBuf:
   \   00000000                      DS8 36

   \                                 In section .bss, align 1
     10          uint8 Data_Receive = 0;
   \                     Data_Receive:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
     11          uint8 Flag_Island_Another = 0;
   \                     Flag_Island_Another:
   \   00000000                      DS8 1

   \                                 In section .data, align 1
     12          uint8 trend_Another = 32;
   \                     trend_Another:
   \   00000000   0x20               DC8 32
     13          extern uint16 Distance_Island;
     14          extern struct Speed Spd;
     15          extern struct Rudder Angle;
     16          extern int trend;
     17          extern int Leave_trend;
     18          extern int DisError;
     19          extern int Chase_Distance;
     20          extern int Count;
     21          extern int Flag_Out;
     22          extern int peak[];
     23          extern int Peak5_Filter;
     24          extern int E_Max_Dis;
     25          extern int Distance;
     26          extern int Pre_Peak5[];
     27          extern int peak2;
     28          extern int Sum_Distance_Enter;
     29          extern uint8 Turn_Around;
     30          extern uint8 Flag_Island;
     31          extern uint8 Flag_Ramp;
     32          extern int Flag_Island_Confirm;
     33          extern int Sum_Distance_Island_Stright;
     34          void push(uint8 chanel,uint16 data);
     35          void produceScopeData(void);
     36          void sendDataToScope(void);
     37          extern int dog_cnt;
     38          extern int Pre_Distance[];
     39          extern int Admit_Dis_EnterIsland; 
     40          extern uint8 final;
     41          extern int trendSum_Peak1[];
     42          extern int trendSum_Peak3[];
     43          extern uint8 Flag_Island_Turn;
     44          
     45          extern int m;
     46          //发送数据

   \                                 In section .text, align 2, keep-with-next
     47          void SendData()
     48          {
   \                     SendData: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
     49                 SendData_To_PC();
   \   00000002   0x.... 0x....      BL       SendData_To_PC
     50          //     if(Turn_Around == 0)
     51          //       Send_To_Behind();     
     52          //     else
     53          //       Send_To_Ahead();
     54          }
   \   00000006   0xBD01             POP      {R0,PC}          ;; return
     55          
     56          //接收数据

   \                                 In section .text, align 2, keep-with-next
     57          void RecData(void)
     58          {
   \                     RecData: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
     59               if(Turn_Around == 0)
   \   00000002   0x....             LDR.N    R0,??DataTable7
   \   00000004   0x7800             LDRB     R0,[R0, #+0]
   \   00000006   0x2800             CMP      R0,#+0
   \   00000008   0xD102             BNE.N    ??RecData_0
     60                 Receive_From_Behind();     
   \   0000000A   0x.... 0x....      BL       Receive_From_Behind
   \   0000000E   0xE001             B.N      ??RecData_1
     61               else
     62                 Receive_From_Ahead();    
   \                     ??RecData_0: (+1)
   \   00000010   0x.... 0x....      BL       Receive_From_Ahead
     63          }
   \                     ??RecData_1: (+1)
   \   00000014   0xBD01             POP      {R0,PC}          ;; return
     64          
     65          
     66          //前车发送数据到后车

   \                                 In section .text, align 2, keep-with-next
     67          void Send_To_Behind()
     68          {
   \                     Send_To_Behind: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
     69            if(Count%10 == 0)
   \   00000002   0x200A             MOVS     R0,#+10
   \   00000004   0x....             LDR.N    R1,??DataTable7_1
   \   00000006   0x6809             LDR      R1,[R1, #+0]
   \   00000008   0x....             LDR.N    R2,??DataTable7_1
   \   0000000A   0x6812             LDR      R2,[R2, #+0]
   \   0000000C   0xFB92 0xF2F0      SDIV     R2,R2,R0
   \   00000010   0xFB00 0x1012      MLS      R0,R0,R2,R1
   \   00000014   0x2800             CMP      R0,#+0
   \   00000016   0xD115             BNE.N    ??Send_To_Behind_0
     70             {
     71                Count_Last  = Count;
   \   00000018   0x....             LDR.N    R0,??DataTable7_1
   \   0000001A   0x6800             LDR      R0,[R0, #+0]
   \   0000001C   0x....             LDR.N    R1,??DataTable7_2
   \   0000001E   0x6008             STR      R0,[R1, #+0]
     72                LPLD_UART_PutChar(UART4, trend);  
   \   00000020   0x....             LDR.N    R0,??DataTable7_3
   \   00000022   0x6801             LDR      R1,[R0, #+0]
   \   00000024   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000026   0x....             LDR.N    R0,??DataTable7_4  ;; 0x400ea000
   \   00000028   0x.... 0x....      BL       LPLD_UART_PutChar
     73                LPLD_UART_PutChar(UART4, Flag_Island);   
   \   0000002C   0x....             LDR.N    R0,??DataTable7_5
   \   0000002E   0x7801             LDRB     R1,[R0, #+0]
   \   00000030   0x....             LDR.N    R0,??DataTable7_4  ;; 0x400ea000
   \   00000032   0x.... 0x....      BL       LPLD_UART_PutChar
     74                while( !(Count_Last-Count) );
   \                     ??Send_To_Behind_1: (+1)
   \   00000036   0x....             LDR.N    R0,??DataTable7_2
   \   00000038   0x6800             LDR      R0,[R0, #+0]
   \   0000003A   0x....             LDR.N    R1,??DataTable7_1
   \   0000003C   0x6809             LDR      R1,[R1, #+0]
   \   0000003E   0x1A40             SUBS     R0,R0,R1
   \   00000040   0x2800             CMP      R0,#+0
   \   00000042   0xD0F8             BEQ.N    ??Send_To_Behind_1
     75             }
     76          }
   \                     ??Send_To_Behind_0: (+1)
   \   00000044   0xBD01             POP      {R0,PC}          ;; return
     77          
     78          //后车接收前车数据

   \                                 In section .text, align 2, keep-with-next
     79          void Receive_From_Ahead()
     80          {
   \                     Receive_From_Ahead: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
     81             Data_Receive = LPLD_UART_GetChar(UART4) - 48;
   \   00000002   0x....             LDR.N    R0,??DataTable7_4  ;; 0x400ea000
   \   00000004   0x.... 0x....      BL       LPLD_UART_GetChar
   \   00000008   0x3830             SUBS     R0,R0,#+48
   \   0000000A   0x....             LDR.N    R1,??DataTable7_6
   \   0000000C   0x7008             STRB     R0,[R1, #+0]
     82             
     83             //后车启动跟车模式
     84             if(Data_Receive == 0)
   \   0000000E   0x....             LDR.N    R0,??DataTable7_6
   \   00000010   0x7800             LDRB     R0,[R0, #+0]
   \   00000012   0x2800             CMP      R0,#+0
   \   00000014   0xD102             BNE.N    ??Receive_From_Ahead_0
     85               Flag_Out = 1;
   \   00000016   0x2001             MOVS     R0,#+1
   \   00000018   0x....             LDR.N    R1,??DataTable7_7
   \   0000001A   0x6008             STR      R0,[R1, #+0]
     86             
     87             //后车接收到该信号，减速并可以检测环岛
     88             if(Data_Receive == 5)
   \                     ??Receive_From_Ahead_0: (+1)
   \   0000001C   0x....             LDR.N    R0,??DataTable7_6
   \   0000001E   0x7800             LDRB     R0,[R0, #+0]
   \   00000020   0x2805             CMP      R0,#+5
   \   00000022   0xD103             BNE.N    ??Receive_From_Ahead_1
     89              {
     90                Admit_Dis_EnterIsland = 200*100;  
   \   00000024   0xF644 0x6020      MOVW     R0,#+20000
   \   00000028   0x....             LDR.N    R1,??DataTable7_8
   \   0000002A   0x6008             STR      R0,[R1, #+0]
     91              }
     92             
     93             //后车进环岛时强制左右转：10右转，11左转
     94             if(Data_Receive == 10)
   \                     ??Receive_From_Ahead_1: (+1)
   \   0000002C   0x....             LDR.N    R0,??DataTable7_6
   \   0000002E   0x7800             LDRB     R0,[R0, #+0]
   \   00000030   0x280A             CMP      R0,#+10
   \   00000032   0xD102             BNE.N    ??Receive_From_Ahead_2
     95               Flag_Island_Turn = 10;
   \   00000034   0x200A             MOVS     R0,#+10
   \   00000036   0x....             LDR.N    R1,??DataTable7_9
   \   00000038   0x7008             STRB     R0,[R1, #+0]
     96             if(Data_Receive == 11)
   \                     ??Receive_From_Ahead_2: (+1)
   \   0000003A   0x....             LDR.N    R0,??DataTable7_6
   \   0000003C   0x7800             LDRB     R0,[R0, #+0]
   \   0000003E   0x280B             CMP      R0,#+11
   \   00000040   0xD102             BNE.N    ??Receive_From_Ahead_3
     97               Flag_Island_Turn = 11;  
   \   00000042   0x200B             MOVS     R0,#+11
   \   00000044   0x....             LDR.N    R1,??DataTable7_9
   \   00000046   0x7008             STRB     R0,[R1, #+0]
     98             
     99          }
   \                     ??Receive_From_Ahead_3: (+1)
   \   00000048   0xBD01             POP      {R0,PC}          ;; return
    100          
    101          
    102          //后车发送数据到前车

   \                                 In section .text, align 2, keep-with-next
    103          void Send_To_Ahead()
    104          {
   \                     Send_To_Ahead: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    105            if(Count%10 == 0)
   \   00000002   0x200A             MOVS     R0,#+10
   \   00000004   0x....             LDR.N    R1,??DataTable7_1
   \   00000006   0x6809             LDR      R1,[R1, #+0]
   \   00000008   0x....             LDR.N    R2,??DataTable7_1
   \   0000000A   0x6812             LDR      R2,[R2, #+0]
   \   0000000C   0xFB92 0xF2F0      SDIV     R2,R2,R0
   \   00000010   0xFB00 0x1012      MLS      R0,R0,R2,R1
   \   00000014   0x2800             CMP      R0,#+0
   \   00000016   0xD115             BNE.N    ??Send_To_Ahead_0
    106             {
    107                Count_Last  = Count;
   \   00000018   0x....             LDR.N    R0,??DataTable7_1
   \   0000001A   0x6800             LDR      R0,[R0, #+0]
   \   0000001C   0x....             LDR.N    R1,??DataTable7_2
   \   0000001E   0x6008             STR      R0,[R1, #+0]
    108                LPLD_UART_PutChar(UART4, Chase_Distance);  
   \   00000020   0x....             LDR.N    R0,??DataTable7_10
   \   00000022   0x6801             LDR      R1,[R0, #+0]
   \   00000024   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000026   0x....             LDR.N    R0,??DataTable7_4  ;; 0x400ea000
   \   00000028   0x.... 0x....      BL       LPLD_UART_PutChar
    109                LPLD_UART_PutChar(UART4, Flag_Island);   
   \   0000002C   0x....             LDR.N    R0,??DataTable7_5
   \   0000002E   0x7801             LDRB     R1,[R0, #+0]
   \   00000030   0x....             LDR.N    R0,??DataTable7_4  ;; 0x400ea000
   \   00000032   0x.... 0x....      BL       LPLD_UART_PutChar
    110                while( !(Count_Last-Count));
   \                     ??Send_To_Ahead_1: (+1)
   \   00000036   0x....             LDR.N    R0,??DataTable7_2
   \   00000038   0x6800             LDR      R0,[R0, #+0]
   \   0000003A   0x....             LDR.N    R1,??DataTable7_1
   \   0000003C   0x6809             LDR      R1,[R1, #+0]
   \   0000003E   0x1A40             SUBS     R0,R0,R1
   \   00000040   0x2800             CMP      R0,#+0
   \   00000042   0xD0F8             BEQ.N    ??Send_To_Ahead_1
    111             }
    112          }
   \                     ??Send_To_Ahead_0: (+1)
   \   00000044   0xBD01             POP      {R0,PC}          ;; return
    113          

   \                                 In section .bss, align 4
    114          int n;
   \                     n:
   \   00000000                      DS8 4
    115          //前车接收后车数据

   \                                 In section .text, align 2, keep-with-next
    116          void Receive_From_Behind()
    117          {
   \                     Receive_From_Behind: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    118             n++;
   \   00000002   0x....             LDR.N    R0,??DataTable7_11
   \   00000004   0x6800             LDR      R0,[R0, #+0]
   \   00000006   0x1C40             ADDS     R0,R0,#+1
   \   00000008   0x....             LDR.N    R1,??DataTable7_11
   \   0000000A   0x6008             STR      R0,[R1, #+0]
    119             Data_Receive = LPLD_UART_GetChar(UART4);
   \   0000000C   0x....             LDR.N    R0,??DataTable7_4  ;; 0x400ea000
   \   0000000E   0x.... 0x....      BL       LPLD_UART_GetChar
   \   00000012   0x....             LDR.N    R1,??DataTable7_6
   \   00000014   0x7008             STRB     R0,[R1, #+0]
    120          }
   \   00000016   0xBD01             POP      {R0,PC}          ;; return
    121          
    122          
    123          
    124          
    125          
    126          //发送数据给电脑

   \                                 In section .text, align 2, keep-with-next
    127          void SendData_To_PC()
    128          {
   \                     SendData_To_PC: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    129              produceScopeData();  //将数据储存于缓存数组 
   \   00000002   0x.... 0x....      BL       produceScopeData
    130              sendDataToScope();	 //发送参数到上位机
   \   00000006   0x.... 0x....      BL       sendDataToScope
    131          }
   \   0000000A   0xBD01             POP      {R0,PC}          ;; return
    132          
    133          //push()函数第一个形参表示通道号，第二个新参表示所需发送的数据

   \                                 In section .text, align 2, keep-with-next
    134          void push(uint8 chanel,uint16 data)
    135          {
    136              uSendBuf[chanel*2]=data/256;
   \                     `push`: (+1)
   \   00000000   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   00000002   0xF44F 0x7280      MOV      R2,#+256
   \   00000006   0xFB91 0xF2F2      SDIV     R2,R1,R2
   \   0000000A   0x....             LDR.N    R3,??DataTable7_12
   \   0000000C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000000E   0xF803 0x2010      STRB     R2,[R3, R0, LSL #+1]
    137              uSendBuf[chanel*2+1]=data%256;
   \   00000012   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   00000014   0xF44F 0x7280      MOV      R2,#+256
   \   00000018   0xFB91 0xF3F2      SDIV     R3,R1,R2
   \   0000001C   0xFB03 0x1312      MLS      R3,R3,R2,R1
   \   00000020   0x....             LDR.N    R1,??DataTable7_12
   \   00000022   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000024   0xEB11 0x0040      ADDS     R0,R1,R0, LSL #+1
   \   00000028   0x7043             STRB     R3,[R0, #+1]
    138          }
   \   0000002A   0x4770             BX       LR               ;; return
    139          
    140          //通过函数push将所需发送的数据放到数组uSendBuf[]内储存，数组uSendBuf[]用于数据缓冲。

   \                                 In section .text, align 2, keep-with-next
    141          void produceScopeData(void)
    142          {
   \                     produceScopeData: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    143          //    push(0,peak[4]);
    144          //    push(1,peak[0]);
    145              push(0,Turn_Around);
   \   00000002   0x....             LDR.N    R0,??DataTable7
   \   00000004   0x7801             LDRB     R1,[R0, #+0]
   \   00000006   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   00000008   0x2000             MOVS     R0,#+0
   \   0000000A   0x.... 0x....      BL       `push`
    146              push(1,peak2);
   \   0000000E   0x....             LDR.N    R0,??DataTable7_13
   \   00000010   0x6801             LDR      R1,[R0, #+0]
   \   00000012   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   00000014   0x2001             MOVS     R0,#+1
   \   00000016   0x.... 0x....      BL       `push`
    147              push(2,peak[1]);
   \   0000001A   0x....             LDR.N    R0,??DataTable7_14
   \   0000001C   0x6841             LDR      R1,[R0, #+4]
   \   0000001E   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   00000020   0x2002             MOVS     R0,#+2
   \   00000022   0x.... 0x....      BL       `push`
    148              push(3,Flag_Island);
   \   00000026   0x....             LDR.N    R0,??DataTable7_5
   \   00000028   0x7801             LDRB     R1,[R0, #+0]
   \   0000002A   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   0000002C   0x2003             MOVS     R0,#+3
   \   0000002E   0x.... 0x....      BL       `push`
    149              push(4,peak[3]);
   \   00000032   0x....             LDR.N    R0,??DataTable7_14
   \   00000034   0x68C1             LDR      R1,[R0, #+12]
   \   00000036   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   00000038   0x2004             MOVS     R0,#+4
   \   0000003A   0x.... 0x....      BL       `push`
    150              push(5,Flag_Island_Turn);
   \   0000003E   0x....             LDR.N    R0,??DataTable7_9
   \   00000040   0x7801             LDRB     R1,[R0, #+0]
   \   00000042   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   00000044   0x2005             MOVS     R0,#+5
   \   00000046   0x.... 0x....      BL       `push`
    151              push(6,Count);
   \   0000004A   0x....             LDR.N    R0,??DataTable7_1
   \   0000004C   0x6801             LDR      R1,[R0, #+0]
   \   0000004E   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   00000050   0x2006             MOVS     R0,#+6
   \   00000052   0x.... 0x....      BL       `push`
    152          //    push(6,Flag_Ramp);
    153              push(7,Flag_Island_Confirm/100 );
   \   00000056   0x....             LDR.N    R0,??DataTable7_15
   \   00000058   0x6800             LDR      R0,[R0, #+0]
   \   0000005A   0x2164             MOVS     R1,#+100
   \   0000005C   0xFB90 0xF1F1      SDIV     R1,R0,R1
   \   00000060   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   00000062   0x2007             MOVS     R0,#+7
   \   00000064   0x.... 0x....      BL       `push`
    154              push(8,Distance);
   \   00000068   0x....             LDR.N    R0,??DataTable7_16
   \   0000006A   0x6801             LDR      R1,[R0, #+0]
   \   0000006C   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   0000006E   0x2008             MOVS     R0,#+8
   \   00000070   0x.... 0x....      BL       `push`
    155              push(9,Admit_Dis_EnterIsland/100);
   \   00000074   0x....             LDR.N    R0,??DataTable7_8
   \   00000076   0x6800             LDR      R0,[R0, #+0]
   \   00000078   0x2164             MOVS     R1,#+100
   \   0000007A   0xFB90 0xF1F1      SDIV     R1,R0,R1
   \   0000007E   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   00000080   0x2009             MOVS     R0,#+9
   \   00000082   0x.... 0x....      BL       `push`
    156              push(10,Spd.target/10);
   \   00000086   0x....             LDR.N    R0,??DataTable7_17
   \   00000088   0x6800             LDR      R0,[R0, #+0]
   \   0000008A   0x210A             MOVS     R1,#+10
   \   0000008C   0xFB90 0xF1F1      SDIV     R1,R0,R1
   \   00000090   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   00000092   0x200A             MOVS     R0,#+10
   \   00000094   0x.... 0x....      BL       `push`
    157             push(11,peak[0]);
   \   00000098   0x....             LDR.N    R0,??DataTable7_14
   \   0000009A   0x6801             LDR      R1,[R0, #+0]
   \   0000009C   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   0000009E   0x200B             MOVS     R0,#+11
   \   000000A0   0x.... 0x....      BL       `push`
    158              push(12,peak[4]);
   \   000000A4   0x....             LDR.N    R0,??DataTable7_14
   \   000000A6   0x6901             LDR      R1,[R0, #+16]
   \   000000A8   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   000000AA   0x200C             MOVS     R0,#+12
   \   000000AC   0x.... 0x....      BL       `push`
    159          //    push(13,14);
    160          //    push(14,15);
    161          //    push(15,16);
    162          //    push(16,17);
    163          }	 
   \   000000B0   0xBD01             POP      {R0,PC}          ;; return
    164          
    165           

   \                                 In section .text, align 2, keep-with-next
    166          void sendDataToScope(void)
    167          {
   \                     sendDataToScope: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
    168            uint8 i,sum=0; 
   \   00000002   0x2500             MOVS     R5,#+0
    169            //使用轮询的方式发送数据，当数据未发送，程序停在此处直到发送完成
    170            LPLD_UART_PutChar(UART4, 251);
   \   00000004   0x21FB             MOVS     R1,#+251
   \   00000006   0x....             LDR.N    R0,??DataTable7_4  ;; 0x400ea000
   \   00000008   0x.... 0x....      BL       LPLD_UART_PutChar
    171            LPLD_UART_PutChar(UART4, 109);
   \   0000000C   0x216D             MOVS     R1,#+109
   \   0000000E   0x....             LDR.N    R0,??DataTable7_4  ;; 0x400ea000
   \   00000010   0x.... 0x....      BL       LPLD_UART_PutChar
    172            LPLD_UART_PutChar(UART4, 37);
   \   00000014   0x2125             MOVS     R1,#+37
   \   00000016   0x....             LDR.N    R0,??DataTable7_4  ;; 0x400ea000
   \   00000018   0x.... 0x....      BL       LPLD_UART_PutChar
    173            
    174            sum+=(251);                   
   \   0000001C   0x1F6D             SUBS     R5,R5,#+5
    175            sum+=(109);
   \   0000001E   0x356D             ADDS     R5,R5,#+109
    176            sum+=(37);
   \   00000020   0x3525             ADDS     R5,R5,#+37
    177            for(i=0;i<FreeCarsDataNum;i++)
   \   00000022   0x2400             MOVS     R4,#+0
   \   00000024   0xE00A             B.N      ??sendDataToScope_0
    178              {
    179                LPLD_UART_PutChar(UART4, uSendBuf[i]);
   \                     ??sendDataToScope_1: (+1)
   \   00000026   0x....             LDR.N    R0,??DataTable7_12
   \   00000028   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000002A   0x5C21             LDRB     R1,[R4, R0]
   \   0000002C   0x....             LDR.N    R0,??DataTable7_4  ;; 0x400ea000
   \   0000002E   0x.... 0x....      BL       LPLD_UART_PutChar
    180                sum+=uSendBuf[i];          //全部数据加入校验
   \   00000032   0x....             LDR.N    R0,??DataTable7_12
   \   00000034   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000036   0x5C20             LDRB     R0,[R4, R0]
   \   00000038   0x1945             ADDS     R5,R0,R5
    181              }
   \   0000003A   0x1C64             ADDS     R4,R4,#+1
   \                     ??sendDataToScope_0: (+1)
   \   0000003C   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000003E   0x2C22             CMP      R4,#+34
   \   00000040   0xDBF1             BLT.N    ??sendDataToScope_1
    182            LPLD_UART_PutChar(UART4, sum);
   \   00000042   0x0029             MOVS     R1,R5
   \   00000044   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000046   0x....             LDR.N    R0,??DataTable7_4  ;; 0x400ea000
   \   00000048   0x.... 0x....      BL       LPLD_UART_PutChar
    183          }
   \   0000004C   0xBD31             POP      {R0,R4,R5,PC}    ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7:
   \   00000000   0x........         DC32     Turn_Around

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_1:
   \   00000000   0x........         DC32     Count

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_2:
   \   00000000   0x........         DC32     Count_Last

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_3:
   \   00000000   0x........         DC32     trend

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_4:
   \   00000000   0x400EA000         DC32     0x400ea000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_5:
   \   00000000   0x........         DC32     Flag_Island

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_6:
   \   00000000   0x........         DC32     Data_Receive

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_7:
   \   00000000   0x........         DC32     Flag_Out

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_8:
   \   00000000   0x........         DC32     Admit_Dis_EnterIsland

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_9:
   \   00000000   0x........         DC32     Flag_Island_Turn

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_10:
   \   00000000   0x........         DC32     Chase_Distance

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_11:
   \   00000000   0x........         DC32     n

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_12:
   \   00000000   0x........         DC32     uSendBuf

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_13:
   \   00000000   0x........         DC32     peak2

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_14:
   \   00000000   0x........         DC32     peak

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_15:
   \   00000000   0x........         DC32     Flag_Island_Confirm

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_16:
   \   00000000   0x........         DC32     Distance

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_17:
   \   00000000   0x........         DC32     Spd

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   RecData
         8   -> Receive_From_Ahead
         8   -> Receive_From_Behind
       8   Receive_From_Ahead
         8   -> LPLD_UART_GetChar
       8   Receive_From_Behind
         8   -> LPLD_UART_GetChar
       8   SendData
         8   -> SendData_To_PC
       8   SendData_To_PC
         8   -> produceScopeData
         8   -> sendDataToScope
       8   Send_To_Ahead
         8   -> LPLD_UART_PutChar
       8   Send_To_Behind
         8   -> LPLD_UART_PutChar
       8   produceScopeData
         8   -> push
       0   push
      16   sendDataToScope
        16   -> LPLD_UART_PutChar


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable7
       4  ??DataTable7_1
       4  ??DataTable7_10
       4  ??DataTable7_11
       4  ??DataTable7_12
       4  ??DataTable7_13
       4  ??DataTable7_14
       4  ??DataTable7_15
       4  ??DataTable7_16
       4  ??DataTable7_17
       4  ??DataTable7_2
       4  ??DataTable7_3
       4  ??DataTable7_4
       4  ??DataTable7_5
       4  ??DataTable7_6
       4  ??DataTable7_7
       4  ??DataTable7_8
       4  ??DataTable7_9
       4  Count_Last
       1  Data_Receive
       1  Flag_Island_Another
      22  RecData
      74  Receive_From_Ahead
      24  Receive_From_Behind
       8  SendData
      12  SendData_To_PC
      70  Send_To_Ahead
      70  Send_To_Behind
       4  TransDataNum
       4  n
     178  produceScopeData
      44  push
      78  sendDataToScope
       1  trend_Another
      36  uSendBuf

 
  50 bytes in section .bss
   1 byte  in section .data
 652 bytes in section .text
 
 652 bytes of CODE memory
  51 bytes of DATA memory

Errors: none
Warnings: none
