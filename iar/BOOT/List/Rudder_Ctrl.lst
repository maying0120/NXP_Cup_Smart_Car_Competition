###############################################################################
#
# IAR ANSI C/C++ Compiler V7.20.2.7424/W32 for ARM        01/Mar/2017  22:00:39
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after合并程序(0228)\app\Rudder_Ctrl.c
#    Command line =  
#        "C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after合并程序(0228)\app\Rudder_Ctrl.c"
#        -D LPLD_K60 -D USE_K60F12 -lCN
#        "C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after合并程序(0228)\iar\BOOT\List\"
#        -lB
#        "C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after合并程序(0228)\iar\BOOT\List\"
#        -o
#        "C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after合并程序(0228)\iar\BOOT\Obj\"
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M4F -e --fpu=VFPv4_sp --dlib_config
#        D:\IAR\arm\INC\c\DLib_Config_Normal.h -I
#        "C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after合并程序(0228)\iar\..\app\"
#        -I
#        "C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after合并程序(0228)\iar\..\..\..\lib\CPU\"
#        -I
#        "C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after合并程序(0228)\iar\..\..\..\lib\common\"
#        -I
#        "C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after合并程序(0228)\iar\..\..\..\lib\LPLD\"
#        -I
#        "C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after合并程序(0228)\iar\..\..\..\lib\LPLD\HW\"
#        -I
#        "C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after合并程序(0228)\iar\..\..\..\lib\LPLD\DEV\"
#        -I
#        "C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after合并程序(0228)\iar\..\..\..\lib\LPLD\FUNC\"
#        -I
#        "C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after合并程序(0228)\iar\..\..\..\lib\uCOS-II\Ports\"
#        -I
#        "C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after合并程序(0228)\iar\..\..\..\lib\uCOS-II\Source\"
#        -I
#        "C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after合并程序(0228)\iar\..\..\..\lib\FatFs\"
#        -I
#        "C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after合并程序(0228)\iar\..\..\..\lib\FatFs\option\"
#        -I
#        "C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after合并程序(0228)\iar\..\..\..\lib\USB\common\"
#        -I
#        "C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after合并程序(0228)\iar\..\..\..\lib\USB\driver\"
#        -I
#        "C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after合并程序(0228)\iar\..\..\..\lib\USB\descriptor\"
#        -I
#        "C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after合并程序(0228)\iar\..\..\..\lib\USB\class\"
#        -Ol -I D:\IAR\arm\CMSIS\Include\ -D ARM_MATH_CM4
#    List file    =  
#        C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after合并程序(0228)\iar\BOOT\List\Rudder_Ctrl.lst
#    Object file  =  
#        C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after合并程序(0228)\iar\BOOT\Obj\Rudder_Ctrl.o
#
###############################################################################

C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after合并程序(0228)\app\Rudder_Ctrl.c
      1          #include "Includes.h"
      2          

   \                                 In section .bss, align 4
      3          int   Rudder_Err; 
   \                     Rudder_Err:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
      4          int   Rudder_Mid;    
   \                     Rudder_Mid:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
      5          int   Rudder_Min;  
   \                     Rudder_Min:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
      6          int   Rudder_Max;
   \                     Rudder_Max:
   \   00000000                      DS8 4
      7          //int   xy = 3540;
      8          extern uint8 Flag_Island;
      9          extern int Distance;
     10          extern int Leave_trend;
     11          extern uint8 Turn_Around;
     12          extern uint8 Family_Status;

   \                                 In section .bss, align 4
     13          struct Rudder Angle;
   \                     Angle:
   \   00000000                      DS8 60
     14          extern int trend;
     15          extern uint8 Flag_Ramp;
     16          extern int Flag_Island_Confirm;
     17          

   \                                 In section .text, align 2, keep-with-next
     18          void Rudder_Ctrl()
     19          {
   \                     Rudder_Ctrl: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
     20             if(Family_Status == 0)
   \   00000002   0x.... 0x....      LDR.W    R0,??DataTable2
   \   00000006   0x7800             LDRB     R0,[R0, #+0]
   \   00000008   0x2800             CMP      R0,#+0
   \   0000000A   0xD102             BNE.N    ??Rudder_Ctrl_0
     21                 Elder_Rudder_Ctrl(); //老大的舵机控制
   \   0000000C   0x.... 0x....      BL       Elder_Rudder_Ctrl
   \   00000010   0xE001             B.N      ??Rudder_Ctrl_1
     22             else 
     23                 Younger_Rudder_Ctrl(); //老二的舵机控制
   \                     ??Rudder_Ctrl_0: (+1)
   \   00000012   0x.... 0x....      BL       Younger_Rudder_Ctrl
     24          }
   \                     ??Rudder_Ctrl_1: (+1)
   \   00000016   0xBD01             POP      {R0,PC}          ;; return
     25          
     26          /**********老大的舵机控制***********/

   \                                 In section .text, align 4, keep-with-next
     27          void Elder_Rudder_Ctrl()
     28          {
   \                     Elder_Rudder_Ctrl: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0xED2D 0x8B04      VPUSH    {D8-D9}
     29            Rudder_Err = 500;
   \   00000006   0xF44F 0x70FA      MOV      R0,#+500
   \   0000000A   0x.... 0x....      LDR.W    R1,??DataTable2_1
   \   0000000E   0x6008             STR      R0,[R1, #+0]
     30            Rudder_Mid = 3535;  //  左增右减
   \   00000010   0xF640 0x50CF      MOVW     R0,#+3535
   \   00000014   0x.... 0x....      LDR.W    R1,??DataTable2_2
   \   00000018   0x6008             STR      R0,[R1, #+0]
     31            Rudder_Min = Rudder_Mid - Rudder_Err;
   \   0000001A   0x.... 0x....      LDR.W    R0,??DataTable2_2
   \   0000001E   0x6800             LDR      R0,[R0, #+0]
   \   00000020   0x.... 0x....      LDR.W    R1,??DataTable2_1
   \   00000024   0x6809             LDR      R1,[R1, #+0]
   \   00000026   0x1A40             SUBS     R0,R0,R1
   \   00000028   0x.... 0x....      LDR.W    R1,??DataTable2_3
   \   0000002C   0x6008             STR      R0,[R1, #+0]
     32            Rudder_Max = Rudder_Mid + Rudder_Err; 
   \   0000002E   0x.... 0x....      LDR.W    R0,??DataTable2_2
   \   00000032   0x6800             LDR      R0,[R0, #+0]
   \   00000034   0x.... 0x....      LDR.W    R1,??DataTable2_1
   \   00000038   0x6809             LDR      R1,[R1, #+0]
   \   0000003A   0x1808             ADDS     R0,R1,R0
   \   0000003C   0x.... 0x....      LDR.W    R1,??DataTable2_4
   \   00000040   0x6008             STR      R0,[R1, #+0]
     33             
     34            //PID调节
     35            Angle.error = Distance;
   \   00000042   0x.... 0x....      LDR.W    R0,??DataTable2_5
   \   00000046   0x6800             LDR      R0,[R0, #+0]
   \   00000048   0x.... 0x....      LDR.W    R1,??DataTable2_6
   \   0000004C   0x6008             STR      R0,[R1, #+0]
     36            Angle.drror = Angle.error - Angle.pre_error[8];
   \   0000004E   0x.... 0x....      LDR.W    R0,??DataTable2_6
   \   00000052   0x6800             LDR      R0,[R0, #+0]
   \   00000054   0x.... 0x....      LDR.W    R1,??DataTable2_6
   \   00000058   0x6A89             LDR      R1,[R1, #+40]
   \   0000005A   0x1A40             SUBS     R0,R0,R1
   \   0000005C   0x.... 0x....      LDR.W    R1,??DataTable2_6
   \   00000060   0x6048             STR      R0,[R1, #+4]
     37            
     38            //参数更新
     39            for(uint8 i=0; i<9; i++)
   \   00000062   0x2000             MOVS     R0,#+0
   \   00000064   0xE00C             B.N      ??Elder_Rudder_Ctrl_0
     40              Angle.pre_error[i] = Angle.pre_error[i+1];
   \                     ??Elder_Rudder_Ctrl_1: (+1)
   \   00000066   0x.... 0x....      LDR.W    R1,??DataTable2_6
   \   0000006A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000006C   0xEB11 0x0180      ADDS     R1,R1,R0, LSL #+2
   \   00000070   0x68C9             LDR      R1,[R1, #+12]
   \   00000072   0x.... 0x....      LDR.W    R2,??DataTable2_6
   \   00000076   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000078   0xEB12 0x0280      ADDS     R2,R2,R0, LSL #+2
   \   0000007C   0x6091             STR      R1,[R2, #+8]
   \   0000007E   0x1C40             ADDS     R0,R0,#+1
   \                     ??Elder_Rudder_Ctrl_0: (+1)
   \   00000080   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000082   0x2809             CMP      R0,#+9
   \   00000084   0xDBEF             BLT.N    ??Elder_Rudder_Ctrl_1
     41            Angle.pre_error[9] = Angle.error;
   \   00000086   0x.... 0x....      LDR.W    R0,??DataTable2_6
   \   0000008A   0x6800             LDR      R0,[R0, #+0]
   \   0000008C   0x.... 0x....      LDR.W    R1,??DataTable2_6
   \   00000090   0x62C8             STR      R0,[R1, #+44]
     42            
     43            if(fabs(Distance) < 5)
   \   00000092   0x....             LDR.N    R0,??DataTable2_5
   \   00000094   0x6800             LDR      R0,[R0, #+0]
   \   00000096   0x.... 0x....      BL       __aeabi_i2d
   \   0000009A   0xF031 0x4100      BICS     R1,R1,#0x80000000
   \   0000009E   0x2200             MOVS     R2,#+0
   \   000000A0   0x....             LDR.N    R3,??DataTable2_7  ;; 0x40140000
   \   000000A2   0x.... 0x....      BL       __aeabi_cdcmple
   \   000000A6   0xD203             BCS.N    ??Elder_Rudder_Ctrl_2
     44              Angle.P = 5;
   \   000000A8   0x....             LDR.N    R0,??DataTable2_6
   \   000000AA   0x....             LDR.N    R1,??DataTable2_8  ;; 0x40a00000
   \   000000AC   0x6301             STR      R1,[R0, #+48]
   \   000000AE   0xE034             B.N      ??Elder_Rudder_Ctrl_3
     45            else 
     46              Angle.P = 0.008667*fabs(Distance)*fabs(Distance) - 0.1033*fabs(Distance) + 6.3;    
   \                     ??Elder_Rudder_Ctrl_2: (+1)
   \   000000B0   0x....             LDR.N    R0,??DataTable2_5
   \   000000B2   0x6800             LDR      R0,[R0, #+0]
   \   000000B4   0x.... 0x....      BL       __aeabi_i2d
   \   000000B8   0xF031 0x4100      BICS     R1,R1,#0x80000000
   \   000000BC   0xEC41 0x0B18      VMOV     D8,R0,R1
   \   000000C0   0x....             LDR.N    R0,??DataTable2_5
   \   000000C2   0x6800             LDR      R0,[R0, #+0]
   \   000000C4   0x.... 0x....      BL       __aeabi_i2d
   \   000000C8   0xF031 0x4100      BICS     R1,R1,#0x80000000
   \   000000CC   0xEC41 0x0B19      VMOV     D9,R0,R1
   \   000000D0   0xEC53 0x2B18      VMOV     R2,R3,D8
   \   000000D4   0x....             LDR.N    R0,??DataTable2_9  ;; 0xc6f7a0b
   \   000000D6   0x....             LDR.N    R1,??DataTable2_10  ;; 0x3f81c001
   \   000000D8   0x.... 0x....      BL       __aeabi_dmul
   \   000000DC   0xEC53 0x2B19      VMOV     R2,R3,D9
   \   000000E0   0x.... 0x....      BL       __aeabi_dmul
   \   000000E4   0x0004             MOVS     R4,R0
   \   000000E6   0x000D             MOVS     R5,R1
   \   000000E8   0x....             LDR.N    R0,??DataTable2_5
   \   000000EA   0x6800             LDR      R0,[R0, #+0]
   \   000000EC   0x.... 0x....      BL       __aeabi_i2d
   \   000000F0   0xF031 0x4100      BICS     R1,R1,#0x80000000
   \   000000F4   0x....             LDR.N    R2,??DataTable2_11  ;; 0x69ad42c4
   \   000000F6   0x....             LDR.N    R3,??DataTable2_12  ;; 0x3fba71de
   \   000000F8   0x.... 0x....      BL       __aeabi_dmul
   \   000000FC   0x0002             MOVS     R2,R0
   \   000000FE   0x000B             MOVS     R3,R1
   \   00000100   0x0020             MOVS     R0,R4
   \   00000102   0x0029             MOVS     R1,R5
   \   00000104   0x.... 0x....      BL       __aeabi_dsub
   \   00000108   0xF05F 0x3233      MOVS     R2,#+858993459
   \   0000010C   0x....             LDR.N    R3,??DataTable2_13  ;; 0x40193333
   \   0000010E   0x.... 0x....      BL       __aeabi_dadd
   \   00000112   0x.... 0x....      BL       __aeabi_d2f
   \   00000116   0x....             LDR.N    R1,??DataTable2_6
   \   00000118   0x6308             STR      R0,[R1, #+48]
     47            if(Angle.P < 5)   
   \                     ??Elder_Rudder_Ctrl_3: (+1)
   \   0000011A   0x....             LDR.N    R0,??DataTable2_6
   \   0000011C   0xED90 0x0A0C      VLDR     S0,[R0, #+48]
   \   00000120   0xEEF1 0x0A04      VMOV.F32 S1,#5.0
   \   00000124   0xEEB4 0x0A60      VCMP.F32 S0,S1
   \   00000128   0xEEF1 0xFA10      FMSTAT   
   \   0000012C   0xD502             BPL.N    ??Elder_Rudder_Ctrl_4
     48              Angle.P = 5;
   \   0000012E   0x....             LDR.N    R0,??DataTable2_6
   \   00000130   0x....             LDR.N    R1,??DataTable2_8  ;; 0x40a00000
   \   00000132   0x6301             STR      R1,[R0, #+48]
     49            if(Angle.P > 12)
   \                     ??Elder_Rudder_Ctrl_4: (+1)
   \   00000134   0x....             LDR.N    R0,??DataTable2_6
   \   00000136   0xED90 0x0A0C      VLDR     S0,[R0, #+48]
   \   0000013A   0xEDDF 0x....      VLDR.W   S1,??DataTable1  ;; 0x41400001
   \   0000013E   0xEEB4 0x0A60      VCMP.F32 S0,S1
   \   00000142   0xEEF1 0xFA10      FMSTAT   
   \   00000146   0xDB02             BLT.N    ??Elder_Rudder_Ctrl_5
     50              Angle.P = 12;
   \   00000148   0x....             LDR.N    R0,??DataTable2_6
   \   0000014A   0x....             LDR.N    R1,??DataTable2_14  ;; 0x41400000
   \   0000014C   0x6301             STR      R1,[R0, #+48]
     51            Angle.P *= 3;
   \                     ??Elder_Rudder_Ctrl_5: (+1)
   \   0000014E   0x....             LDR.N    R0,??DataTable2_6
   \   00000150   0xED90 0x0A0C      VLDR     S0,[R0, #+48]
   \   00000154   0xEEF0 0x0A08      VMOV.F32 S1,#3.0
   \   00000158   0xEE20 0x0A20      VMUL.F32 S0,S0,S1
   \   0000015C   0x....             LDR.N    R0,??DataTable2_6
   \   0000015E   0xED80 0x0A0C      VSTR     S0,[R0, #+48]
     52          
     53          
     54          if(trend==20)
   \   00000162   0x....             LDR.N    R0,??DataTable2_15
   \   00000164   0x6800             LDR      R0,[R0, #+0]
   \   00000166   0x2814             CMP      R0,#+20
   \   00000168   0xD103             BNE.N    ??Elder_Rudder_Ctrl_6
     55              Angle.D = 30;
   \   0000016A   0x....             LDR.N    R0,??DataTable2_6
   \   0000016C   0x....             LDR.N    R1,??DataTable2_16  ;; 0x41f00000
   \   0000016E   0x6341             STR      R1,[R0, #+52]
   \   00000170   0xE002             B.N      ??Elder_Rudder_Ctrl_7
     56            else
     57              Angle.D = 100;
   \                     ??Elder_Rudder_Ctrl_6: (+1)
   \   00000172   0x....             LDR.N    R0,??DataTable2_6
   \   00000174   0x....             LDR.N    R1,??DataTable2_17  ;; 0x42c80000
   \   00000176   0x6341             STR      R1,[R0, #+52]
     58            
     59          
     60            Angle.RudderPWM = (int)(Rudder_Mid + Angle.P*Angle.error + Angle.D*Angle.drror);  
   \                     ??Elder_Rudder_Ctrl_7: (+1)
   \   00000178   0x....             LDR.N    R0,??DataTable2_2
   \   0000017A   0xED90 0x0A00      VLDR     S0,[R0, #0]
   \   0000017E   0xEEB8 0x0AC0      VCVT.F32.S32 S0,S0
   \   00000182   0x....             LDR.N    R0,??DataTable2_6
   \   00000184   0xEDD0 0x0A00      VLDR     S1,[R0, #0]
   \   00000188   0xEEF8 0x0AE0      VCVT.F32.S32 S1,S1
   \   0000018C   0x....             LDR.N    R0,??DataTable2_6
   \   0000018E   0xED90 0x1A0C      VLDR     S2,[R0, #+48]
   \   00000192   0xEE00 0x0A81      VMLA.F32 S0,S1,S2
   \   00000196   0x....             LDR.N    R0,??DataTable2_6
   \   00000198   0xEDD0 0x0A01      VLDR     S1,[R0, #+4]
   \   0000019C   0xEEF8 0x0AE0      VCVT.F32.S32 S1,S1
   \   000001A0   0x....             LDR.N    R0,??DataTable2_6
   \   000001A2   0xED90 0x1A0D      VLDR     S2,[R0, #+52]
   \   000001A6   0xEE00 0x0A81      VMLA.F32 S0,S1,S2
   \   000001AA   0xEEBD 0x0AC0      VCVT.S32.F32 S0,S0
   \   000001AE   0xEE10 0x0A10      VMOV     R0,S0
   \   000001B2   0x....             LDR.N    R1,??DataTable2_6
   \   000001B4   0x8708             STRH     R0,[R1, #+56]
     61            
     62            //限幅保护  
     63            if(Angle.RudderPWM > Rudder_Max)
   \   000001B6   0x....             LDR.N    R0,??DataTable2_4
   \   000001B8   0x6800             LDR      R0,[R0, #+0]
   \   000001BA   0x....             LDR.N    R1,??DataTable2_6
   \   000001BC   0x8F09             LDRH     R1,[R1, #+56]
   \   000001BE   0x4288             CMP      R0,R1
   \   000001C0   0xDA04             BGE.N    ??Elder_Rudder_Ctrl_8
     64              Angle.RudderPWM = Rudder_Max;
   \   000001C2   0x....             LDR.N    R0,??DataTable2_4
   \   000001C4   0x6800             LDR      R0,[R0, #+0]
   \   000001C6   0x....             LDR.N    R1,??DataTable2_6
   \   000001C8   0x8708             STRH     R0,[R1, #+56]
   \   000001CA   0xE009             B.N      ??Elder_Rudder_Ctrl_9
     65            else if(Angle.RudderPWM < Rudder_Min)
   \                     ??Elder_Rudder_Ctrl_8: (+1)
   \   000001CC   0x....             LDR.N    R0,??DataTable2_6
   \   000001CE   0x8F00             LDRH     R0,[R0, #+56]
   \   000001D0   0x....             LDR.N    R1,??DataTable2_3
   \   000001D2   0x6809             LDR      R1,[R1, #+0]
   \   000001D4   0x4288             CMP      R0,R1
   \   000001D6   0xDA03             BGE.N    ??Elder_Rudder_Ctrl_9
     66              Angle.RudderPWM = Rudder_Min;
   \   000001D8   0x....             LDR.N    R0,??DataTable2_3
   \   000001DA   0x6800             LDR      R0,[R0, #+0]
   \   000001DC   0x....             LDR.N    R1,??DataTable2_6
   \   000001DE   0x8708             STRH     R0,[R1, #+56]
     67            
     68            //Angle.RudderPWM = xy;
     69            LPLD_FTM_PWM_ChangeDuty(FTM2, FTM_Ch1, Angle.RudderPWM);
   \                     ??Elder_Rudder_Ctrl_9: (+1)
   \   000001E0   0x....             LDR.N    R0,??DataTable2_6
   \   000001E2   0x8F02             LDRH     R2,[R0, #+56]
   \   000001E4   0x2101             MOVS     R1,#+1
   \   000001E6   0x....             LDR.N    R0,??DataTable2_18  ;; 0x400b8000
   \   000001E8   0x.... 0x....      BL       LPLD_FTM_PWM_ChangeDuty
     70          }
   \   000001EC   0xECBD 0x8B04      VPOP     {D8-D9}
   \   000001F0   0xBD31             POP      {R0,R4,R5,PC}    ;; return
     71          
     72          
     73          /***********老二舵机控制************/

   \                                 In section .text, align 2, keep-with-next
     74          void Younger_Rudder_Ctrl()
     75          {     
   \                     Younger_Rudder_Ctrl: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
     76            Rudder_Err = 500;
   \   00000002   0xF44F 0x70FA      MOV      R0,#+500
   \   00000006   0x....             LDR.N    R1,??DataTable2_1
   \   00000008   0x6008             STR      R0,[R1, #+0]
     77            Rudder_Mid = 2755; 
   \   0000000A   0xF640 0x20C3      MOVW     R0,#+2755
   \   0000000E   0x....             LDR.N    R1,??DataTable2_2
   \   00000010   0x6008             STR      R0,[R1, #+0]
     78            Rudder_Min = Rudder_Mid - Rudder_Err;
   \   00000012   0x....             LDR.N    R0,??DataTable2_2
   \   00000014   0x6800             LDR      R0,[R0, #+0]
   \   00000016   0x....             LDR.N    R1,??DataTable2_1
   \   00000018   0x6809             LDR      R1,[R1, #+0]
   \   0000001A   0x1A40             SUBS     R0,R0,R1
   \   0000001C   0x....             LDR.N    R1,??DataTable2_3
   \   0000001E   0x6008             STR      R0,[R1, #+0]
     79            Rudder_Max = Rudder_Mid + Rudder_Err;
   \   00000020   0x....             LDR.N    R0,??DataTable2_2
   \   00000022   0x6800             LDR      R0,[R0, #+0]
   \   00000024   0x....             LDR.N    R1,??DataTable2_1
   \   00000026   0x6809             LDR      R1,[R1, #+0]
   \   00000028   0x1808             ADDS     R0,R1,R0
   \   0000002A   0x....             LDR.N    R1,??DataTable2_4
   \   0000002C   0x6008             STR      R0,[R1, #+0]
     80            
     81            //PID调节
     82            Angle.error = Distance;
   \   0000002E   0x....             LDR.N    R0,??DataTable2_5
   \   00000030   0x6800             LDR      R0,[R0, #+0]
   \   00000032   0x....             LDR.N    R1,??DataTable2_6
   \   00000034   0x6008             STR      R0,[R1, #+0]
     83            Angle.drror = Angle.error - Angle.pre_error[8];
   \   00000036   0x....             LDR.N    R0,??DataTable2_6
   \   00000038   0x6800             LDR      R0,[R0, #+0]
   \   0000003A   0x....             LDR.N    R1,??DataTable2_6
   \   0000003C   0x6A89             LDR      R1,[R1, #+40]
   \   0000003E   0x1A40             SUBS     R0,R0,R1
   \   00000040   0x....             LDR.N    R1,??DataTable2_6
   \   00000042   0x6048             STR      R0,[R1, #+4]
     84            
     85            //参数更新
     86            for(uint8 i=0; i<9; i++)
   \   00000044   0x2000             MOVS     R0,#+0
   \   00000046   0xE00A             B.N      ??Younger_Rudder_Ctrl_0
     87              Angle.pre_error[i] = Angle.pre_error[i+1];
   \                     ??Younger_Rudder_Ctrl_1: (+1)
   \   00000048   0x....             LDR.N    R1,??DataTable2_6
   \   0000004A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000004C   0xEB11 0x0180      ADDS     R1,R1,R0, LSL #+2
   \   00000050   0x68C9             LDR      R1,[R1, #+12]
   \   00000052   0x....             LDR.N    R2,??DataTable2_6
   \   00000054   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000056   0xEB12 0x0280      ADDS     R2,R2,R0, LSL #+2
   \   0000005A   0x6091             STR      R1,[R2, #+8]
   \   0000005C   0x1C40             ADDS     R0,R0,#+1
   \                     ??Younger_Rudder_Ctrl_0: (+1)
   \   0000005E   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000060   0x2809             CMP      R0,#+9
   \   00000062   0xDBF1             BLT.N    ??Younger_Rudder_Ctrl_1
     88            Angle.pre_error[9] = Angle.error;
   \   00000064   0x....             LDR.N    R0,??DataTable2_6
   \   00000066   0x6800             LDR      R0,[R0, #+0]
   \   00000068   0x....             LDR.N    R1,??DataTable2_6
   \   0000006A   0x62C8             STR      R0,[R1, #+44]
     89            
     90            Angle.P = 14.5*exp(0.0351*fabs(Distance));    
   \   0000006C   0x....             LDR.N    R0,??DataTable2_5
   \   0000006E   0x6800             LDR      R0,[R0, #+0]
   \   00000070   0x.... 0x....      BL       __aeabi_i2d
   \   00000074   0xF031 0x4100      BICS     R1,R1,#0x80000000
   \   00000078   0x....             LDR.N    R2,??DataTable2_19  ;; 0x902de00d
   \   0000007A   0x....             LDR.N    R3,??DataTable2_20  ;; 0x3fa1f8a0
   \   0000007C   0x.... 0x....      BL       __aeabi_dmul
   \   00000080   0xEC41 0x0B10      VMOV     D0,R0,R1
   \   00000084   0x.... 0x....      BL       exp
   \   00000088   0xEC53 0x2B10      VMOV     R2,R3,D0
   \   0000008C   0x2000             MOVS     R0,#+0
   \   0000008E   0x....             LDR.N    R1,??DataTable2_21  ;; 0x402d0000
   \   00000090   0x.... 0x....      BL       __aeabi_dmul
   \   00000094   0x.... 0x....      BL       __aeabi_d2f
   \   00000098   0x....             LDR.N    R1,??DataTable2_6
   \   0000009A   0x6308             STR      R0,[R1, #+48]
     91            if(Flag_Island == 1) Angle.P /= 1.0; //环岛处理  
   \   0000009C   0x....             LDR.N    R0,??DataTable2_22
   \   0000009E   0x7800             LDRB     R0,[R0, #+0]
   \   000000A0   0x2801             CMP      R0,#+1
   \   000000A2   0xD10B             BNE.N    ??Younger_Rudder_Ctrl_2
   \   000000A4   0x....             LDR.N    R0,??DataTable2_6
   \   000000A6   0x6B00             LDR      R0,[R0, #+48]
   \   000000A8   0x.... 0x....      BL       __aeabi_f2d
   \   000000AC   0x2200             MOVS     R2,#+0
   \   000000AE   0x....             LDR.N    R3,??DataTable2_23  ;; 0x3ff00000
   \   000000B0   0x.... 0x....      BL       __aeabi_ddiv
   \   000000B4   0x.... 0x....      BL       __aeabi_d2f
   \   000000B8   0x....             LDR.N    R1,??DataTable2_6
   \   000000BA   0x6308             STR      R0,[R1, #+48]
     92            if(Flag_Ramp == 2)   Angle.P *= 2.5; //坡道处理
   \                     ??Younger_Rudder_Ctrl_2: (+1)
   \   000000BC   0x....             LDR.N    R0,??DataTable2_24
   \   000000BE   0x7800             LDRB     R0,[R0, #+0]
   \   000000C0   0x2802             CMP      R0,#+2
   \   000000C2   0xD10B             BNE.N    ??Younger_Rudder_Ctrl_3
   \   000000C4   0x....             LDR.N    R0,??DataTable2_6
   \   000000C6   0x6B00             LDR      R0,[R0, #+48]
   \   000000C8   0x.... 0x....      BL       __aeabi_f2d
   \   000000CC   0x2200             MOVS     R2,#+0
   \   000000CE   0x....             LDR.N    R3,??DataTable2_25  ;; 0x40040000
   \   000000D0   0x.... 0x....      BL       __aeabi_dmul
   \   000000D4   0x.... 0x....      BL       __aeabi_d2f
   \   000000D8   0x....             LDR.N    R1,??DataTable2_6
   \   000000DA   0x6308             STR      R0,[R1, #+48]
     93            
     94            if(fabs(Distance)<=4 && fabs(Angle.drror)<3)
   \                     ??Younger_Rudder_Ctrl_3: (+1)
   \   000000DC   0x....             LDR.N    R0,??DataTable2_5
   \   000000DE   0x6800             LDR      R0,[R0, #+0]
   \   000000E0   0x.... 0x....      BL       __aeabi_i2d
   \   000000E4   0xF031 0x4100      BICS     R1,R1,#0x80000000
   \   000000E8   0x2201             MOVS     R2,#+1
   \   000000EA   0x....             LDR.N    R3,??DataTable2_26  ;; 0x40100000
   \   000000EC   0x.... 0x....      BL       __aeabi_cdcmple
   \   000000F0   0xD20E             BCS.N    ??Younger_Rudder_Ctrl_4
   \   000000F2   0x....             LDR.N    R0,??DataTable2_6
   \   000000F4   0x6840             LDR      R0,[R0, #+4]
   \   000000F6   0x.... 0x....      BL       __aeabi_i2d
   \   000000FA   0xF031 0x4100      BICS     R1,R1,#0x80000000
   \   000000FE   0x2200             MOVS     R2,#+0
   \   00000100   0x....             LDR.N    R3,??DataTable2_27  ;; 0x40080000
   \   00000102   0x.... 0x....      BL       __aeabi_cdcmple
   \   00000106   0xD203             BCS.N    ??Younger_Rudder_Ctrl_4
     95              Angle.D = 20;
   \   00000108   0x....             LDR.N    R0,??DataTable2_6
   \   0000010A   0x....             LDR.N    R1,??DataTable2_28  ;; 0x41a00000
   \   0000010C   0x6341             STR      R1,[R0, #+52]
   \   0000010E   0xE002             B.N      ??Younger_Rudder_Ctrl_5
     96            else
     97              Angle.D = 80;
   \                     ??Younger_Rudder_Ctrl_4: (+1)
   \   00000110   0x....             LDR.N    R0,??DataTable2_6
   \   00000112   0x....             LDR.N    R1,??DataTable2_29  ;; 0x42a00000
   \   00000114   0x6341             STR      R1,[R0, #+52]
     98            
     99            Angle.RudderPWM = (int)(Rudder_Mid + Angle.P*Angle.error + Angle.D*Angle.drror);   
   \                     ??Younger_Rudder_Ctrl_5: (+1)
   \   00000116   0x....             LDR.N    R0,??DataTable2_2
   \   00000118   0xED90 0x0A00      VLDR     S0,[R0, #0]
   \   0000011C   0xEEB8 0x0AC0      VCVT.F32.S32 S0,S0
   \   00000120   0x....             LDR.N    R0,??DataTable2_6
   \   00000122   0xEDD0 0x0A00      VLDR     S1,[R0, #0]
   \   00000126   0xEEF8 0x0AE0      VCVT.F32.S32 S1,S1
   \   0000012A   0x....             LDR.N    R0,??DataTable2_6
   \   0000012C   0xED90 0x1A0C      VLDR     S2,[R0, #+48]
   \   00000130   0xEE00 0x0A81      VMLA.F32 S0,S1,S2
   \   00000134   0x....             LDR.N    R0,??DataTable2_6
   \   00000136   0xEDD0 0x0A01      VLDR     S1,[R0, #+4]
   \   0000013A   0xEEF8 0x0AE0      VCVT.F32.S32 S1,S1
   \   0000013E   0x....             LDR.N    R0,??DataTable2_6
   \   00000140   0xED90 0x1A0D      VLDR     S2,[R0, #+52]
   \   00000144   0xEE00 0x0A81      VMLA.F32 S0,S1,S2
   \   00000148   0xEEBD 0x0AC0      VCVT.S32.F32 S0,S0
   \   0000014C   0xEE10 0x0A10      VMOV     R0,S0
   \   00000150   0x....             LDR.N    R1,??DataTable2_6
   \   00000152   0x8708             STRH     R0,[R1, #+56]
    100            
    101          //限幅保护  
    102            if(Angle.RudderPWM > Rudder_Max)
   \   00000154   0x....             LDR.N    R0,??DataTable2_4
   \   00000156   0x6800             LDR      R0,[R0, #+0]
   \   00000158   0x....             LDR.N    R1,??DataTable2_6
   \   0000015A   0x8F09             LDRH     R1,[R1, #+56]
   \   0000015C   0x4288             CMP      R0,R1
   \   0000015E   0xDA04             BGE.N    ??Younger_Rudder_Ctrl_6
    103              Angle.RudderPWM = Rudder_Max;
   \   00000160   0x....             LDR.N    R0,??DataTable2_4
   \   00000162   0x6800             LDR      R0,[R0, #+0]
   \   00000164   0x....             LDR.N    R1,??DataTable2_6
   \   00000166   0x8708             STRH     R0,[R1, #+56]
   \   00000168   0xE009             B.N      ??Younger_Rudder_Ctrl_7
    104            else if(Angle.RudderPWM < Rudder_Min)
   \                     ??Younger_Rudder_Ctrl_6: (+1)
   \   0000016A   0x....             LDR.N    R0,??DataTable2_6
   \   0000016C   0x8F00             LDRH     R0,[R0, #+56]
   \   0000016E   0x....             LDR.N    R1,??DataTable2_3
   \   00000170   0x6809             LDR      R1,[R1, #+0]
   \   00000172   0x4288             CMP      R0,R1
   \   00000174   0xDA03             BGE.N    ??Younger_Rudder_Ctrl_7
    105              Angle.RudderPWM = Rudder_Min;
   \   00000176   0x....             LDR.N    R0,??DataTable2_3
   \   00000178   0x6800             LDR      R0,[R0, #+0]
   \   0000017A   0x....             LDR.N    R1,??DataTable2_6
   \   0000017C   0x8708             STRH     R0,[R1, #+56]
    106            
    107            //Angle.    RudderPWM = xy;
    108            LPLD_FTM_PWM_ChangeDuty(FTM2, FTM_Ch1, Angle.RudderPWM);
   \                     ??Younger_Rudder_Ctrl_7: (+1)
   \   0000017E   0x....             LDR.N    R0,??DataTable2_6
   \   00000180   0x8F02             LDRH     R2,[R0, #+56]
   \   00000182   0x2101             MOVS     R1,#+1
   \   00000184   0x....             LDR.N    R0,??DataTable2_18  ;; 0x400b8000
   \   00000186   0x.... 0x....      BL       LPLD_FTM_PWM_ChangeDuty
    109          }
   \   0000018A   0xBD01             POP      {R0,PC}          ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1:
   \   00000000   0x41400001         DC32     0x41400001

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2:
   \   00000000   0x........         DC32     Family_Status

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_1:
   \   00000000   0x........         DC32     Rudder_Err

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_2:
   \   00000000   0x........         DC32     Rudder_Mid

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_3:
   \   00000000   0x........         DC32     Rudder_Min

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_4:
   \   00000000   0x........         DC32     Rudder_Max

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_5:
   \   00000000   0x........         DC32     Distance

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_6:
   \   00000000   0x........         DC32     Angle

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_7:
   \   00000000   0x40140000         DC32     0x40140000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_8:
   \   00000000   0x40A00000         DC32     0x40a00000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_9:
   \   00000000   0x0C6F7A0B         DC32     0xc6f7a0b

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_10:
   \   00000000   0x3F81C001         DC32     0x3f81c001

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_11:
   \   00000000   0x69AD42C4         DC32     0x69ad42c4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_12:
   \   00000000   0x3FBA71DE         DC32     0x3fba71de

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_13:
   \   00000000   0x40193333         DC32     0x40193333

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_14:
   \   00000000   0x41400000         DC32     0x41400000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_15:
   \   00000000   0x........         DC32     trend

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_16:
   \   00000000   0x41F00000         DC32     0x41f00000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_17:
   \   00000000   0x42C80000         DC32     0x42c80000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_18:
   \   00000000   0x400B8000         DC32     0x400b8000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_19:
   \   00000000   0x902DE00D         DC32     0x902de00d

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_20:
   \   00000000   0x3FA1F8A0         DC32     0x3fa1f8a0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_21:
   \   00000000   0x402D0000         DC32     0x402d0000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_22:
   \   00000000   0x........         DC32     Flag_Island

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_23:
   \   00000000   0x3FF00000         DC32     0x3ff00000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_24:
   \   00000000   0x........         DC32     Flag_Ramp

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_25:
   \   00000000   0x40040000         DC32     0x40040000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_26:
   \   00000000   0x40100000         DC32     0x40100000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_27:
   \   00000000   0x40080000         DC32     0x40080000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_28:
   \   00000000   0x41A00000         DC32     0x41a00000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_29:
   \   00000000   0x42A00000         DC32     0x42a00000

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      32   Elder_Rudder_Ctrl
        32   -> LPLD_FTM_PWM_ChangeDuty
        32   -> __aeabi_d2f
        32   -> __aeabi_dadd
        32   -> __aeabi_dmul
        32   -> __aeabi_dsub
        32   -> __aeabi_i2d
        32 __aeabi_cdcmple
       8   Rudder_Ctrl
         8   -> Elder_Rudder_Ctrl
         8   -> Younger_Rudder_Ctrl
       8   Younger_Rudder_Ctrl
         8   -> LPLD_FTM_PWM_ChangeDuty
         8   -> __aeabi_d2f
         8   -> __aeabi_ddiv
         8   -> __aeabi_dmul
         8   -> __aeabi_f2d
         8   -> __aeabi_i2d
         8   -> exp
         8 __aeabi_cdcmple


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable1
       4  ??DataTable2
       4  ??DataTable2_1
       4  ??DataTable2_10
       4  ??DataTable2_11
       4  ??DataTable2_12
       4  ??DataTable2_13
       4  ??DataTable2_14
       4  ??DataTable2_15
       4  ??DataTable2_16
       4  ??DataTable2_17
       4  ??DataTable2_18
       4  ??DataTable2_19
       4  ??DataTable2_2
       4  ??DataTable2_20
       4  ??DataTable2_21
       4  ??DataTable2_22
       4  ??DataTable2_23
       4  ??DataTable2_24
       4  ??DataTable2_25
       4  ??DataTable2_26
       4  ??DataTable2_27
       4  ??DataTable2_28
       4  ??DataTable2_29
       4  ??DataTable2_3
       4  ??DataTable2_4
       4  ??DataTable2_5
       4  ??DataTable2_6
       4  ??DataTable2_7
       4  ??DataTable2_8
       4  ??DataTable2_9
      60  Angle
     498  Elder_Rudder_Ctrl
      24  Rudder_Ctrl
       4  Rudder_Err
       4  Rudder_Max
       4  Rudder_Mid
       4  Rudder_Min
     396  Younger_Rudder_Ctrl

 
    76 bytes in section .bss
 1 042 bytes in section .text
 
 1 042 bytes of CODE memory
    76 bytes of DATA memory

Errors: none
Warnings: none
