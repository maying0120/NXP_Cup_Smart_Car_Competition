###############################################################################
#
# IAR ANSI C/C++ Compiler V7.20.2.7424/W32 for ARM        11/Jul/2017  19:16:13
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after（完整程序）\app\OLED.c
#    Command line =  
#        C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after（完整程序）\app\OLED.c
#        -D LPLD_K60 -D USE_K60F12 -lCN
#        C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after（完整程序）\iar\FLASH\List\
#        -lB
#        C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after（完整程序）\iar\FLASH\List\
#        -o
#        C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after（完整程序）\iar\FLASH\Obj\
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M4F -e --fpu=None --dlib_config
#        D:\IAR\arm\INC\c\DLib_Config_Normal.h -I
#        C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after（完整程序）\iar\..\app\
#        -I
#        C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after（完整程序）\iar\..\..\..\lib\CPU\
#        -I
#        C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after（完整程序）\iar\..\..\..\lib\common\
#        -I
#        C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after（完整程序）\iar\..\..\..\lib\LPLD\
#        -I
#        C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after（完整程序）\iar\..\..\..\lib\LPLD\HW\
#        -I
#        C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after（完整程序）\iar\..\..\..\lib\LPLD\DEV\
#        -I
#        C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after（完整程序）\iar\..\..\..\lib\LPLD\FUNC\
#        -I
#        C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after（完整程序）\iar\..\..\..\lib\uCOS-II\Ports\
#        -I
#        C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after（完整程序）\iar\..\..\..\lib\uCOS-II\Source\
#        -I
#        C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after（完整程序）\iar\..\..\..\lib\FatFs\
#        -I
#        C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after（完整程序）\iar\..\..\..\lib\FatFs\option\
#        -I
#        C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after（完整程序）\iar\..\..\..\lib\USB\common\
#        -I
#        C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after（完整程序）\iar\..\..\..\lib\USB\driver\
#        -I
#        C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after（完整程序）\iar\..\..\..\lib\USB\descriptor\
#        -I
#        C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after（完整程序）\iar\..\..\..\lib\USB\class\
#        -Ol -I D:\IAR\arm\CMSIS\Include\ -D ARM_MATH_CM4
#    List file    =  
#        C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after（完整程序）\iar\FLASH\List\OLED.lst
#    Object file  =  
#        C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after（完整程序）\iar\FLASH\Obj\OLED.o
#
###############################################################################

C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after（完整程序）\app\OLED.c
      1          #include "Includes.h"
      2          
      3          
      4          /************************************************************************
      5               OLED 一行可以显示16个字符，可以显示8行。
      6          ************************************************************************/
      7          
      8          #define XLevelL		0x00
      9          #define XLevelH		0x10
     10          #define XLevel		((XLevelH&0x0F)*16+XLevelL)
     11          #define Max_Column	128
     12          #define Max_Row		64 
     13          #define	Brightness	0xCF
     14          
     15          /*
     16          4线SPI使用说明：
     17          VBT 供内部DC-DC电压，3.3~4.3V，如果使用5V电压，为保险起见串一个100~500欧的电阻
     18          VCC 供内部逻辑电压 1.8~6V
     19          GND 地
     20          
     21          BS0 低电平
     22          BS1 低电平
     23          BS2 低电平
     24          
     25          CS  片选管脚
     26          DC  命令数据选择管脚
     27          RES 模块复位管脚
     28          D0（SCLK） ，时钟脚，由MCU控制
     29          D1（MOSI） ，主输出从输入数据脚，由MCU控制
     30          
     31          D2 悬空
     32          D3-D7 ， 低电平 ， 也可悬空，但最好设为低电平
     33          RD  低电平 ，也可悬空，但最好设为低电平
     34          RW  低电平 ，也可悬空，但最好设为低电平
     35          RD  低电平 ，也可悬空，但最好设为低电平
     36          */
     37          //
     38          
     39          extern uint8 Turn_Around;
     40          extern uint8 Family_Status;
     41          extern int peak[];
     42          extern int E_Max[];
     43          extern int Target,Feedback;
     44          extern struct Rudder Angle;
     45          extern int Error;
     46          extern long int Sum_Distance;
     47          extern int Mixed_Distance;
     48          extern uint8 ShowOrDebug;
     49          extern int8  Show_Page_Slt;
     50          extern int8  Debug_Page_Slt;
     51          extern int8  Debug_Para_Slt;
     52          extern uint8 peak_real[];
     53          
     54          #define X_WIDTH 128
     55          #define Y_WIDTH 64
     56          //======================================

   \                                 In section .rodata, align 4
     57          const uint8 F6x8[][6] =
   \                     F6x8:
   \   00000000   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 47, 0, 0, 0, 0, 7, 0, 7, 0, 0, 20, 127
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x2F    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x07 0x00    
   \              0x07 0x00    
   \              0x00 0x14    
   \              0x7F         
   \   00000015   0x14 0x7F          DC8 20, 127, 20, 0, 36, 42, 127, 42, 18, 0, 98, 100, 8, 19, 35, 0, 54
   \              0x14 0x00    
   \              0x24 0x2A    
   \              0x7F 0x2A    
   \              0x12 0x00    
   \              0x62 0x64    
   \              0x08 0x13    
   \              0x23 0x00    
   \              0x36         
   \   00000026   0x49 0x55          DC8 73, 85, 34, 80, 0, 0, 5, 3, 0, 0, 0, 0, 28, 34, 65, 0, 0, 0, 65, 34
   \              0x22 0x50    
   \              0x00 0x00    
   \              0x05 0x03    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x1C 0x22    
   \              0x41 0x00    
   \              0x00 0x00    
   \              0x41 0x22    
   \   0000003A   0x1C 0x00          DC8 28, 0, 0, 20, 8, 62, 8, 20, 0, 8, 8, 62, 8, 8, 0, 0, 0, 160, 96, 0
   \              0x00 0x14    
   \              0x08 0x3E    
   \              0x08 0x14    
   \              0x00 0x08    
   \              0x08 0x3E    
   \              0x08 0x08    
   \              0x00 0x00    
   \              0x00 0xA0    
   \              0x60 0x00    
   \   0000004E   0x00 0x08          DC8 0, 8, 8, 8, 8, 8, 0, 0, 96, 96, 0, 0, 0, 32, 16, 8, 4, 2, 0, 62, 81
   \              0x08 0x08    
   \              0x08 0x08    
   \              0x00 0x00    
   \              0x60 0x60    
   \              0x00 0x00    
   \              0x00 0x20    
   \              0x10 0x08    
   \              0x04 0x02    
   \              0x00 0x3E    
   \              0x51         
   \   00000063   0x49 0x45          DC8 73, 69, 62, 0, 0, 66, 127, 64, 0, 0, 66, 97, 81, 73, 70, 0, 33, 65
   \              0x3E 0x00    
   \              0x00 0x42    
   \              0x7F 0x40    
   \              0x00 0x00    
   \              0x42 0x61    
   \              0x51 0x49    
   \              0x46 0x00    
   \              0x21 0x41    
   \   00000075   0x45 0x4B          DC8 69, 75, 49, 0, 24, 20, 18, 127, 16, 0, 39, 69, 69, 69, 57, 0, 60
   \              0x31 0x00    
   \              0x18 0x14    
   \              0x12 0x7F    
   \              0x10 0x00    
   \              0x27 0x45    
   \              0x45 0x45    
   \              0x39 0x00    
   \              0x3C         
   \   00000086   0x4A 0x49          DC8 74, 73, 73, 48, 0, 1, 113, 9, 5, 3, 0, 54, 73, 73, 73, 54, 0, 6, 73
   \              0x49 0x30    
   \              0x00 0x01    
   \              0x71 0x09    
   \              0x05 0x03    
   \              0x00 0x36    
   \              0x49 0x49    
   \              0x49 0x36    
   \              0x00 0x06    
   \              0x49         
   \   00000099   0x49 0x29          DC8 73, 41, 30, 0, 0, 54, 54, 0, 0, 0, 0, 86, 54, 0, 0, 0, 8, 20, 34
   \              0x1E 0x00    
   \              0x00 0x36    
   \              0x36 0x00    
   \              0x00 0x00    
   \              0x00 0x56    
   \              0x36 0x00    
   \              0x00 0x00    
   \              0x08 0x14    
   \              0x22         
   \   000000AC   0x41 0x00          DC8 65, 0, 0, 20, 20, 20, 20, 20, 0, 0, 65, 34, 20, 8, 0, 2, 1, 81, 9
   \              0x00 0x14    
   \              0x14 0x14    
   \              0x14 0x14    
   \              0x00 0x00    
   \              0x41 0x22    
   \              0x14 0x08    
   \              0x00 0x02    
   \              0x01 0x51    
   \              0x09         
   \   000000BF   0x06 0x00          DC8 6, 0, 50, 73, 89, 81, 62, 0, 124, 18, 17, 18, 124, 0, 127, 73, 73
   \              0x32 0x49    
   \              0x59 0x51    
   \              0x3E 0x00    
   \              0x7C 0x12    
   \              0x11 0x12    
   \              0x7C 0x00    
   \              0x7F 0x49    
   \              0x49         
   \   000000D0   0x49 0x36          DC8 73, 54, 0, 62, 65, 65, 65, 34, 0, 127, 65, 65, 34, 28, 0, 127, 73
   \              0x00 0x3E    
   \              0x41 0x41    
   \              0x41 0x22    
   \              0x00 0x7F    
   \              0x41 0x41    
   \              0x22 0x1C    
   \              0x00 0x7F    
   \              0x49         
   \   000000E1   0x49 0x49          DC8 73, 73, 65, 0, 127, 9, 9, 9, 1, 0, 62, 65, 73, 73, 122, 0, 127, 8
   \              0x41 0x00    
   \              0x7F 0x09    
   \              0x09 0x09    
   \              0x01 0x00    
   \              0x3E 0x41    
   \              0x49 0x49    
   \              0x7A 0x00    
   \              0x7F 0x08    
   \   000000F3   0x08 0x08          DC8 8, 8, 127, 0, 0, 65, 127, 65, 0, 0, 32, 64, 65, 63, 1, 0, 127, 8
   \              0x7F 0x00    
   \              0x00 0x41    
   \              0x7F 0x41    
   \              0x00 0x00    
   \              0x20 0x40    
   \              0x41 0x3F    
   \              0x01 0x00    
   \              0x7F 0x08    
   \   00000105   0x14 0x22          DC8 20, 34, 65, 0, 127, 64, 64, 64, 64, 0, 127, 2, 12, 2, 127, 0, 127
   \              0x41 0x00    
   \              0x7F 0x40    
   \              0x40 0x40    
   \              0x40 0x00    
   \              0x7F 0x02    
   \              0x0C 0x02    
   \              0x7F 0x00    
   \              0x7F         
   \   00000116   0x04 0x08          DC8 4, 8, 16, 127, 0, 62, 65, 65, 65, 62, 0, 127, 9, 9, 9, 6, 0, 62, 65
   \              0x10 0x7F    
   \              0x00 0x3E    
   \              0x41 0x41    
   \              0x41 0x3E    
   \              0x00 0x7F    
   \              0x09 0x09    
   \              0x09 0x06    
   \              0x00 0x3E    
   \              0x41         
   \   00000129   0x51 0x21          DC8 81, 33, 94, 0, 127, 9, 25, 41, 70, 0, 70, 73, 73, 73, 49, 0, 1, 1
   \              0x5E 0x00    
   \              0x7F 0x09    
   \              0x19 0x29    
   \              0x46 0x00    
   \              0x46 0x49    
   \              0x49 0x49    
   \              0x31 0x00    
   \              0x01 0x01    
   \   0000013B   0x7F 0x01          DC8 127, 1, 1, 0, 63, 64, 64, 64, 63, 0, 31, 32, 64, 32, 31, 0, 63, 64
   \              0x01 0x00    
   \              0x3F 0x40    
   \              0x40 0x40    
   \              0x3F 0x00    
   \              0x1F 0x20    
   \              0x40 0x20    
   \              0x1F 0x00    
   \              0x3F 0x40    
   \   0000014D   0x38 0x40          DC8 56, 64, 63, 0, 99, 20, 8, 20, 99, 0, 7, 8, 112, 8, 7, 0, 97, 81, 73
   \              0x3F 0x00    
   \              0x63 0x14    
   \              0x08 0x14    
   \              0x63 0x00    
   \              0x07 0x08    
   \              0x70 0x08    
   \              0x07 0x00    
   \              0x61 0x51    
   \              0x49         
   \   00000160   0x45 0x43          DC8 69, 67, 0, 0, 127, 65, 65, 0, 0, 85, 42, 85, 42, 85, 0, 0, 65, 65
   \              0x00 0x00    
   \              0x7F 0x41    
   \              0x41 0x00    
   \              0x00 0x55    
   \              0x2A 0x55    
   \              0x2A 0x55    
   \              0x00 0x00    
   \              0x41 0x41    
   \   00000172   0x7F 0x00          DC8 127, 0, 0, 4, 2, 1, 2, 4, 0, 64, 64, 64, 64, 64, 0, 0, 1, 2, 4, 0
   \              0x00 0x04    
   \              0x02 0x01    
   \              0x02 0x04    
   \              0x00 0x40    
   \              0x40 0x40    
   \              0x40 0x40    
   \              0x00 0x00    
   \              0x01 0x02    
   \              0x04 0x00    
   \   00000186   0x00 0x20          DC8 0, 32, 84, 84, 84, 120, 0, 127, 72, 68, 68, 56, 0, 56, 68, 68, 68
   \              0x54 0x54    
   \              0x54 0x78    
   \              0x00 0x7F    
   \              0x48 0x44    
   \              0x44 0x38    
   \              0x00 0x38    
   \              0x44 0x44    
   \              0x44         
   \   00000197   0x20 0x00          DC8 32, 0, 56, 68, 68, 72, 127, 0, 56, 84, 84, 84, 24, 0, 8, 126, 9, 1
   \              0x38 0x44    
   \              0x44 0x48    
   \              0x7F 0x00    
   \              0x38 0x54    
   \              0x54 0x54    
   \              0x18 0x00    
   \              0x08 0x7E    
   \              0x09 0x01    
   \   000001A9   0x02 0x00          DC8 2, 0, 24, 164, 164, 164, 124, 0, 127, 8, 4, 4, 120, 0, 0, 68, 125
   \              0x18 0xA4    
   \              0xA4 0xA4    
   \              0x7C 0x00    
   \              0x7F 0x08    
   \              0x04 0x04    
   \              0x78 0x00    
   \              0x00 0x44    
   \              0x7D         
   \   000001BA   0x40 0x00          DC8 64, 0, 0, 64, 128, 132, 125, 0, 0, 127, 16, 40, 68, 0, 0, 0, 65
   \              0x00 0x40    
   \              0x80 0x84    
   \              0x7D 0x00    
   \              0x00 0x7F    
   \              0x10 0x28    
   \              0x44 0x00    
   \              0x00 0x00    
   \              0x41         
   \   000001CB   0x7F 0x40          DC8 127, 64, 0, 0, 124, 4, 24, 4, 120, 0, 124, 8, 4, 4, 120, 0, 56, 68
   \              0x00 0x00    
   \              0x7C 0x04    
   \              0x18 0x04    
   \              0x78 0x00    
   \              0x7C 0x08    
   \              0x04 0x04    
   \              0x78 0x00    
   \              0x38 0x44    
   \   000001DD   0x44 0x44          DC8 68, 68, 56, 0, 252, 36, 36, 36, 24, 0, 24, 36, 36, 24, 252, 0, 124
   \              0x38 0x00    
   \              0xFC 0x24    
   \              0x24 0x24    
   \              0x18 0x00    
   \              0x18 0x24    
   \              0x24 0x18    
   \              0xFC 0x00    
   \              0x7C         
   \   000001EE   0x08 0x04          DC8 8, 4, 4, 8, 0, 72, 84, 84, 84, 32, 0, 4, 63, 68, 64, 32, 0, 60, 64
   \              0x04 0x08    
   \              0x00 0x48    
   \              0x54 0x54    
   \              0x54 0x20    
   \              0x00 0x04    
   \              0x3F 0x44    
   \              0x40 0x20    
   \              0x00 0x3C    
   \              0x40         
   \   00000201   0x40 0x20          DC8 64, 32, 124, 0, 28, 32, 64, 32, 28, 0, 60, 64, 48, 64, 60, 0, 68
   \              0x7C 0x00    
   \              0x1C 0x20    
   \              0x40 0x20    
   \              0x1C 0x00    
   \              0x3C 0x40    
   \              0x30 0x40    
   \              0x3C 0x00    
   \              0x44         
   \   00000212   0x28 0x10          DC8 40, 16, 40, 68, 0, 28, 160, 160, 160, 124, 0, 68, 100, 84, 76, 68
   \              0x28 0x44    
   \              0x00 0x1C    
   \              0xA0 0xA0    
   \              0xA0 0x7C    
   \              0x00 0x44    
   \              0x64 0x54    
   \              0x4C 0x44    
   \   00000222   0x14 0x14          DC8 20, 20, 20, 20, 20, 20
   \              0x14 0x14    
   \              0x14 0x14    
     58          {
     59              { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },   // sp
     60              { 0x00, 0x00, 0x00, 0x2f, 0x00, 0x00 },   // !
     61              { 0x00, 0x00, 0x07, 0x00, 0x07, 0x00 },   // "
     62              { 0x00, 0x14, 0x7f, 0x14, 0x7f, 0x14 },   // #
     63              { 0x00, 0x24, 0x2a, 0x7f, 0x2a, 0x12 },   // $
     64              { 0x00, 0x62, 0x64, 0x08, 0x13, 0x23 },   // %
     65              { 0x00, 0x36, 0x49, 0x55, 0x22, 0x50 },   // &
     66              { 0x00, 0x00, 0x05, 0x03, 0x00, 0x00 },   // '
     67              { 0x00, 0x00, 0x1c, 0x22, 0x41, 0x00 },   // (
     68              { 0x00, 0x00, 0x41, 0x22, 0x1c, 0x00 },   // )
     69              { 0x00, 0x14, 0x08, 0x3E, 0x08, 0x14 },   // *
     70              { 0x00, 0x08, 0x08, 0x3E, 0x08, 0x08 },   // +
     71              { 0x00, 0x00, 0x00, 0xA0, 0x60, 0x00 },   // ,
     72              { 0x00, 0x08, 0x08, 0x08, 0x08, 0x08 },   // -
     73              { 0x00, 0x00, 0x60, 0x60, 0x00, 0x00 },   // .
     74              { 0x00, 0x20, 0x10, 0x08, 0x04, 0x02 },   // /
     75              { 0x00, 0x3E, 0x51, 0x49, 0x45, 0x3E },   // 0
     76              { 0x00, 0x00, 0x42, 0x7F, 0x40, 0x00 },   // 1
     77              { 0x00, 0x42, 0x61, 0x51, 0x49, 0x46 },   // 2
     78              { 0x00, 0x21, 0x41, 0x45, 0x4B, 0x31 },   // 3
     79              { 0x00, 0x18, 0x14, 0x12, 0x7F, 0x10 },   // 4
     80              { 0x00, 0x27, 0x45, 0x45, 0x45, 0x39 },   // 5
     81              { 0x00, 0x3C, 0x4A, 0x49, 0x49, 0x30 },   // 6
     82              { 0x00, 0x01, 0x71, 0x09, 0x05, 0x03 },   // 7
     83              { 0x00, 0x36, 0x49, 0x49, 0x49, 0x36 },   // 8
     84              { 0x00, 0x06, 0x49, 0x49, 0x29, 0x1E },   // 9
     85              { 0x00, 0x00, 0x36, 0x36, 0x00, 0x00 },   // :
     86              { 0x00, 0x00, 0x56, 0x36, 0x00, 0x00 },   // ;
     87              { 0x00, 0x08, 0x14, 0x22, 0x41, 0x00 },   // <
     88              { 0x00, 0x14, 0x14, 0x14, 0x14, 0x14 },   // =
     89              { 0x00, 0x00, 0x41, 0x22, 0x14, 0x08 },   // >
     90              { 0x00, 0x02, 0x01, 0x51, 0x09, 0x06 },   // ?
     91              { 0x00, 0x32, 0x49, 0x59, 0x51, 0x3E },   // @
     92              { 0x00, 0x7C, 0x12, 0x11, 0x12, 0x7C },   // A
     93              { 0x00, 0x7F, 0x49, 0x49, 0x49, 0x36 },   // B
     94              { 0x00, 0x3E, 0x41, 0x41, 0x41, 0x22 },   // C
     95              { 0x00, 0x7F, 0x41, 0x41, 0x22, 0x1C },   // D
     96              { 0x00, 0x7F, 0x49, 0x49, 0x49, 0x41 },   // E
     97              { 0x00, 0x7F, 0x09, 0x09, 0x09, 0x01 },   // F
     98              { 0x00, 0x3E, 0x41, 0x49, 0x49, 0x7A },   // G
     99              { 0x00, 0x7F, 0x08, 0x08, 0x08, 0x7F },   // H
    100              { 0x00, 0x00, 0x41, 0x7F, 0x41, 0x00 },   // I
    101              { 0x00, 0x20, 0x40, 0x41, 0x3F, 0x01 },   // J
    102              { 0x00, 0x7F, 0x08, 0x14, 0x22, 0x41 },   // K
    103              { 0x00, 0x7F, 0x40, 0x40, 0x40, 0x40 },   // L
    104              { 0x00, 0x7F, 0x02, 0x0C, 0x02, 0x7F },   // M
    105              { 0x00, 0x7F, 0x04, 0x08, 0x10, 0x7F },   // N
    106              { 0x00, 0x3E, 0x41, 0x41, 0x41, 0x3E },   // O
    107              { 0x00, 0x7F, 0x09, 0x09, 0x09, 0x06 },   // P
    108              { 0x00, 0x3E, 0x41, 0x51, 0x21, 0x5E },   // Q
    109              { 0x00, 0x7F, 0x09, 0x19, 0x29, 0x46 },   // R
    110              { 0x00, 0x46, 0x49, 0x49, 0x49, 0x31 },   // S
    111              { 0x00, 0x01, 0x01, 0x7F, 0x01, 0x01 },   // T
    112              { 0x00, 0x3F, 0x40, 0x40, 0x40, 0x3F },   // U
    113              { 0x00, 0x1F, 0x20, 0x40, 0x20, 0x1F },   // V
    114              { 0x00, 0x3F, 0x40, 0x38, 0x40, 0x3F },   // W
    115              { 0x00, 0x63, 0x14, 0x08, 0x14, 0x63 },   // X
    116              { 0x00, 0x07, 0x08, 0x70, 0x08, 0x07 },   // Y
    117              { 0x00, 0x61, 0x51, 0x49, 0x45, 0x43 },   // Z
    118              { 0x00, 0x00, 0x7F, 0x41, 0x41, 0x00 },   // [
    119              { 0x00, 0x55, 0x2A, 0x55, 0x2A, 0x55 },   // 55
    120              { 0x00, 0x00, 0x41, 0x41, 0x7F, 0x00 },   // ]
    121              { 0x00, 0x04, 0x02, 0x01, 0x02, 0x04 },   // ^
    122              { 0x00, 0x40, 0x40, 0x40, 0x40, 0x40 },   // _
    123              { 0x00, 0x00, 0x01, 0x02, 0x04, 0x00 },   // '
    124              { 0x00, 0x20, 0x54, 0x54, 0x54, 0x78 },   // a
    125              { 0x00, 0x7F, 0x48, 0x44, 0x44, 0x38 },   // b
    126              { 0x00, 0x38, 0x44, 0x44, 0x44, 0x20 },   // c
    127              { 0x00, 0x38, 0x44, 0x44, 0x48, 0x7F },   // d
    128              { 0x00, 0x38, 0x54, 0x54, 0x54, 0x18 },   // e
    129              { 0x00, 0x08, 0x7E, 0x09, 0x01, 0x02 },   // f
    130              { 0x00, 0x18, 0xA4, 0xA4, 0xA4, 0x7C },   // g
    131              { 0x00, 0x7F, 0x08, 0x04, 0x04, 0x78 },   // h
    132              { 0x00, 0x00, 0x44, 0x7D, 0x40, 0x00 },   // i
    133              { 0x00, 0x40, 0x80, 0x84, 0x7D, 0x00 },   // j
    134              { 0x00, 0x7F, 0x10, 0x28, 0x44, 0x00 },   // k
    135              { 0x00, 0x00, 0x41, 0x7F, 0x40, 0x00 },   // l
    136              { 0x00, 0x7C, 0x04, 0x18, 0x04, 0x78 },   // m
    137              { 0x00, 0x7C, 0x08, 0x04, 0x04, 0x78 },   // n
    138              { 0x00, 0x38, 0x44, 0x44, 0x44, 0x38 },   // o
    139              { 0x00, 0xFC, 0x24, 0x24, 0x24, 0x18 },   // p
    140              { 0x00, 0x18, 0x24, 0x24, 0x18, 0xFC },   // q
    141              { 0x00, 0x7C, 0x08, 0x04, 0x04, 0x08 },   // r
    142              { 0x00, 0x48, 0x54, 0x54, 0x54, 0x20 },   // s
    143              { 0x00, 0x04, 0x3F, 0x44, 0x40, 0x20 },   // t
    144              { 0x00, 0x3C, 0x40, 0x40, 0x20, 0x7C },   // u
    145              { 0x00, 0x1C, 0x20, 0x40, 0x20, 0x1C },   // v     
    146              { 0x00, 0x3C, 0x40, 0x30, 0x40, 0x3C },   // w
    147              { 0x00, 0x44, 0x28, 0x10, 0x28, 0x44 },   // x
    148              { 0x00, 0x1C, 0xA0, 0xA0, 0xA0, 0x7C },   // y
    149              { 0x00, 0x44, 0x64, 0x54, 0x4C, 0x44 },   // z
    150              { 0x14, 0x14, 0x14, 0x14, 0x14, 0x14 }    // horiz lines
    151          };
    152          
    153          //======================================================
    154          // 128X64I液晶底层驱动[8X16]字体库
    155          // 设计者: powerint
    156          // 描  述: [8X16]西文字符的字模数据 (纵向取模,字节倒序)
    157          // !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_`abcdefghijklmnopqrstuvwxyz{|}~
    158          //======================================================

   \                                 In section .rodata, align 4
    159          const uint8 F8X16[]=
   \                     F8X16:
   \   00000000   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 248, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0xF8    
   \              0x00 0x00    
   \   00000016   0x00 0x00          DC8 0, 0, 0, 0, 0, 51, 48, 0, 0, 0, 0, 16, 12, 6, 16, 12, 6, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x33    
   \              0x30 0x00    
   \              0x00 0x00    
   \              0x00 0x10    
   \              0x0C 0x06    
   \              0x10 0x0C    
   \              0x06 0x00    
   \              0x00 0x00    
   \              0x00         
   \   0000002B   0x00 0x00          DC8 0, 0, 0, 0, 0, 64, 192, 120, 64, 192, 120, 64, 0, 4, 63, 4, 4, 63
   \              0x00 0x00    
   \              0x00 0x40    
   \              0xC0 0x78    
   \              0x40 0xC0    
   \              0x78 0x40    
   \              0x00 0x04    
   \              0x3F 0x04    
   \              0x04 0x3F    
   \   0000003D   0x04 0x04          DC8 4, 4, 0, 0, 112, 136, 252, 8, 48, 0, 0, 0, 24, 32, 255, 33, 30, 0
   \              0x00 0x00    
   \              0x70 0x88    
   \              0xFC 0x08    
   \              0x30 0x00    
   \              0x00 0x00    
   \              0x18 0x20    
   \              0xFF 0x21    
   \              0x1E 0x00    
   \   0000004F   0x00 0xF0          DC8 0, 240, 8, 240, 0, 224, 24, 0, 0, 0, 33, 28, 3, 30, 33, 30, 0, 0
   \              0x08 0xF0    
   \              0x00 0xE0    
   \              0x18 0x00    
   \              0x00 0x00    
   \              0x21 0x1C    
   \              0x03 0x1E    
   \              0x21 0x1E    
   \              0x00 0x00    
   \   00000061   0xF0 0x08          DC8 240, 8, 136, 112, 0, 0, 0, 30, 33, 35, 36, 25, 39, 33, 16, 16, 22
   \              0x88 0x70    
   \              0x00 0x00    
   \              0x00 0x1E    
   \              0x21 0x23    
   \              0x24 0x19    
   \              0x27 0x21    
   \              0x10 0x10    
   \              0x16         
   \   00000072   0x0E 0x00          DC8 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 224, 24, 4, 2
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0xE0    
   \              0x18 0x04    
   \              0x02         
   \   00000087   0x00 0x00          DC8 0, 0, 0, 0, 7, 24, 32, 64, 0, 0, 2, 4, 24, 224, 0, 0, 0, 0, 64, 32
   \              0x00 0x00    
   \              0x07 0x18    
   \              0x20 0x40    
   \              0x00 0x00    
   \              0x02 0x04    
   \              0x18 0xE0    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x40 0x20    
   \   0000009B   0x18 0x07          DC8 24, 7, 0, 0, 0, 64, 64, 128, 240, 128, 64, 64, 0, 2, 2, 1, 15, 1, 2
   \              0x00 0x00    
   \              0x00 0x40    
   \              0x40 0x80    
   \              0xF0 0x80    
   \              0x40 0x40    
   \              0x00 0x02    
   \              0x02 0x01    
   \              0x0F 0x01    
   \              0x02         
   \   000000AE   0x02 0x00          DC8 2, 0, 0, 0, 0, 240, 0, 0, 0, 0, 1, 1, 1, 31, 1, 1, 1, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0xF0    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x01 0x01    
   \              0x01 0x1F    
   \              0x01 0x01    
   \              0x01 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000000C4   0x00 0x00          DC8 0, 0, 0, 0, 128, 176, 112, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x80 0xB0    
   \              0x70 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   000000D9   0x01 0x01          DC8 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 48, 48, 0, 0, 0, 0
   \              0x01 0x01    
   \              0x01 0x01    
   \              0x01 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x30 0x30    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000000EF   0x00 0x00          DC8 0, 0, 0, 0, 0, 128, 96, 24, 4, 0, 96, 24, 6, 1, 0, 0, 0, 0, 224, 16
   \              0x00 0x00    
   \              0x00 0x80    
   \              0x60 0x18    
   \              0x04 0x00    
   \              0x60 0x18    
   \              0x06 0x01    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0xE0 0x10    
   \   00000103   0x08 0x08          DC8 8, 8, 16, 224, 0, 0, 15, 16, 32, 32, 16, 15, 0, 0, 16, 16, 248, 0
   \              0x10 0xE0    
   \              0x00 0x00    
   \              0x0F 0x10    
   \              0x20 0x20    
   \              0x10 0x0F    
   \              0x00 0x00    
   \              0x10 0x10    
   \              0xF8 0x00    
   \   00000115   0x00 0x00          DC8 0, 0, 0, 0, 32, 32, 63, 32, 32, 0, 0, 0, 112, 8, 8, 8, 136, 112, 0
   \              0x00 0x00    
   \              0x20 0x20    
   \              0x3F 0x20    
   \              0x20 0x00    
   \              0x00 0x00    
   \              0x70 0x08    
   \              0x08 0x08    
   \              0x88 0x70    
   \              0x00         
   \   00000128   0x00 0x30          DC8 0, 48, 40, 36, 34, 33, 48, 0, 0, 48, 8, 136, 136, 72, 48, 0, 0, 24
   \              0x28 0x24    
   \              0x22 0x21    
   \              0x30 0x00    
   \              0x00 0x30    
   \              0x08 0x88    
   \              0x88 0x48    
   \              0x30 0x00    
   \              0x00 0x18    
   \   0000013A   0x20 0x20          DC8 32, 32, 32, 17, 14, 0, 0, 0, 192, 32, 16, 248, 0, 0, 0, 7, 4, 36
   \              0x20 0x11    
   \              0x0E 0x00    
   \              0x00 0x00    
   \              0xC0 0x20    
   \              0x10 0xF8    
   \              0x00 0x00    
   \              0x00 0x07    
   \              0x04 0x24    
   \   0000014C   0x24 0x3F          DC8 36, 63, 36, 0, 0, 248, 8, 136, 136, 8, 8, 0, 0, 25, 33, 32, 32, 17
   \              0x24 0x00    
   \              0x00 0xF8    
   \              0x08 0x88    
   \              0x88 0x08    
   \              0x08 0x00    
   \              0x00 0x19    
   \              0x21 0x20    
   \              0x20 0x11    
   \   0000015E   0x0E 0x00          DC8 14, 0, 0, 224, 16, 136, 136, 24, 0, 0, 0, 15, 17, 32, 32, 17, 14, 0
   \              0x00 0xE0    
   \              0x10 0x88    
   \              0x88 0x18    
   \              0x00 0x00    
   \              0x00 0x0F    
   \              0x11 0x20    
   \              0x20 0x11    
   \              0x0E 0x00    
   \   00000170   0x00 0x38          DC8 0, 56, 8, 8, 200, 56, 8, 0, 0, 0, 0, 63, 0, 0, 0, 0, 0, 112, 136, 8
   \              0x08 0x08    
   \              0xC8 0x38    
   \              0x08 0x00    
   \              0x00 0x00    
   \              0x00 0x3F    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x70    
   \              0x88 0x08    
   \   00000184   0x08 0x88          DC8 8, 136, 112, 0, 0, 28, 34, 33, 33, 34, 28, 0, 0, 224, 16, 8, 8, 16
   \              0x70 0x00    
   \              0x00 0x1C    
   \              0x22 0x21    
   \              0x21 0x22    
   \              0x1C 0x00    
   \              0x00 0xE0    
   \              0x10 0x08    
   \              0x08 0x10    
   \   00000196   0xE0 0x00          DC8 224, 0, 0, 0, 49, 34, 34, 17, 15, 0, 0, 0, 0, 192, 192, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x31 0x22    
   \              0x22 0x11    
   \              0x0F 0x00    
   \              0x00 0x00    
   \              0x00 0xC0    
   \              0xC0 0x00    
   \              0x00 0x00    
   \              0x00         
   \   000001A9   0x00 0x00          DC8 0, 0, 48, 48, 0, 0, 0, 0, 0, 0, 128, 0, 0, 0, 0, 0, 0, 128, 96, 0
   \              0x30 0x30    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x80 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x80    
   \              0x60 0x00    
   \   000001BD   0x00 0x00          DC8 0, 0, 0, 0, 0, 128, 64, 32, 16, 8, 0, 0, 1, 2, 4, 8, 16, 32, 0, 64
   \              0x00 0x00    
   \              0x00 0x80    
   \              0x40 0x20    
   \              0x10 0x08    
   \              0x00 0x00    
   \              0x01 0x02    
   \              0x04 0x08    
   \              0x10 0x20    
   \              0x00 0x40    
   \   000001D1   0x40 0x40          DC8 64, 64, 64, 64, 64, 64, 0, 4, 4, 4, 4, 4, 4, 4, 0, 0, 8, 16, 32, 64
   \              0x40 0x40    
   \              0x40 0x40    
   \              0x00 0x04    
   \              0x04 0x04    
   \              0x04 0x04    
   \              0x04 0x04    
   \              0x00 0x00    
   \              0x08 0x10    
   \              0x20 0x40    
   \   000001E5   0x80 0x00          DC8 128, 0, 0, 0, 32, 16, 8, 4, 2, 1, 0, 0, 112, 72, 8, 8, 8, 240, 0, 0
   \              0x00 0x00    
   \              0x20 0x10    
   \              0x08 0x04    
   \              0x02 0x01    
   \              0x00 0x00    
   \              0x70 0x48    
   \              0x08 0x08    
   \              0x08 0xF0    
   \              0x00 0x00    
   \   000001F9   0x00 0x00          DC8 0, 0, 48, 54, 1, 0, 0, 192, 48, 200, 40, 232, 16, 224, 0, 7, 24, 39
   \              0x30 0x36    
   \              0x01 0x00    
   \              0x00 0xC0    
   \              0x30 0xC8    
   \              0x28 0xE8    
   \              0x10 0xE0    
   \              0x00 0x07    
   \              0x18 0x27    
   \   0000020B   0x24 0x23          DC8 36, 35, 20, 11, 0, 0, 0, 192, 56, 224, 0, 0, 0, 32, 60, 35, 2, 2
   \              0x14 0x0B    
   \              0x00 0x00    
   \              0x00 0xC0    
   \              0x38 0xE0    
   \              0x00 0x00    
   \              0x00 0x20    
   \              0x3C 0x23    
   \              0x02 0x02    
   \   0000021D   0x27 0x38          DC8 39, 56, 32, 8, 248, 136, 136, 136, 112, 0, 0, 32, 63, 32, 32, 32
   \              0x20 0x08    
   \              0xF8 0x88    
   \              0x88 0x88    
   \              0x70 0x00    
   \              0x00 0x20    
   \              0x3F 0x20    
   \              0x20 0x20    
   \   0000022D   0x11 0x0E          DC8 17, 14, 0, 192, 48, 8, 8, 8, 8, 56, 0, 7, 24, 32, 32, 32, 16, 8, 0
   \              0x00 0xC0    
   \              0x30 0x08    
   \              0x08 0x08    
   \              0x08 0x38    
   \              0x00 0x07    
   \              0x18 0x20    
   \              0x20 0x20    
   \              0x10 0x08    
   \              0x00         
   \   00000240   0x08 0xF8          DC8 8, 248, 8, 8, 8, 16, 224, 0, 32, 63, 32, 32, 32, 16, 15, 0, 8, 248
   \              0x08 0x08    
   \              0x08 0x10    
   \              0xE0 0x00    
   \              0x20 0x3F    
   \              0x20 0x20    
   \              0x20 0x10    
   \              0x0F 0x00    
   \              0x08 0xF8    
   \   00000252   0x88 0x88          DC8 136, 136, 232, 8, 16, 0, 32, 63, 32, 32, 35, 32, 24, 0, 8, 248, 136
   \              0xE8 0x08    
   \              0x10 0x00    
   \              0x20 0x3F    
   \              0x20 0x20    
   \              0x23 0x20    
   \              0x18 0x00    
   \              0x08 0xF8    
   \              0x88         
   \   00000263   0x88 0xE8          DC8 136, 232, 8, 16, 0, 32, 63, 32, 0, 3, 0, 0, 0, 192, 48, 8, 8, 8, 56
   \              0x08 0x10    
   \              0x00 0x20    
   \              0x3F 0x20    
   \              0x00 0x03    
   \              0x00 0x00    
   \              0x00 0xC0    
   \              0x30 0x08    
   \              0x08 0x08    
   \              0x38         
   \   00000276   0x00 0x00          DC8 0, 0, 7, 24, 32, 32, 34, 30, 2, 0, 8, 248, 8, 0, 0, 8, 248, 8, 32
   \              0x07 0x18    
   \              0x20 0x20    
   \              0x22 0x1E    
   \              0x02 0x00    
   \              0x08 0xF8    
   \              0x08 0x00    
   \              0x00 0x08    
   \              0xF8 0x08    
   \              0x20         
   \   00000289   0x3F 0x21          DC8 63, 33, 1, 1, 33, 63, 32, 0, 8, 8, 248, 8, 8, 0, 0, 0, 32, 32, 63
   \              0x01 0x01    
   \              0x21 0x3F    
   \              0x20 0x00    
   \              0x08 0x08    
   \              0xF8 0x08    
   \              0x08 0x00    
   \              0x00 0x00    
   \              0x20 0x20    
   \              0x3F         
   \   0000029C   0x20 0x20          DC8 32, 32, 0, 0, 0, 0, 8, 8, 248, 8, 8, 0, 192, 128, 128, 128, 127, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x08 0x08    
   \              0xF8 0x08    
   \              0x08 0x00    
   \              0xC0 0x80    
   \              0x80 0x80    
   \              0x7F 0x00    
   \   000002AE   0x00 0x00          DC8 0, 0, 8, 248, 136, 192, 40, 24, 8, 0, 32, 63, 32, 1, 38, 56, 32, 0
   \              0x08 0xF8    
   \              0x88 0xC0    
   \              0x28 0x18    
   \              0x08 0x00    
   \              0x20 0x3F    
   \              0x20 0x01    
   \              0x26 0x38    
   \              0x20 0x00    
   \   000002C0   0x08 0xF8          DC8 8, 248, 8, 0, 0, 0, 0, 0, 32, 63, 32, 32, 32, 32, 48, 0, 8, 248
   \              0x08 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x20 0x3F    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x30 0x00    
   \              0x08 0xF8    
   \   000002D2   0xF8 0x00          DC8 248, 0, 248, 248, 8, 0, 32, 63, 0, 63, 0, 63, 32, 0, 8, 248, 48
   \              0xF8 0xF8    
   \              0x08 0x00    
   \              0x20 0x3F    
   \              0x00 0x3F    
   \              0x00 0x3F    
   \              0x20 0x00    
   \              0x08 0xF8    
   \              0x30         
   \   000002E3   0xC0 0x00          DC8 192, 0, 8, 248, 8, 32, 63, 32, 0, 7, 24, 63, 0, 224, 16, 8, 8, 8
   \              0x08 0xF8    
   \              0x08 0x20    
   \              0x3F 0x20    
   \              0x00 0x07    
   \              0x18 0x3F    
   \              0x00 0xE0    
   \              0x10 0x08    
   \              0x08 0x08    
   \   000002F5   0x10 0xE0          DC8 16, 224, 0, 15, 16, 32, 32, 32, 16, 15, 0, 8, 248, 8, 8, 8, 8, 240
   \              0x00 0x0F    
   \              0x10 0x20    
   \              0x20 0x20    
   \              0x10 0x0F    
   \              0x00 0x08    
   \              0xF8 0x08    
   \              0x08 0x08    
   \              0x08 0xF0    
   \   00000307   0x00 0x20          DC8 0, 32, 63, 33, 1, 1, 1, 0, 0, 224, 16, 8, 8, 8, 16, 224, 0, 15, 24
   \              0x3F 0x21    
   \              0x01 0x01    
   \              0x01 0x00    
   \              0x00 0xE0    
   \              0x10 0x08    
   \              0x08 0x08    
   \              0x10 0xE0    
   \              0x00 0x0F    
   \              0x18         
   \   0000031A   0x24 0x24          DC8 36, 36, 56, 80, 79, 0, 8, 248, 136, 136, 136, 136, 112, 0, 32, 63
   \              0x38 0x50    
   \              0x4F 0x00    
   \              0x08 0xF8    
   \              0x88 0x88    
   \              0x88 0x88    
   \              0x70 0x00    
   \              0x20 0x3F    
   \   0000032A   0x20 0x00          DC8 32, 0, 3, 12, 48, 32, 0, 112, 136, 8, 8, 8, 56, 0, 0, 56, 32, 33
   \              0x03 0x0C    
   \              0x30 0x20    
   \              0x00 0x70    
   \              0x88 0x08    
   \              0x08 0x08    
   \              0x38 0x00    
   \              0x00 0x38    
   \              0x20 0x21    
   \   0000033C   0x21 0x22          DC8 33, 34, 28, 0, 24, 8, 8, 248, 8, 8, 24, 0, 0, 0, 32, 63, 32, 0, 0
   \              0x1C 0x00    
   \              0x18 0x08    
   \              0x08 0xF8    
   \              0x08 0x08    
   \              0x18 0x00    
   \              0x00 0x00    
   \              0x20 0x3F    
   \              0x20 0x00    
   \              0x00         
   \   0000034F   0x00 0x08          DC8 0, 8, 248, 8, 0, 0, 8, 248, 8, 0, 31, 32, 32, 32, 32, 31, 0, 8, 120
   \              0xF8 0x08    
   \              0x00 0x00    
   \              0x08 0xF8    
   \              0x08 0x00    
   \              0x1F 0x20    
   \              0x20 0x20    
   \              0x20 0x1F    
   \              0x00 0x08    
   \              0x78         
   \   00000362   0x88 0x00          DC8 136, 0, 0, 200, 56, 8, 0, 0, 7, 56, 14, 1, 0, 0, 248, 8, 0, 248, 0
   \              0x00 0xC8    
   \              0x38 0x08    
   \              0x00 0x00    
   \              0x07 0x38    
   \              0x0E 0x01    
   \              0x00 0x00    
   \              0xF8 0x08    
   \              0x00 0xF8    
   \              0x00         
   \   00000375   0x08 0xF8          DC8 8, 248, 0, 3, 60, 7, 0, 7, 60, 3, 0, 8, 24, 104, 128, 128, 104, 24
   \              0x00 0x03    
   \              0x3C 0x07    
   \              0x00 0x07    
   \              0x3C 0x03    
   \              0x00 0x08    
   \              0x18 0x68    
   \              0x80 0x80    
   \              0x68 0x18    
   \   00000387   0x08 0x20          DC8 8, 32, 48, 44, 3, 3, 44, 48, 32, 8, 56, 200, 0, 200, 56, 8, 0, 0, 0
   \              0x30 0x2C    
   \              0x03 0x03    
   \              0x2C 0x30    
   \              0x20 0x08    
   \              0x38 0xC8    
   \              0x00 0xC8    
   \              0x38 0x08    
   \              0x00 0x00    
   \              0x00         
   \   0000039A   0x20 0x3F          DC8 32, 63, 32, 0, 0, 0, 16, 8, 8, 8, 200, 56, 8, 0, 32, 56, 38, 33, 32
   \              0x20 0x00    
   \              0x00 0x00    
   \              0x10 0x08    
   \              0x08 0x08    
   \              0xC8 0x38    
   \              0x08 0x00    
   \              0x20 0x38    
   \              0x26 0x21    
   \              0x20         
   \   000003AD   0x20 0x18          DC8 32, 24, 0, 0, 0, 0, 254, 2, 2, 2, 0, 0, 0, 0, 127, 64, 64, 64, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0xFE 0x02    
   \              0x02 0x02    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x7F 0x40    
   \              0x40 0x40    
   \              0x00 0x00    
   \   000003C1   0x0C 0x30          DC8 12, 48, 192, 0, 0, 0, 0, 0, 0, 0, 1, 6, 56, 192, 0, 0, 2, 2, 2, 254
   \              0xC0 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x01 0x06    
   \              0x38 0xC0    
   \              0x00 0x00    
   \              0x02 0x02    
   \              0x02 0xFE    
   \   000003D5   0x00 0x00          DC8 0, 0, 0, 0, 64, 64, 64, 127, 0, 0, 0, 0, 0, 4, 2, 2, 2, 4, 0, 0, 0
   \              0x00 0x00    
   \              0x40 0x40    
   \              0x40 0x7F    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x04    
   \              0x02 0x02    
   \              0x02 0x04    
   \              0x00 0x00    
   \              0x00         
   \   000003EA   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 128, 128, 128, 128
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x80 0x80    
   \              0x80 0x80    
   \              0x80         
   \   000003FD   0x80 0x80          DC8 128, 128, 128, 0, 2, 2, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x80 0x00    
   \              0x02 0x02    
   \              0x04 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   00000412   0x80 0x80          DC8 128, 128, 128, 128, 0, 0, 0, 25, 36, 34, 34, 34, 63, 32, 8, 248, 0
   \              0x80 0x80    
   \              0x00 0x00    
   \              0x00 0x19    
   \              0x24 0x22    
   \              0x22 0x22    
   \              0x3F 0x20    
   \              0x08 0xF8    
   \              0x00         
   \   00000423   0x80 0x80          DC8 128, 128, 0, 0, 0, 0, 63, 17, 32, 32, 17, 14, 0, 0, 0, 0, 128, 128
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x3F 0x11    
   \              0x20 0x20    
   \              0x11 0x0E    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x80 0x80    
   \   00000435   0x80 0x00          DC8 128, 0, 0, 0, 14, 17, 32, 32, 32, 17, 0, 0, 0, 0, 128, 128, 136
   \              0x00 0x00    
   \              0x0E 0x11    
   \              0x20 0x20    
   \              0x20 0x11    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x80 0x80    
   \              0x88         
   \   00000446   0xF8 0x00          DC8 248, 0, 0, 14, 17, 32, 32, 16, 63, 32, 0, 0, 128, 128, 128, 128, 0
   \              0x00 0x0E    
   \              0x11 0x20    
   \              0x20 0x10    
   \              0x3F 0x20    
   \              0x00 0x00    
   \              0x80 0x80    
   \              0x80 0x80    
   \              0x00         
   \   00000457   0x00 0x00          DC8 0, 0, 31, 34, 34, 34, 34, 19, 0, 0, 128, 128, 240, 136, 136, 136
   \              0x1F 0x22    
   \              0x22 0x22    
   \              0x22 0x13    
   \              0x00 0x00    
   \              0x80 0x80    
   \              0xF0 0x88    
   \              0x88 0x88    
   \   00000467   0x18 0x00          DC8 24, 0, 32, 32, 63, 32, 32, 0, 0, 0, 0, 128, 128, 128, 128, 128, 0
   \              0x20 0x20    
   \              0x3F 0x20    
   \              0x20 0x00    
   \              0x00 0x00    
   \              0x00 0x80    
   \              0x80 0x80    
   \              0x80 0x80    
   \              0x00         
   \   00000478   0x00 0x6B          DC8 0, 107, 148, 148, 148, 147, 96, 0, 8, 248, 0, 128, 128, 128, 0, 0
   \              0x94 0x94    
   \              0x94 0x93    
   \              0x60 0x00    
   \              0x08 0xF8    
   \              0x00 0x80    
   \              0x80 0x80    
   \              0x00 0x00    
   \   00000488   0x20 0x3F          DC8 32, 63, 33, 0, 0, 32, 63, 32, 0, 128, 152, 152, 0, 0, 0, 0, 0, 32
   \              0x21 0x00    
   \              0x00 0x20    
   \              0x3F 0x20    
   \              0x00 0x80    
   \              0x98 0x98    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x20    
   \   0000049A   0x20 0x3F          DC8 32, 63, 32, 32, 0, 0, 0, 0, 0, 128, 152, 152, 0, 0, 0, 192, 128
   \              0x20 0x20    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x80    
   \              0x98 0x98    
   \              0x00 0x00    
   \              0x00 0xC0    
   \              0x80         
   \   000004AB   0x80 0x80          DC8 128, 128, 127, 0, 0, 8, 248, 0, 0, 128, 128, 128, 0, 32, 63, 36, 2
   \              0x7F 0x00    
   \              0x00 0x08    
   \              0xF8 0x00    
   \              0x00 0x80    
   \              0x80 0x80    
   \              0x00 0x20    
   \              0x3F 0x24    
   \              0x02         
   \   000004BC   0x2D 0x30          DC8 45, 48, 32, 0, 0, 8, 8, 248, 0, 0, 0, 0, 0, 32, 32, 63, 32, 32, 0
   \              0x20 0x00    
   \              0x00 0x08    
   \              0x08 0xF8    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x20    
   \              0x20 0x3F    
   \              0x20 0x20    
   \              0x00         
   \   000004CF   0x00 0x80          DC8 0, 128, 128, 128, 128, 128, 128, 128, 0, 32, 63, 32, 0, 63, 32, 0
   \              0x80 0x80    
   \              0x80 0x80    
   \              0x80 0x80    
   \              0x00 0x20    
   \              0x3F 0x20    
   \              0x00 0x3F    
   \              0x20 0x00    
   \   000004DF   0x3F 0x80          DC8 63, 128, 128, 0, 128, 128, 128, 0, 0, 32, 63, 33, 0, 0, 32, 63, 32
   \              0x80 0x00    
   \              0x80 0x80    
   \              0x80 0x00    
   \              0x00 0x20    
   \              0x3F 0x21    
   \              0x00 0x00    
   \              0x20 0x3F    
   \              0x20         
   \   000004F0   0x00 0x00          DC8 0, 0, 128, 128, 128, 128, 0, 0, 0, 31, 32, 32, 32, 32, 31, 0, 128
   \              0x80 0x80    
   \              0x80 0x80    
   \              0x00 0x00    
   \              0x00 0x1F    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x1F 0x00    
   \              0x80         
   \   00000501   0x80 0x00          DC8 128, 0, 128, 128, 0, 0, 0, 128, 255, 161, 32, 32, 17, 14, 0, 0, 0
   \              0x80 0x80    
   \              0x00 0x00    
   \              0x00 0x80    
   \              0xFF 0xA1    
   \              0x20 0x20    
   \              0x11 0x0E    
   \              0x00 0x00    
   \              0x00         
   \   00000512   0x00 0x80          DC8 0, 128, 128, 128, 128, 0, 0, 14, 17, 32, 32, 160, 255, 128, 128
   \              0x80 0x80    
   \              0x80 0x00    
   \              0x00 0x0E    
   \              0x11 0x20    
   \              0x20 0xA0    
   \              0xFF 0x80    
   \              0x80         
   \   00000521   0x80 0x80          DC8 128, 128, 0, 128, 128, 128, 0, 32, 32, 63, 33, 32, 0, 1, 0, 0, 0
   \              0x00 0x80    
   \              0x80 0x80    
   \              0x00 0x20    
   \              0x20 0x3F    
   \              0x21 0x20    
   \              0x00 0x01    
   \              0x00 0x00    
   \              0x00         
   \   00000532   0x80 0x80          DC8 128, 128, 128, 128, 128, 0, 0, 51, 36, 36, 36, 36, 25, 0, 0, 128
   \              0x80 0x80    
   \              0x80 0x00    
   \              0x00 0x33    
   \              0x24 0x24    
   \              0x24 0x24    
   \              0x19 0x00    
   \              0x00 0x80    
   \   00000542   0x80 0xE0          DC8 128, 224, 128, 128, 0, 0, 0, 0, 0, 31, 32, 32, 0, 0, 128, 128, 0, 0
   \              0x80 0x80    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x1F    
   \              0x20 0x20    
   \              0x00 0x00    
   \              0x80 0x80    
   \              0x00 0x00    
   \   00000554   0x00 0x80          DC8 0, 128, 128, 0, 0, 31, 32, 32, 32, 16, 63, 32, 128, 128, 128, 0, 0
   \              0x80 0x00    
   \              0x00 0x1F    
   \              0x20 0x20    
   \              0x20 0x10    
   \              0x3F 0x20    
   \              0x80 0x80    
   \              0x80 0x00    
   \              0x00         
   \   00000565   0x80 0x80          DC8 128, 128, 128, 0, 1, 14, 48, 8, 6, 1, 0, 128, 128, 0, 128, 0, 128
   \              0x80 0x00    
   \              0x01 0x0E    
   \              0x30 0x08    
   \              0x06 0x01    
   \              0x00 0x80    
   \              0x80 0x00    
   \              0x80 0x00    
   \              0x80         
   \   00000576   0x80 0x80          DC8 128, 128, 15, 48, 12, 3, 12, 48, 15, 0, 0, 128, 128, 0, 128, 128
   \              0x0F 0x30    
   \              0x0C 0x03    
   \              0x0C 0x30    
   \              0x0F 0x00    
   \              0x00 0x80    
   \              0x80 0x00    
   \              0x80 0x80    
   \   00000586   0x80 0x00          DC8 128, 0, 0, 32, 49, 46, 14, 49, 32, 0, 128, 128, 128, 0, 0, 128, 128
   \              0x00 0x20    
   \              0x31 0x2E    
   \              0x0E 0x31    
   \              0x20 0x00    
   \              0x80 0x80    
   \              0x80 0x00    
   \              0x00 0x80    
   \              0x80         
   \   00000597   0x80 0x80          DC8 128, 128, 129, 142, 112, 24, 6, 1, 0, 0, 128, 128, 128, 128, 128
   \              0x81 0x8E    
   \              0x70 0x18    
   \              0x06 0x01    
   \              0x00 0x00    
   \              0x80 0x80    
   \              0x80 0x80    
   \              0x80         
   \   000005A6   0x80 0x00          DC8 128, 0, 0, 33, 48, 44, 34, 33, 48, 0, 0, 0, 0, 0, 128, 124, 2, 2, 0
   \              0x00 0x21    
   \              0x30 0x2C    
   \              0x22 0x21    
   \              0x30 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x80 0x7C    
   \              0x02 0x02    
   \              0x00         
   \   000005B9   0x00 0x00          DC8 0, 0, 0, 0, 63, 64, 64, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 255
   \              0x00 0x00    
   \              0x3F 0x40    
   \              0x40 0x00    
   \              0x00 0x00    
   \              0x00 0xFF    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0xFF    
   \   000005CD   0x00 0x00          DC8 0, 0, 0, 0, 2, 2, 124, 128, 0, 0, 0, 0, 64, 64, 63, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x02 0x02    
   \              0x7C 0x80    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x40 0x40    
   \              0x3F 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000005E1   0x06 0x01          DC8 6, 1, 1, 2, 2, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x01 0x02    
   \              0x02 0x04    
   \              0x04 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
    160          {
    161            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,// 0
    162            0x00,0x00,0x00,0xF8,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x33,0x30,0x00,0x00,0x00,//!1
    163            0x00,0x10,0x0C,0x06,0x10,0x0C,0x06,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,//"2
    164            0x40,0xC0,0x78,0x40,0xC0,0x78,0x40,0x00,0x04,0x3F,0x04,0x04,0x3F,0x04,0x04,0x00,//#3
    165            0x00,0x70,0x88,0xFC,0x08,0x30,0x00,0x00,0x00,0x18,0x20,0xFF,0x21,0x1E,0x00,0x00,//$4
    166            0xF0,0x08,0xF0,0x00,0xE0,0x18,0x00,0x00,0x00,0x21,0x1C,0x03,0x1E,0x21,0x1E,0x00,//%5
    167            0x00,0xF0,0x08,0x88,0x70,0x00,0x00,0x00,0x1E,0x21,0x23,0x24,0x19,0x27,0x21,0x10,//&6
    168            0x10,0x16,0x0E,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,//'7
    169            0x00,0x00,0x00,0xE0,0x18,0x04,0x02,0x00,0x00,0x00,0x00,0x07,0x18,0x20,0x40,0x00,//(8
    170            0x00,0x02,0x04,0x18,0xE0,0x00,0x00,0x00,0x00,0x40,0x20,0x18,0x07,0x00,0x00,0x00,//)9
    171            0x40,0x40,0x80,0xF0,0x80,0x40,0x40,0x00,0x02,0x02,0x01,0x0F,0x01,0x02,0x02,0x00,//*10
    172            0x00,0x00,0x00,0xF0,0x00,0x00,0x00,0x00,0x01,0x01,0x01,0x1F,0x01,0x01,0x01,0x00,//+11
    173            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0xB0,0x70,0x00,0x00,0x00,0x00,0x00,//,12
    174            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x01,0x01,0x01,0x01,0x01,0x01,//-13
    175            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x30,0x30,0x00,0x00,0x00,0x00,0x00,//.14
    176            0x00,0x00,0x00,0x00,0x80,0x60,0x18,0x04,0x00,0x60,0x18,0x06,0x01,0x00,0x00,0x00,///15
    177            0x00,0xE0,0x10,0x08,0x08,0x10,0xE0,0x00,0x00,0x0F,0x10,0x20,0x20,0x10,0x0F,0x00,//016
    178            0x00,0x10,0x10,0xF8,0x00,0x00,0x00,0x00,0x00,0x20,0x20,0x3F,0x20,0x20,0x00,0x00,//117
    179            0x00,0x70,0x08,0x08,0x08,0x88,0x70,0x00,0x00,0x30,0x28,0x24,0x22,0x21,0x30,0x00,//218
    180            0x00,0x30,0x08,0x88,0x88,0x48,0x30,0x00,0x00,0x18,0x20,0x20,0x20,0x11,0x0E,0x00,//319
    181            0x00,0x00,0xC0,0x20,0x10,0xF8,0x00,0x00,0x00,0x07,0x04,0x24,0x24,0x3F,0x24,0x00,//420
    182            0x00,0xF8,0x08,0x88,0x88,0x08,0x08,0x00,0x00,0x19,0x21,0x20,0x20,0x11,0x0E,0x00,//521
    183            0x00,0xE0,0x10,0x88,0x88,0x18,0x00,0x00,0x00,0x0F,0x11,0x20,0x20,0x11,0x0E,0x00,//622
    184            0x00,0x38,0x08,0x08,0xC8,0x38,0x08,0x00,0x00,0x00,0x00,0x3F,0x00,0x00,0x00,0x00,//723
    185            0x00,0x70,0x88,0x08,0x08,0x88,0x70,0x00,0x00,0x1C,0x22,0x21,0x21,0x22,0x1C,0x00,//824
    186            0x00,0xE0,0x10,0x08,0x08,0x10,0xE0,0x00,0x00,0x00,0x31,0x22,0x22,0x11,0x0F,0x00,//925
    187            0x00,0x00,0x00,0xC0,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x30,0x30,0x00,0x00,0x00,//:26
    188            0x00,0x00,0x00,0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x60,0x00,0x00,0x00,0x00,//;27
    189            0x00,0x00,0x80,0x40,0x20,0x10,0x08,0x00,0x00,0x01,0x02,0x04,0x08,0x10,0x20,0x00,//<28
    190            0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x00,0x04,0x04,0x04,0x04,0x04,0x04,0x04,0x00,//=29
    191            0x00,0x08,0x10,0x20,0x40,0x80,0x00,0x00,0x00,0x20,0x10,0x08,0x04,0x02,0x01,0x00,//>30
    192            0x00,0x70,0x48,0x08,0x08,0x08,0xF0,0x00,0x00,0x00,0x00,0x30,0x36,0x01,0x00,0x00,//?31
    193            0xC0,0x30,0xC8,0x28,0xE8,0x10,0xE0,0x00,0x07,0x18,0x27,0x24,0x23,0x14,0x0B,0x00,//@32
    194            0x00,0x00,0xC0,0x38,0xE0,0x00,0x00,0x00,0x20,0x3C,0x23,0x02,0x02,0x27,0x38,0x20,//A33
    195            0x08,0xF8,0x88,0x88,0x88,0x70,0x00,0x00,0x20,0x3F,0x20,0x20,0x20,0x11,0x0E,0x00,//B34
    196            0xC0,0x30,0x08,0x08,0x08,0x08,0x38,0x00,0x07,0x18,0x20,0x20,0x20,0x10,0x08,0x00,//C35
    197            0x08,0xF8,0x08,0x08,0x08,0x10,0xE0,0x00,0x20,0x3F,0x20,0x20,0x20,0x10,0x0F,0x00,//D36
    198            0x08,0xF8,0x88,0x88,0xE8,0x08,0x10,0x00,0x20,0x3F,0x20,0x20,0x23,0x20,0x18,0x00,//E37
    199            0x08,0xF8,0x88,0x88,0xE8,0x08,0x10,0x00,0x20,0x3F,0x20,0x00,0x03,0x00,0x00,0x00,//F38
    200            0xC0,0x30,0x08,0x08,0x08,0x38,0x00,0x00,0x07,0x18,0x20,0x20,0x22,0x1E,0x02,0x00,//G39
    201            0x08,0xF8,0x08,0x00,0x00,0x08,0xF8,0x08,0x20,0x3F,0x21,0x01,0x01,0x21,0x3F,0x20,//H40
    202            0x00,0x08,0x08,0xF8,0x08,0x08,0x00,0x00,0x00,0x20,0x20,0x3F,0x20,0x20,0x00,0x00,//I41
    203            0x00,0x00,0x08,0x08,0xF8,0x08,0x08,0x00,0xC0,0x80,0x80,0x80,0x7F,0x00,0x00,0x00,//J42
    204            0x08,0xF8,0x88,0xC0,0x28,0x18,0x08,0x00,0x20,0x3F,0x20,0x01,0x26,0x38,0x20,0x00,//K43
    205            0x08,0xF8,0x08,0x00,0x00,0x00,0x00,0x00,0x20,0x3F,0x20,0x20,0x20,0x20,0x30,0x00,//L44
    206            0x08,0xF8,0xF8,0x00,0xF8,0xF8,0x08,0x00,0x20,0x3F,0x00,0x3F,0x00,0x3F,0x20,0x00,//M45
    207            0x08,0xF8,0x30,0xC0,0x00,0x08,0xF8,0x08,0x20,0x3F,0x20,0x00,0x07,0x18,0x3F,0x00,//N46
    208            0xE0,0x10,0x08,0x08,0x08,0x10,0xE0,0x00,0x0F,0x10,0x20,0x20,0x20,0x10,0x0F,0x00,//O47
    209            0x08,0xF8,0x08,0x08,0x08,0x08,0xF0,0x00,0x20,0x3F,0x21,0x01,0x01,0x01,0x00,0x00,//P48
    210            0xE0,0x10,0x08,0x08,0x08,0x10,0xE0,0x00,0x0F,0x18,0x24,0x24,0x38,0x50,0x4F,0x00,//Q49
    211            0x08,0xF8,0x88,0x88,0x88,0x88,0x70,0x00,0x20,0x3F,0x20,0x00,0x03,0x0C,0x30,0x20,//R50
    212            0x00,0x70,0x88,0x08,0x08,0x08,0x38,0x00,0x00,0x38,0x20,0x21,0x21,0x22,0x1C,0x00,//S51
    213            0x18,0x08,0x08,0xF8,0x08,0x08,0x18,0x00,0x00,0x00,0x20,0x3F,0x20,0x00,0x00,0x00,//T52
    214            0x08,0xF8,0x08,0x00,0x00,0x08,0xF8,0x08,0x00,0x1F,0x20,0x20,0x20,0x20,0x1F,0x00,//U53
    215            0x08,0x78,0x88,0x00,0x00,0xC8,0x38,0x08,0x00,0x00,0x07,0x38,0x0E,0x01,0x00,0x00,//V54
    216            0xF8,0x08,0x00,0xF8,0x00,0x08,0xF8,0x00,0x03,0x3C,0x07,0x00,0x07,0x3C,0x03,0x00,//W55
    217            0x08,0x18,0x68,0x80,0x80,0x68,0x18,0x08,0x20,0x30,0x2C,0x03,0x03,0x2C,0x30,0x20,//X56
    218            0x08,0x38,0xC8,0x00,0xC8,0x38,0x08,0x00,0x00,0x00,0x20,0x3F,0x20,0x00,0x00,0x00,//Y57
    219            0x10,0x08,0x08,0x08,0xC8,0x38,0x08,0x00,0x20,0x38,0x26,0x21,0x20,0x20,0x18,0x00,//Z58
    220            0x00,0x00,0x00,0xFE,0x02,0x02,0x02,0x00,0x00,0x00,0x00,0x7F,0x40,0x40,0x40,0x00,//[59
    221            0x00,0x0C,0x30,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x06,0x38,0xC0,0x00,//\60
    222            0x00,0x02,0x02,0x02,0xFE,0x00,0x00,0x00,0x00,0x40,0x40,0x40,0x7F,0x00,0x00,0x00,//]61
    223            0x00,0x00,0x04,0x02,0x02,0x02,0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,//^62
    224            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,//_63
    225            0x00,0x02,0x02,0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,//`64
    226            0x00,0x00,0x80,0x80,0x80,0x80,0x00,0x00,0x00,0x19,0x24,0x22,0x22,0x22,0x3F,0x20,//a65
    227            0x08,0xF8,0x00,0x80,0x80,0x00,0x00,0x00,0x00,0x3F,0x11,0x20,0x20,0x11,0x0E,0x00,//b66
    228            0x00,0x00,0x00,0x80,0x80,0x80,0x00,0x00,0x00,0x0E,0x11,0x20,0x20,0x20,0x11,0x00,//c67
    229            0x00,0x00,0x00,0x80,0x80,0x88,0xF8,0x00,0x00,0x0E,0x11,0x20,0x20,0x10,0x3F,0x20,//d68
    230            0x00,0x00,0x80,0x80,0x80,0x80,0x00,0x00,0x00,0x1F,0x22,0x22,0x22,0x22,0x13,0x00,//e69
    231            0x00,0x80,0x80,0xF0,0x88,0x88,0x88,0x18,0x00,0x20,0x20,0x3F,0x20,0x20,0x00,0x00,//f70
    232            0x00,0x00,0x80,0x80,0x80,0x80,0x80,0x00,0x00,0x6B,0x94,0x94,0x94,0x93,0x60,0x00,//g71
    233            0x08,0xF8,0x00,0x80,0x80,0x80,0x00,0x00,0x20,0x3F,0x21,0x00,0x00,0x20,0x3F,0x20,//h72
    234            0x00,0x80,0x98,0x98,0x00,0x00,0x00,0x00,0x00,0x20,0x20,0x3F,0x20,0x20,0x00,0x00,//i73
    235            0x00,0x00,0x00,0x80,0x98,0x98,0x00,0x00,0x00,0xC0,0x80,0x80,0x80,0x7F,0x00,0x00,//j74
    236            0x08,0xF8,0x00,0x00,0x80,0x80,0x80,0x00,0x20,0x3F,0x24,0x02,0x2D,0x30,0x20,0x00,//k75
    237            0x00,0x08,0x08,0xF8,0x00,0x00,0x00,0x00,0x00,0x20,0x20,0x3F,0x20,0x20,0x00,0x00,//l76
    238            0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x00,0x20,0x3F,0x20,0x00,0x3F,0x20,0x00,0x3F,//m77
    239            0x80,0x80,0x00,0x80,0x80,0x80,0x00,0x00,0x20,0x3F,0x21,0x00,0x00,0x20,0x3F,0x20,//n78
    240            0x00,0x00,0x80,0x80,0x80,0x80,0x00,0x00,0x00,0x1F,0x20,0x20,0x20,0x20,0x1F,0x00,//o79
    241            0x80,0x80,0x00,0x80,0x80,0x00,0x00,0x00,0x80,0xFF,0xA1,0x20,0x20,0x11,0x0E,0x00,//p80
    242            0x00,0x00,0x00,0x80,0x80,0x80,0x80,0x00,0x00,0x0E,0x11,0x20,0x20,0xA0,0xFF,0x80,//q81
    243            0x80,0x80,0x80,0x00,0x80,0x80,0x80,0x00,0x20,0x20,0x3F,0x21,0x20,0x00,0x01,0x00,//r82
    244            0x00,0x00,0x80,0x80,0x80,0x80,0x80,0x00,0x00,0x33,0x24,0x24,0x24,0x24,0x19,0x00,//s83
    245            0x00,0x80,0x80,0xE0,0x80,0x80,0x00,0x00,0x00,0x00,0x00,0x1F,0x20,0x20,0x00,0x00,//t84
    246            0x80,0x80,0x00,0x00,0x00,0x80,0x80,0x00,0x00,0x1F,0x20,0x20,0x20,0x10,0x3F,0x20,//uint85
    247            0x80,0x80,0x80,0x00,0x00,0x80,0x80,0x80,0x00,0x01,0x0E,0x30,0x08,0x06,0x01,0x00,//v86
    248            0x80,0x80,0x00,0x80,0x00,0x80,0x80,0x80,0x0F,0x30,0x0C,0x03,0x0C,0x30,0x0F,0x00,//w87
    249            0x00,0x80,0x80,0x00,0x80,0x80,0x80,0x00,0x00,0x20,0x31,0x2E,0x0E,0x31,0x20,0x00,//x88
    250            0x80,0x80,0x80,0x00,0x00,0x80,0x80,0x80,0x80,0x81,0x8E,0x70,0x18,0x06,0x01,0x00,//y89
    251            0x00,0x80,0x80,0x80,0x80,0x80,0x80,0x00,0x00,0x21,0x30,0x2C,0x22,0x21,0x30,0x00,//z90
    252            0x00,0x00,0x00,0x00,0x80,0x7C,0x02,0x02,0x00,0x00,0x00,0x00,0x00,0x3F,0x40,0x40,//{91
    253            0x00,0x00,0x00,0x00,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0x00,0x00,0x00,//|92
    254            0x00,0x02,0x02,0x7C,0x80,0x00,0x00,0x00,0x00,0x40,0x40,0x3F,0x00,0x00,0x00,0x00,//}93
    255            0x00,0x06,0x01,0x01,0x02,0x02,0x04,0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,//~94
    256          
    257          };
    258          //数据水平，字节垂直
    259          

   \                                 In section .rodata, align 4
    260          const uint8 LIBLOGO60x58[480] = {
   \                     LIBLOGO60x58:
   \   00000000   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   00000017   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   0000002E   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 192
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0xC0         
   \   00000043   0xE0 0xF8          DC8 224, 248, 252, 254, 127, 63, 15, 15, 7, 7, 7, 135, 199, 199, 199
   \              0xFC 0xFE    
   \              0x7F 0x3F    
   \              0x0F 0x0F    
   \              0x07 0x07    
   \              0x07 0x87    
   \              0xC7 0xC7    
   \              0xC7         
   \   00000052   0xE7 0xEF          DC8 231, 239, 255, 255, 255, 239, 231, 231, 231, 231, 231, 239, 255
   \              0xFF 0xFF    
   \              0xFF 0xEF    
   \              0xE7 0xE7    
   \              0xE7 0xE7    
   \              0xE7 0xEF    
   \              0xFF         
   \   0000005F   0xFF 0xFF          DC8 255, 255, 239, 231, 231, 231, 231, 231, 247, 7, 15, 63, 127, 255
   \              0xEF 0xE7    
   \              0xE7 0xE7    
   \              0xE7 0xE7    
   \              0xF7 0x07    
   \              0x0F 0x3F    
   \              0x7F 0xFF    
   \   0000006D   0xFE 0xFC          DC8 254, 252, 240, 192, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 216, 220, 223
   \              0xF0 0xC0    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0xD8 0xDC    
   \              0xDF         
   \   0000007E   0xDF 0xDF          DC8 223, 223, 223, 215, 1, 0, 0, 0, 0, 0, 0, 62, 127, 255, 255, 227
   \              0xDF 0xD7    
   \              0x01 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x3E    
   \              0x7F 0xFF    
   \              0xFF 0xE3    
   \   0000008E   0xE1 0xE1          DC8 225, 225, 255, 255, 255, 224, 224, 224, 224, 224, 224, 224, 255
   \              0xFF 0xFF    
   \              0xFF 0xE0    
   \              0xE0 0xE0    
   \              0xE0 0xE0    
   \              0xE0 0xE0    
   \              0xFF         
   \   0000009B   0xFF 0xFF          DC8 255, 255, 224, 224, 224, 224, 193, 131, 7, 0, 0, 0, 0, 1, 215, 223
   \              0xE0 0xE0    
   \              0xE0 0xE0    
   \              0xC1 0x83    
   \              0x07 0x00    
   \              0x00 0x00    
   \              0x00 0x01    
   \              0xD7 0xDF    
   \   000000AB   0xDF 0xDF          DC8 223, 223, 223, 220, 216, 0, 0, 0, 0, 0, 0, 0, 1, 3, 15, 31, 63, 255
   \              0xDF 0xDC    
   \              0xD8 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x01 0x03    
   \              0x0F 0x1F    
   \              0x3F 0xFF    
   \   000000BD   0xFF 0xFE          DC8 255, 254, 248, 240, 224, 192, 128, 0, 0, 248, 240, 224, 192, 192
   \              0xF8 0xF0    
   \              0xE0 0xC0    
   \              0x80 0x00    
   \              0x00 0xF8    
   \              0xF0 0xE0    
   \              0xC0 0xC0    
   \   000000CB   0xC0 0xFF          DC8 192, 255, 255, 255, 192, 192, 192, 192, 192, 192, 192, 255, 255
   \              0xFF 0xFF    
   \              0xC0 0xC0    
   \              0xC0 0xC0    
   \              0xC0 0xC0    
   \              0xC0 0xFF    
   \              0xFF         
   \   000000D8   0xFF 0xC0          DC8 255, 192, 224, 225, 243, 255, 127, 63, 0, 192, 224, 248, 254, 255
   \              0xE0 0xE1    
   \              0xF3 0xFF    
   \              0x7F 0x3F    
   \              0x00 0xC0    
   \              0xE0 0xF8    
   \              0xFE 0xFF    
   \   000000E6   0xFF 0xFF          DC8 255, 255, 63, 31, 7, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1
   \              0x3F 0x1F    
   \              0x07 0x01    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x01         
   \   000000FB   0x07 0x0F          DC8 7, 15, 63, 127, 255, 254, 252, 249, 243, 193, 129, 1, 1, 255, 255
   \              0x3F 0x7F    
   \              0xFF 0xFE    
   \              0xFC 0xF9    
   \              0xF3 0xC1    
   \              0x81 0x01    
   \              0x01 0xFF    
   \              0xFF         
   \   0000010A   0xFF 0x01          DC8 255, 1, 1, 1, 1, 1, 1, 1, 255, 255, 255, 3, 1, 129, 192, 240, 252
   \              0x01 0x01    
   \              0x01 0x01    
   \              0x01 0x01    
   \              0xFF 0xFF    
   \              0xFF 0x03    
   \              0x01 0x81    
   \              0xC0 0xF0    
   \              0xFC         
   \   0000011B   0xFE 0xFF          DC8 254, 255, 255, 127, 63, 15, 7, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0xFF 0x7F    
   \              0x3F 0x0F    
   \              0x07 0x03    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   0000012E   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 7, 15, 63, 127, 255
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x03 0x07    
   \              0x0F 0x3F    
   \              0x7F 0xFF    
   \   00000142   0xFF 0xFF          DC8 255, 255, 251, 243, 227, 195, 3, 3, 3, 3, 3, 131, 195, 243, 243
   \              0xFB 0xF3    
   \              0xE3 0xC3    
   \              0x03 0x03    
   \              0x03 0x03    
   \              0x03 0x83    
   \              0xC3 0xF3    
   \              0xF3         
   \   00000151   0xFB 0xFF          DC8 251, 255, 255, 255, 127, 63, 15, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0xFF 0xFF    
   \              0x7F 0x3F    
   \              0x0F 0x03    
   \              0x01 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   00000164   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   0000017B   0x00 0x00          DC8 0, 0, 0, 3, 7, 7, 31, 63, 127, 255, 254, 252, 252, 254, 255, 255
   \              0x00 0x03    
   \              0x07 0x07    
   \              0x1F 0x3F    
   \              0x7F 0xFF    
   \              0xFE 0xFC    
   \              0xFC 0xFE    
   \              0xFF 0xFF    
   \   0000018B   0x7F 0x3F          DC8 127, 63, 15, 7, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x0F 0x07    
   \              0x03 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   000001A0   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   000001B7   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 7, 15, 15, 7, 1, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x03 0x07    
   \              0x0F 0x0F    
   \              0x07 0x01    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000001CD   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
    261            0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,
    262            0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,
    263            0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,
    264            0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,
    265            0X00,0X00,0XC0,0XE0,0XF8,0XFC,0XFE,0X7F,0X3F,0X0F,0X0F,0X07,0X07,0X07,0X87,0XC7,
    266            0XC7,0XC7,0XE7,0XEF,0XFF,0XFF,0XFF,0XEF,0XE7,0XE7,0XE7,0XE7,0XE7,0XEF,0XFF,0XFF,
    267            0XFF,0XEF,0XE7,0XE7,0XE7,0XE7,0XE7,0XF7,0X07,0X0F,0X3F,0X7F,0XFF,0XFE,0XFC,0XF0,
    268            0XC0,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0XD8,0XDC,0XDF,0XDF,0XDF,
    269            0XDF,0XD7,0X01,0X00,0X00,0X00,0X00,0X00,0X00,0X3E,0X7F,0XFF,0XFF,0XE3,0XE1,0XE1,
    270            0XFF,0XFF,0XFF,0XE0,0XE0,0XE0,0XE0,0XE0,0XE0,0XE0,0XFF,0XFF,0XFF,0XE0,0XE0,0XE0,
    271            0XE0,0XC1,0X83,0X07,0X00,0X00,0X00,0X00,0X01,0XD7,0XDF,0XDF,0XDF,0XDF,0XDC,0XD8,
    272            0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X01,0X03,0X0F,0X1F,0X3F,0XFF,0XFF,0XFE,0XF8,
    273            0XF0,0XE0,0XC0,0X80,0X00,0X00,0XF8,0XF0,0XE0,0XC0,0XC0,0XC0,0XFF,0XFF,0XFF,0XC0,
    274            0XC0,0XC0,0XC0,0XC0,0XC0,0XC0,0XFF,0XFF,0XFF,0XC0,0XE0,0XE1,0XF3,0XFF,0X7F,0X3F,
    275            0X00,0XC0,0XE0,0XF8,0XFE,0XFF,0XFF,0XFF,0X3F,0X1F,0X07,0X01,0X00,0X00,0X00,0X00,
    276            0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X01,0X07,0X0F,0X3F,0X7F,0XFF,
    277            0XFE,0XFC,0XF9,0XF3,0XC1,0X81,0X01,0X01,0XFF,0XFF,0XFF,0X01,0X01,0X01,0X01,0X01,
    278            0X01,0X01,0XFF,0XFF,0XFF,0X03,0X01,0X81,0XC0,0XF0,0XFC,0XFE,0XFF,0XFF,0X7F,0X3F,
    279            0X0F,0X07,0X03,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,
    280            0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X03,0X07,0X0F,0X3F,
    281            0X7F,0XFF,0XFF,0XFF,0XFB,0XF3,0XE3,0XC3,0X03,0X03,0X03,0X03,0X03,0X83,0XC3,0XF3,
    282            0XF3,0XFB,0XFF,0XFF,0XFF,0X7F,0X3F,0X0F,0X03,0X01,0X00,0X00,0X00,0X00,0X00,0X00,
    283            0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,
    284            0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X03,0X07,
    285            0X07,0X1F,0X3F,0X7F,0XFF,0XFE,0XFC,0XFC,0XFE,0XFF,0XFF,0X7F,0X3F,0X0F,0X07,0X03,
    286            0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,
    287            0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,
    288            0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,
    289            0X00,0X03,0X07,0X0F,0X0F,0X07,0X01,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,
    290            0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,
    291          };
    292          
    293          

   \                                 In section .text, align 4, keep-with-next
    294          void OLED_WrDat(uint8 data)
    295          {
   \                     OLED_WrDat: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x0004             MOVS     R4,R0
    296          	uint8 i=8;
   \   00000004   0x2508             MOVS     R5,#+8
    297          	//LCD_CS=0;;
    298          	OLED_DC(1);
   \   00000006   0x2201             MOVS     R2,#+1
   \   00000008   0x210E             MOVS     R1,#+14
   \   0000000A   0x.... 0x....      LDR.W    R0,??DataTable8  ;; 0x400ff0c0
   \   0000000E   0x.... 0x....      BL       LPLD_GPIO_Output_b
    299            OLED_SCL(0);
   \   00000012   0x2200             MOVS     R2,#+0
   \   00000014   0x210D             MOVS     R1,#+13
   \   00000016   0x.... 0x....      LDR.W    R0,??DataTable8  ;; 0x400ff0c0
   \   0000001A   0x.... 0x....      BL       LPLD_GPIO_Output_b
   \   0000001E   0xE013             B.N      ??OLED_WrDat_0
    300            //asm("nop");
    301            while(i--)
    302            {
    303              if(data&0x80){OLED_SDA(1);}
    304              else{OLED_SDA(0);}
   \                     ??OLED_WrDat_1: (+1)
   \   00000020   0x2200             MOVS     R2,#+0
   \   00000022   0x210C             MOVS     R1,#+12
   \   00000024   0x.... 0x....      LDR.W    R0,??DataTable8  ;; 0x400ff0c0
   \   00000028   0x.... 0x....      BL       LPLD_GPIO_Output_b
    305              OLED_SCL(1);
   \                     ??OLED_WrDat_2: (+1)
   \   0000002C   0x2201             MOVS     R2,#+1
   \   0000002E   0x210D             MOVS     R1,#+13
   \   00000030   0x.... 0x....      LDR.W    R0,??DataTable8  ;; 0x400ff0c0
   \   00000034   0x.... 0x....      BL       LPLD_GPIO_Output_b
    306              asm("nop");;
   \   00000038   0xBF00             nop
    307          		//asm("nop");
    308              OLED_SCL(0);;
   \   0000003A   0x2200             MOVS     R2,#+0
   \   0000003C   0x210D             MOVS     R1,#+13
   \   0000003E   0x.... 0x....      LDR.W    R0,??DataTable8  ;; 0x400ff0c0
   \   00000042   0x.... 0x....      BL       LPLD_GPIO_Output_b
    309              data<<=1;
   \   00000046   0x0064             LSLS     R4,R4,#+1
   \                     ??OLED_WrDat_0: (+1)
   \   00000048   0x0028             MOVS     R0,R5
   \   0000004A   0x1E45             SUBS     R5,R0,#+1
   \   0000004C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000004E   0x2800             CMP      R0,#+0
   \   00000050   0xD008             BEQ.N    ??OLED_WrDat_3
   \   00000052   0x0620             LSLS     R0,R4,#+24
   \   00000054   0xD5E4             BPL.N    ??OLED_WrDat_1
   \   00000056   0x2201             MOVS     R2,#+1
   \   00000058   0x210C             MOVS     R1,#+12
   \   0000005A   0x.... 0x....      LDR.W    R0,??DataTable8  ;; 0x400ff0c0
   \   0000005E   0x.... 0x....      BL       LPLD_GPIO_Output_b
   \   00000062   0xE7E3             B.N      ??OLED_WrDat_2
    310            }
    311          }
   \                     ??OLED_WrDat_3: (+1)
   \   00000064   0xBD31             POP      {R0,R4,R5,PC}    ;; return
    312          

   \                                 In section .text, align 4, keep-with-next
    313          void OLED_WrCmd(uint8 cmd)
    314          {
   \                     OLED_WrCmd: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x0004             MOVS     R4,R0
    315          	uint8 i=8;
   \   00000004   0x2508             MOVS     R5,#+8
    316          
    317          	//LCD_CS=0;;
    318          	OLED_DC(0);;
   \   00000006   0x2200             MOVS     R2,#+0
   \   00000008   0x210E             MOVS     R1,#+14
   \   0000000A   0x.... 0x....      LDR.W    R0,??DataTable8  ;; 0x400ff0c0
   \   0000000E   0x.... 0x....      BL       LPLD_GPIO_Output_b
    319            OLED_SCL(0);;
   \   00000012   0x2200             MOVS     R2,#+0
   \   00000014   0x210D             MOVS     R1,#+13
   \   00000016   0x.... 0x....      LDR.W    R0,??DataTable8  ;; 0x400ff0c0
   \   0000001A   0x.... 0x....      BL       LPLD_GPIO_Output_b
   \   0000001E   0xE013             B.N      ??OLED_WrCmd_0
    320            //asm("nop");
    321            while(i--)
    322            {
    323              if(cmd&0x80){OLED_SDA(1);}
    324              else{OLED_SDA(0);;}
   \                     ??OLED_WrCmd_1: (+1)
   \   00000020   0x2200             MOVS     R2,#+0
   \   00000022   0x210C             MOVS     R1,#+12
   \   00000024   0x.... 0x....      LDR.W    R0,??DataTable8  ;; 0x400ff0c0
   \   00000028   0x.... 0x....      BL       LPLD_GPIO_Output_b
    325              OLED_SCL(1);;
   \                     ??OLED_WrCmd_2: (+1)
   \   0000002C   0x2201             MOVS     R2,#+1
   \   0000002E   0x210D             MOVS     R1,#+13
   \   00000030   0x.... 0x....      LDR.W    R0,??DataTable8  ;; 0x400ff0c0
   \   00000034   0x.... 0x....      BL       LPLD_GPIO_Output_b
    326              asm("nop");;
   \   00000038   0xBF00             nop
    327              OLED_SCL(0);;
   \   0000003A   0x2200             MOVS     R2,#+0
   \   0000003C   0x210D             MOVS     R1,#+13
   \   0000003E   0x.... 0x....      LDR.W    R0,??DataTable8  ;; 0x400ff0c0
   \   00000042   0x.... 0x....      BL       LPLD_GPIO_Output_b
    328              cmd<<=1;;
   \   00000046   0x0064             LSLS     R4,R4,#+1
   \                     ??OLED_WrCmd_0: (+1)
   \   00000048   0x0028             MOVS     R0,R5
   \   0000004A   0x1E45             SUBS     R5,R0,#+1
   \   0000004C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000004E   0x2800             CMP      R0,#+0
   \   00000050   0xD008             BEQ.N    ??OLED_WrCmd_3
   \   00000052   0x0620             LSLS     R0,R4,#+24
   \   00000054   0xD5E4             BPL.N    ??OLED_WrCmd_1
   \   00000056   0x2201             MOVS     R2,#+1
   \   00000058   0x210C             MOVS     R1,#+12
   \   0000005A   0x.... 0x....      LDR.W    R0,??DataTable8  ;; 0x400ff0c0
   \   0000005E   0x.... 0x....      BL       LPLD_GPIO_Output_b
   \   00000062   0xE7E3             B.N      ??OLED_WrCmd_2
    329            }
    330          }
   \                     ??OLED_WrCmd_3: (+1)
   \   00000064   0xBD31             POP      {R0,R4,R5,PC}    ;; return
    331          

   \                                 In section .text, align 2, keep-with-next
    332          void OLED_Set_Pos(uint8 x, uint8 y)
    333          {
   \                     OLED_Set_Pos: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
    334            OLED_WrCmd(0xb0+y);
   \   00000004   0xF1B1 0x0050      SUBS     R0,R1,#+80
   \   00000008   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000000A   0x.... 0x....      BL       OLED_WrCmd
    335            OLED_WrCmd(((x&0xf0)>>4)|0x10);
   \   0000000E   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000010   0x0920             LSRS     R0,R4,#+4
   \   00000012   0xF050 0x0010      ORRS     R0,R0,#0x10
   \   00000016   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000018   0x.... 0x....      BL       OLED_WrCmd
    336            OLED_WrCmd((x&0x0f)|0x01);
   \   0000001C   0xF014 0x000F      ANDS     R0,R4,#0xF
   \   00000020   0xF050 0x0001      ORRS     R0,R0,#0x1
   \   00000024   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000026   0x.... 0x....      BL       OLED_WrCmd
    337          }
   \   0000002A   0xBD10             POP      {R4,PC}          ;; return
    338          
    339          //清屏

   \                                 In section .text, align 2, keep-with-next
    340          void OLED_Fill(uint8 bmp_data)
    341          {
   \                     OLED_Fill: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0x0004             MOVS     R4,R0
    342          	uint8 y,x;
    343          
    344          	for(y=0;y<8;y++)
   \   00000004   0x2500             MOVS     R5,#+0
   \   00000006   0xE008             B.N      ??OLED_Fill_0
    345          	{
    346          		OLED_WrCmd(0xb0+y);
    347          		OLED_WrCmd(0x01);
    348          		OLED_WrCmd(0x10);
    349          		for(x=0;x<X_WIDTH;x++)
    350          			OLED_WrDat(bmp_data);
   \                     ??OLED_Fill_1: (+1)
   \   00000008   0x0020             MOVS     R0,R4
   \   0000000A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000000C   0x.... 0x....      BL       OLED_WrDat
   \   00000010   0x1C76             ADDS     R6,R6,#+1
   \                     ??OLED_Fill_2: (+1)
   \   00000012   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000014   0x2E80             CMP      R6,#+128
   \   00000016   0xDBF7             BLT.N    ??OLED_Fill_1
   \   00000018   0x1C6D             ADDS     R5,R5,#+1
   \                     ??OLED_Fill_0: (+1)
   \   0000001A   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   0000001C   0x2D08             CMP      R5,#+8
   \   0000001E   0xDA0C             BGE.N    ??OLED_Fill_3
   \   00000020   0xF1B5 0x0050      SUBS     R0,R5,#+80
   \   00000024   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000026   0x.... 0x....      BL       OLED_WrCmd
   \   0000002A   0x2001             MOVS     R0,#+1
   \   0000002C   0x.... 0x....      BL       OLED_WrCmd
   \   00000030   0x2010             MOVS     R0,#+16
   \   00000032   0x.... 0x....      BL       OLED_WrCmd
   \   00000036   0x2600             MOVS     R6,#+0
   \   00000038   0xE7EB             B.N      ??OLED_Fill_2
    351          	}
    352          }
   \                     ??OLED_Fill_3: (+1)
   \   0000003A   0xBD70             POP      {R4-R6,PC}       ;; return

   \                                 In section .text, align 2, keep-with-next
    353          void OLED_CLS(void)
    354          {
   \                     OLED_CLS: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
    355          	uint8 y,x;
    356          	for(y=0;y<8;y++)
   \   00000002   0x2400             MOVS     R4,#+0
   \   00000004   0xE007             B.N      ??OLED_CLS_0
    357          	{
    358          		OLED_WrCmd(0xb0+y);
    359          		OLED_WrCmd(0x01);
    360          		OLED_WrCmd(0x10);
    361          		for(x=0;x<X_WIDTH;x++)
    362          			OLED_WrDat(0);
   \                     ??OLED_CLS_1: (+1)
   \   00000006   0x2000             MOVS     R0,#+0
   \   00000008   0x.... 0x....      BL       OLED_WrDat
   \   0000000C   0x1C6D             ADDS     R5,R5,#+1
   \                     ??OLED_CLS_2: (+1)
   \   0000000E   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000010   0x2D80             CMP      R5,#+128
   \   00000012   0xDBF8             BLT.N    ??OLED_CLS_1
   \   00000014   0x1C64             ADDS     R4,R4,#+1
   \                     ??OLED_CLS_0: (+1)
   \   00000016   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000018   0x2C08             CMP      R4,#+8
   \   0000001A   0xDA0C             BGE.N    ??OLED_CLS_3
   \   0000001C   0xF1B4 0x0050      SUBS     R0,R4,#+80
   \   00000020   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000022   0x.... 0x....      BL       OLED_WrCmd
   \   00000026   0x2001             MOVS     R0,#+1
   \   00000028   0x.... 0x....      BL       OLED_WrCmd
   \   0000002C   0x2010             MOVS     R0,#+16
   \   0000002E   0x.... 0x....      BL       OLED_WrCmd
   \   00000032   0x2500             MOVS     R5,#+0
   \   00000034   0xE7EB             B.N      ??OLED_CLS_2
    363          	}
    364          }
   \                     ??OLED_CLS_3: (+1)
   \   00000036   0xBD31             POP      {R0,R4,R5,PC}    ;; return
    365          
    366          
    367          //==============================================================
    368          //函数名： void LCD_PutPixel(uint8 x,uint8 y)
    369          //功能描述：绘制一个点（x,y）
    370          //参数：真实坐标值(x,y),x的范围0～127，y的范围0～64
    371          //返回：无
    372          //==============================================================

   \                                 In section .text, align 2, keep-with-next
    373          void OLED_PutPixel(uint8 x,uint8 y)
    374          {
   \                     OLED_PutPixel: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000D             MOVS     R5,R1
    375          	uint8 data1;  //data1当前点的数据
    376          
    377                  OLED_Set_Pos(x,y);
   \   00000006   0x0029             MOVS     R1,R5
   \   00000008   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000000A   0x0020             MOVS     R0,R4
   \   0000000C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000000E   0x.... 0x....      BL       OLED_Set_Pos
    378          	data1 = 0x01<<(y%8);
   \   00000012   0x2001             MOVS     R0,#+1
   \   00000014   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000016   0x2108             MOVS     R1,#+8
   \   00000018   0xFB95 0xF2F1      SDIV     R2,R5,R1
   \   0000001C   0xFB02 0x5211      MLS      R2,R2,R1,R5
   \   00000020   0xFA10 0xF602      LSLS     R6,R0,R2
    379          	OLED_WrCmd(0xb0+(y>>3));
   \   00000024   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000026   0x08E8             LSRS     R0,R5,#+3
   \   00000028   0x3850             SUBS     R0,R0,#+80
   \   0000002A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000002C   0x.... 0x....      BL       OLED_WrCmd
    380          	OLED_WrCmd(((x&0xf0)>>4)|0x10);
   \   00000030   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000032   0x0920             LSRS     R0,R4,#+4
   \   00000034   0xF050 0x0010      ORRS     R0,R0,#0x10
   \   00000038   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000003A   0x.... 0x....      BL       OLED_WrCmd
    381          	OLED_WrCmd((x&0x0f)|0x00);
   \   0000003E   0xF014 0x000F      ANDS     R0,R4,#0xF
   \   00000042   0x.... 0x....      BL       OLED_WrCmd
    382          	OLED_WrDat(data1);
   \   00000046   0x0030             MOVS     R0,R6
   \   00000048   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000004A   0x.... 0x....      BL       OLED_WrDat
    383          }
   \   0000004E   0xBD70             POP      {R4-R6,PC}       ;; return
    384          
    385          //==============================================================
    386          //函数名： void LCD_Rectangle(uint8 x1,uint8 y1,
    387          //                   uint8 x2,uint8 y2,uint8 color,uint8 gif)
    388          //功能描述：绘制一个实心矩形
    389          //参数：左上角坐标（x1,y1）,右下角坐标（x2，y2）
    390             //      其中x1、x2的范围0～127，y1，y2的范围0～63，即真实坐标值
    391          //返回：无
    392          //==============================================================

   \                                 In section .text, align 2, keep-with-next
    393          void OLED_Rectangle(uint8 x1,uint8 y1,uint8 x2,uint8 y2,uint8 gif)
    394          {
   \                     OLED_Rectangle: (+1)
   \   00000000   0xE92D 0x43F8      PUSH     {R3-R9,LR}
   \   00000004   0x0005             MOVS     R5,R0
   \   00000006   0x000E             MOVS     R6,R1
   \   00000008   0x0017             MOVS     R7,R2
   \   0000000A   0x4698             MOV      R8,R3
    395          	uint8 n;
    396          
    397          	OLED_Set_Pos(x1,y1>>3);
   \   0000000C   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   0000000E   0x08F1             LSRS     R1,R6,#+3
   \   00000010   0x0028             MOVS     R0,R5
   \   00000012   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000014   0x.... 0x....      BL       OLED_Set_Pos
    398          	for(n=x1;n<=x2;n++)
   \   00000018   0x46A9             MOV      R9,R5
   \   0000001A   0x9C08             LDR      R4,[SP, #+32]
   \   0000001C   0xE012             B.N      ??OLED_Rectangle_0
    399          	{
    400          		OLED_WrDat(0x01<<(y1%8));
   \                     ??OLED_Rectangle_1: (+1)
   \   0000001E   0x2001             MOVS     R0,#+1
   \   00000020   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000022   0x2108             MOVS     R1,#+8
   \   00000024   0xFB96 0xF2F1      SDIV     R2,R6,R1
   \   00000028   0xFB02 0x6211      MLS      R2,R2,R1,R6
   \   0000002C   0x4090             LSLS     R0,R0,R2
   \   0000002E   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000030   0x.... 0x....      BL       OLED_WrDat
    401          		if(gif == 1) 	LPLD_LPTMR_DelayMs(50);
   \   00000034   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000036   0x2C01             CMP      R4,#+1
   \   00000038   0xD102             BNE.N    ??OLED_Rectangle_2
   \   0000003A   0x2032             MOVS     R0,#+50
   \   0000003C   0x.... 0x....      BL       LPLD_LPTMR_DelayMs
    402          	}
   \                     ??OLED_Rectangle_2: (+1)
   \   00000040   0xF119 0x0901      ADDS     R9,R9,#+1
   \                     ??OLED_Rectangle_0: (+1)
   \   00000044   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   00000046   0xFA5F 0xF989      UXTB     R9,R9            ;; ZeroExt  R9,R9,#+24,#+24
   \   0000004A   0x454F             CMP      R7,R9
   \   0000004C   0xD2E7             BCS.N    ??OLED_Rectangle_1
    403          	OLED_Set_Pos(x1,y2>>3);
   \   0000004E   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   00000052   0xEA5F 0x01D8      LSRS     R1,R8,#+3
   \   00000056   0x0028             MOVS     R0,R5
   \   00000058   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000005A   0x.... 0x....      BL       OLED_Set_Pos
    404            for(n=x1;n<=x2;n++)
   \   0000005E   0x46A9             MOV      R9,R5
   \   00000060   0xE013             B.N      ??OLED_Rectangle_3
    405          	{
    406          		OLED_WrDat(0x01<<(y2%8));
   \                     ??OLED_Rectangle_4: (+1)
   \   00000062   0x2001             MOVS     R0,#+1
   \   00000064   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   00000068   0x2108             MOVS     R1,#+8
   \   0000006A   0xFB98 0xF2F1      SDIV     R2,R8,R1
   \   0000006E   0xFB02 0x8211      MLS      R2,R2,R1,R8
   \   00000072   0x4090             LSLS     R0,R0,R2
   \   00000074   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000076   0x.... 0x....      BL       OLED_WrDat
    407          		if(gif == 1) 	LPLD_LPTMR_DelayMs(5);
   \   0000007A   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000007C   0x2C01             CMP      R4,#+1
   \   0000007E   0xD102             BNE.N    ??OLED_Rectangle_5
   \   00000080   0x2005             MOVS     R0,#+5
   \   00000082   0x.... 0x....      BL       LPLD_LPTMR_DelayMs
    408          	}
   \                     ??OLED_Rectangle_5: (+1)
   \   00000086   0xF119 0x0901      ADDS     R9,R9,#+1
   \                     ??OLED_Rectangle_3: (+1)
   \   0000008A   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   0000008C   0xFA5F 0xF989      UXTB     R9,R9            ;; ZeroExt  R9,R9,#+24,#+24
   \   00000090   0x454F             CMP      R7,R9
   \   00000092   0xD2E6             BCS.N    ??OLED_Rectangle_4
    409          }
   \   00000094   0xE8BD 0x83F1      POP      {R0,R4-R9,PC}    ;; return
    410          
    411          //==============================================================
    412          //函数名：LCD_P6x8Str(uint8 x,uint8 y,uint8 *p)
    413          //功能描述：写入一组标准ASCII字符串
    414          //参数：显示的位置（x,y），y为页范围0～7，要显示的字符串
    415          //返回：无
    416          //==============================================================

   \                                 In section .text, align 2, keep-with-next
    417          void OLED_P6x8Str(uint8 x,uint8 y,uint8 ch[])
    418          {
   \                     OLED_P6x8Str: (+1)
   \   00000000   0xE92D 0x43F8      PUSH     {R3-R9,LR}
   \   00000004   0x0004             MOVS     R4,R0
   \   00000006   0x000D             MOVS     R5,R1
   \   00000008   0x0016             MOVS     R6,R2
    419            uint8 c=0,i=0,j=0;
   \   0000000A   0x2700             MOVS     R7,#+0
   \   0000000C   0xF05F 0x0800      MOVS     R8,#+0
   \   00000010   0xF05F 0x0900      MOVS     R9,#+0
   \   00000014   0xE015             B.N      ??OLED_P6x8Str_0
    420            while (ch[j]!='\0')
    421            {
    422              c =ch[j]-32;
    423              if(x>126){x=0;y++;}
    424              OLED_Set_Pos(x,y);
    425            	for(i=0;i<6;i++)
    426            	  OLED_WrDat(F6x8[c][i]);
   \                     ??OLED_P6x8Str_1: (+1)
   \   00000016   0x.... 0x....      LDR.W    R0,??DataTable8_4
   \   0000001A   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   0000001C   0x2106             MOVS     R1,#+6
   \   0000001E   0xFB01 0x0007      MLA      R0,R1,R7,R0
   \   00000022   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   00000026   0xF818 0x0000      LDRB     R0,[R8, R0]
   \   0000002A   0x.... 0x....      BL       OLED_WrDat
   \   0000002E   0xF118 0x0801      ADDS     R8,R8,#+1
   \                     ??OLED_P6x8Str_2: (+1)
   \   00000032   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   00000036   0xF1B8 0x0F06      CMP      R8,#+6
   \   0000003A   0xDBEC             BLT.N    ??OLED_P6x8Str_1
    427            	x+=6;
   \   0000003C   0x1DA4             ADDS     R4,R4,#+6
    428            	j++;
   \   0000003E   0xF119 0x0901      ADDS     R9,R9,#+1
   \                     ??OLED_P6x8Str_0: (+1)
   \   00000042   0xFA5F 0xF989      UXTB     R9,R9            ;; ZeroExt  R9,R9,#+24,#+24
   \   00000046   0xF819 0x0006      LDRB     R0,[R9, R6]
   \   0000004A   0x2800             CMP      R0,#+0
   \   0000004C   0xD013             BEQ.N    ??OLED_P6x8Str_3
   \   0000004E   0xFA5F 0xF989      UXTB     R9,R9            ;; ZeroExt  R9,R9,#+24,#+24
   \   00000052   0xF819 0x0006      LDRB     R0,[R9, R6]
   \   00000056   0xF1B0 0x0720      SUBS     R7,R0,#+32
   \   0000005A   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000005C   0x2C7F             CMP      R4,#+127
   \   0000005E   0xDB01             BLT.N    ??OLED_P6x8Str_4
   \   00000060   0x2400             MOVS     R4,#+0
   \   00000062   0x1C6D             ADDS     R5,R5,#+1
   \                     ??OLED_P6x8Str_4: (+1)
   \   00000064   0x0029             MOVS     R1,R5
   \   00000066   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000068   0x0020             MOVS     R0,R4
   \   0000006A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000006C   0x.... 0x....      BL       OLED_Set_Pos
   \   00000070   0xF05F 0x0800      MOVS     R8,#+0
   \   00000074   0xE7DD             B.N      ??OLED_P6x8Str_2
    429            }
    430          }
   \                     ??OLED_P6x8Str_3: (+1)
   \   00000076   0xE8BD 0x83F1      POP      {R0,R4-R9,PC}    ;; return
    431          
    432          //==============================================================
    433          //功能描述：显示6X8的字符                      
    434          //==============================================================

   \                                 In section .text, align 2, keep-with-next
    435          void OLED_6x8Char(uint8 X1, uint8 Y1, uint8 Data1)
    436          {
   \                     OLED_6x8Char: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
    437              uint8 xx, temp;     
    438                 
    439              temp = Data1-32;
   \   00000002   0xF1B2 0x0520      SUBS     R5,R2,#+32
    440              if(X1 > 122)
   \   00000006   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000008   0x287B             CMP      R0,#+123
   \   0000000A   0xDB01             BLT.N    ??OLED_6x8Char_0
    441              {
    442                  X1 = 0;
   \   0000000C   0x2000             MOVS     R0,#+0
    443                  Y1++;
   \   0000000E   0x1C49             ADDS     R1,R1,#+1
    444              } 
    445              OLED_Set_Pos(X1, Y1);
   \                     ??OLED_6x8Char_0: (+1)
   \   00000010   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000012   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000014   0x.... 0x....      BL       OLED_Set_Pos
    446              
    447              for(xx = 0; xx < 6; xx++)
   \   00000018   0x2400             MOVS     R4,#+0
   \   0000001A   0xE00A             B.N      ??OLED_6x8Char_1
    448              {     
    449                  OLED_WrDat(F6x8[temp][xx]);  
   \                     ??OLED_6x8Char_2: (+1)
   \   0000001C   0x.... 0x....      LDR.W    R0,??DataTable8_4
   \   00000020   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000022   0x2106             MOVS     R1,#+6
   \   00000024   0xFB01 0x0005      MLA      R0,R1,R5,R0
   \   00000028   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000002A   0x5C20             LDRB     R0,[R4, R0]
   \   0000002C   0x.... 0x....      BL       OLED_WrDat
    450              }
   \   00000030   0x1C64             ADDS     R4,R4,#+1
   \                     ??OLED_6x8Char_1: (+1)
   \   00000032   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000034   0x2C06             CMP      R4,#+6
   \   00000036   0xDBF1             BLT.N    ??OLED_6x8Char_2
    451          }
   \   00000038   0xBD31             POP      {R0,R4,R5,PC}    ;; return
    452          
    453          
    454          //==============================================================
    455          //函数名：LCD_P8x16Str(uint8 x,uint8 y,uint8 *p)
    456          //功能描述：写入一组标准ASCII字符串
    457          //参数：显示的位置（x,y），y为页范围0～7，要显示的字符串
    458          //返回：无
    459          //==============================================================

   \                                 In section .text, align 2, keep-with-next
    460          void OLED_P8x16Str(uint8 x,uint8 y,uint8 ch[])
    461          {
   \                     OLED_P8x16Str: (+1)
   \   00000000   0xE92D 0x43F8      PUSH     {R3-R9,LR}
   \   00000004   0x0004             MOVS     R4,R0
   \   00000006   0x000D             MOVS     R5,R1
   \   00000008   0x0016             MOVS     R6,R2
    462            uint8 c=0,i=0,j=0;
   \   0000000A   0x2700             MOVS     R7,#+0
   \   0000000C   0xF05F 0x0800      MOVS     R8,#+0
   \   00000010   0xF05F 0x0900      MOVS     R9,#+0
   \   00000014   0xE013             B.N      ??OLED_P8x16Str_0
    463          
    464            while (ch[j]!='\0')
    465            {
    466              c =ch[j]-32;
    467              if(x>120){x=0;y++;}
    468              OLED_Set_Pos(x,y);
    469            	for(i=0;i<8;i++)
    470            	  OLED_WrDat(F8X16[c*16+i]);
    471            	OLED_Set_Pos(x,y+1);
    472            	for(i=0;i<8;i++)
    473            	  OLED_WrDat(F8X16[c*16+i+8]);
   \                     ??OLED_P8x16Str_1: (+1)
   \   00000016   0x.... 0x....      LDR.W    R0,??DataTable8_5
   \   0000001A   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   0000001C   0x0139             LSLS     R1,R7,#+4
   \   0000001E   0xFA51 0xF188      UXTAB    R1,R1,R8
   \   00000022   0x1808             ADDS     R0,R1,R0
   \   00000024   0x7A00             LDRB     R0,[R0, #+8]
   \   00000026   0x.... 0x....      BL       OLED_WrDat
   \   0000002A   0xF118 0x0801      ADDS     R8,R8,#+1
   \                     ??OLED_P8x16Str_2: (+1)
   \   0000002E   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   00000032   0xF1B8 0x0F08      CMP      R8,#+8
   \   00000036   0xDBEE             BLT.N    ??OLED_P8x16Str_1
    474            	x+=8;
   \   00000038   0x3408             ADDS     R4,R4,#+8
    475            	j++;
   \   0000003A   0xF119 0x0901      ADDS     R9,R9,#+1
   \                     ??OLED_P8x16Str_0: (+1)
   \   0000003E   0xFA5F 0xF989      UXTB     R9,R9            ;; ZeroExt  R9,R9,#+24,#+24
   \   00000042   0xF819 0x0006      LDRB     R0,[R9, R6]
   \   00000046   0x2800             CMP      R0,#+0
   \   00000048   0xD02C             BEQ.N    ??OLED_P8x16Str_3
   \   0000004A   0xFA5F 0xF989      UXTB     R9,R9            ;; ZeroExt  R9,R9,#+24,#+24
   \   0000004E   0xF819 0x0006      LDRB     R0,[R9, R6]
   \   00000052   0xF1B0 0x0720      SUBS     R7,R0,#+32
   \   00000056   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000058   0x2C79             CMP      R4,#+121
   \   0000005A   0xDB01             BLT.N    ??OLED_P8x16Str_4
   \   0000005C   0x2400             MOVS     R4,#+0
   \   0000005E   0x1C6D             ADDS     R5,R5,#+1
   \                     ??OLED_P8x16Str_4: (+1)
   \   00000060   0x0029             MOVS     R1,R5
   \   00000062   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000064   0x0020             MOVS     R0,R4
   \   00000066   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000068   0x.... 0x....      BL       OLED_Set_Pos
   \   0000006C   0xF05F 0x0800      MOVS     R8,#+0
   \   00000070   0xE00A             B.N      ??OLED_P8x16Str_5
   \                     ??OLED_P8x16Str_6: (+1)
   \   00000072   0x.... 0x....      LDR.W    R0,??DataTable8_5
   \   00000076   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   00000078   0x0139             LSLS     R1,R7,#+4
   \   0000007A   0xFA51 0xF188      UXTAB    R1,R1,R8
   \   0000007E   0x5C08             LDRB     R0,[R1, R0]
   \   00000080   0x.... 0x....      BL       OLED_WrDat
   \   00000084   0xF118 0x0801      ADDS     R8,R8,#+1
   \                     ??OLED_P8x16Str_5: (+1)
   \   00000088   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   0000008C   0xF1B8 0x0F08      CMP      R8,#+8
   \   00000090   0xDBEF             BLT.N    ??OLED_P8x16Str_6
   \   00000092   0x1C69             ADDS     R1,R5,#+1
   \   00000094   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000096   0x0020             MOVS     R0,R4
   \   00000098   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000009A   0x.... 0x....      BL       OLED_Set_Pos
   \   0000009E   0xF05F 0x0800      MOVS     R8,#+0
   \   000000A2   0xE7C4             B.N      ??OLED_P8x16Str_2
    476            }
    477          }
   \                     ??OLED_P8x16Str_3: (+1)
   \   000000A4   0xE8BD 0x83F1      POP      {R0,R4-R9,PC}    ;; return
    478          
    479          
    480          //输出汉字和字符混合字符串

   \                                 In section .text, align 2, keep-with-next
    481          void OLED_Print(uint8 x, uint8 y, uint8 ch[])
    482          {
   \                     OLED_Print: (+1)
   \   00000000   0xB5F8             PUSH     {R3-R7,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000D             MOVS     R5,R1
   \   00000006   0x0016             MOVS     R6,R2
    483          	uint8 ch2[3];
    484          	uint8 ii=0;
   \   00000008   0x2700             MOVS     R7,#+0
   \   0000000A   0xE014             B.N      ??OLED_Print_0
    485          	while(ch[ii] != '\0')
    486          	{
    487          		if(ch[ii] > 127)
    488          		{
    489          			ch2[0] = ch[ii];
   \                     ??OLED_Print_1: (+1)
   \   0000000C   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   0000000E   0x5DB8             LDRB     R0,[R7, R6]
   \   00000010   0xF88D 0x0000      STRB     R0,[SP, #+0]
    490          	 		ch2[1] = ch[ii + 1];
   \   00000014   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   00000016   0x19B8             ADDS     R0,R7,R6
   \   00000018   0x7840             LDRB     R0,[R0, #+1]
   \   0000001A   0xF88D 0x0001      STRB     R0,[SP, #+1]
    491          			ch2[2] = '\0';			//汉字为两个字节
   \   0000001E   0x2000             MOVS     R0,#+0
   \   00000020   0xF88D 0x0002      STRB     R0,[SP, #+2]
    492          			OLED_P14x16Str(x , y, ch2);	//显示汉字
   \   00000024   0xAA00             ADD      R2,SP,#+0
   \   00000026   0x0029             MOVS     R1,R5
   \   00000028   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000002A   0x0020             MOVS     R0,R4
   \   0000002C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000002E   0x.... 0x....      BL       OLED_P14x16Str
    493          			x += 14;
   \   00000032   0x340E             ADDS     R4,R4,#+14
    494          			ii += 2;
   \   00000034   0x1CBF             ADDS     R7,R7,#+2
    495          		}
   \                     ??OLED_Print_0: (+1)
   \   00000036   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   00000038   0x5DB8             LDRB     R0,[R7, R6]
   \   0000003A   0x2800             CMP      R0,#+0
   \   0000003C   0xD014             BEQ.N    ??OLED_Print_2
   \   0000003E   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   00000040   0x5DB8             LDRB     R0,[R7, R6]
   \   00000042   0x2880             CMP      R0,#+128
   \   00000044   0xDAE2             BGE.N    ??OLED_Print_1
    496          		else
    497          		{
    498          			ch2[0] = ch[ii];
   \   00000046   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   00000048   0x5DB8             LDRB     R0,[R7, R6]
   \   0000004A   0xF88D 0x0000      STRB     R0,[SP, #+0]
    499          			ch2[1] = '\0';			//字母占一个字节
   \   0000004E   0x2000             MOVS     R0,#+0
   \   00000050   0xF88D 0x0001      STRB     R0,[SP, #+1]
    500          			OLED_P8x16Str(x , y , ch2);	//显示字母
   \   00000054   0xAA00             ADD      R2,SP,#+0
   \   00000056   0x0029             MOVS     R1,R5
   \   00000058   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000005A   0x0020             MOVS     R0,R4
   \   0000005C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000005E   0x.... 0x....      BL       OLED_P8x16Str
    501          			x += 8;
   \   00000062   0x3408             ADDS     R4,R4,#+8
    502          			ii+= 1;
   \   00000064   0x1C7F             ADDS     R7,R7,#+1
   \   00000066   0xE7E6             B.N      ??OLED_Print_0
    503          		}
    504          	}
    505          }
   \                     ??OLED_Print_2: (+1)
   \   00000068   0xBDF1             POP      {R0,R4-R7,PC}    ;; return
    506          
    507          //==============================================================
    508          //函数名： void Draw_BMP(uint8 x,uint8 y)
    509          //功能描述：显示BMP图片128×64
    510          //参数：起始点坐标(x,y),x的范围0～127，y为页的范围0～7
    511          //返回：无
    512          //==============================================================

   \                                 In section .text, align 2, keep-with-next
    513          void Draw_BMP(uint8 x0,uint8 y0,uint8 x1,uint8 y1,uint8 bmp[])
    514          {
   \                     Draw_BMP: (+1)
   \   00000000   0xE92D 0x47F0      PUSH     {R4-R10,LR}
   \   00000004   0x0004             MOVS     R4,R0
   \   00000006   0x0015             MOVS     R5,R2
   \   00000008   0x001E             MOVS     R6,R3
    515            uint16 ii=0;
   \   0000000A   0x2700             MOVS     R7,#+0
    516            uint8 x,y;
    517          
    518            if(y1%8==0) y=y1/8;
   \   0000000C   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   0000000E   0x2008             MOVS     R0,#+8
   \   00000010   0xFB96 0xF2F0      SDIV     R2,R6,R0
   \   00000014   0xFB02 0x6210      MLS      R2,R2,R0,R6
   \   00000018   0x2A00             CMP      R2,#+0
   \   0000001A   0xD104             BNE.N    ??Draw_BMP_0
   \   0000001C   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   0000001E   0x2008             MOVS     R0,#+8
   \   00000020   0xFB96 0xFAF0      SDIV     R10,R6,R0
   \   00000024   0xE005             B.N      ??Draw_BMP_1
    519            else y=y1/8+1;
   \                     ??Draw_BMP_0: (+1)
   \   00000026   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000028   0x2008             MOVS     R0,#+8
   \   0000002A   0xFB96 0xF0F0      SDIV     R0,R6,R0
   \   0000002E   0xF110 0x0A01      ADDS     R10,R0,#+1
    520          	for(y=y0;y<=y1;y++)
   \                     ??Draw_BMP_1: (+1)
   \   00000032   0x468A             MOV      R10,R1
   \   00000034   0xF8DD 0x8020      LDR      R8,[SP, #+32]
   \   00000038   0xE00E             B.N      ??Draw_BMP_2
    521          	{
    522          		OLED_Set_Pos(x0,y);
    523              for(x=x0;x<x1;x++)
    524          	    {
    525          	    	OLED_WrDat(bmp[ii++]);
   \                     ??Draw_BMP_3: (+1)
   \   0000003A   0xB2BF             UXTH     R7,R7            ;; ZeroExt  R7,R7,#+16,#+16
   \   0000003C   0xF817 0x0008      LDRB     R0,[R7, R8]
   \   00000040   0x.... 0x....      BL       OLED_WrDat
   \   00000044   0x1C7F             ADDS     R7,R7,#+1
    526          	    }
   \   00000046   0xF119 0x0901      ADDS     R9,R9,#+1
   \                     ??Draw_BMP_4: (+1)
   \   0000004A   0xFA5F 0xF989      UXTB     R9,R9            ;; ZeroExt  R9,R9,#+24,#+24
   \   0000004E   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000050   0x45A9             CMP      R9,R5
   \   00000052   0xD3F2             BCC.N    ??Draw_BMP_3
   \   00000054   0xF11A 0x0A01      ADDS     R10,R10,#+1
   \                     ??Draw_BMP_2: (+1)
   \   00000058   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   0000005A   0xFA5F 0xFA8A      UXTB     R10,R10          ;; ZeroExt  R10,R10,#+24,#+24
   \   0000005E   0x4556             CMP      R6,R10
   \   00000060   0xD307             BCC.N    ??Draw_BMP_5
   \   00000062   0x4651             MOV      R1,R10
   \   00000064   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000066   0x0020             MOVS     R0,R4
   \   00000068   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000006A   0x.... 0x....      BL       OLED_Set_Pos
   \   0000006E   0x46A1             MOV      R9,R4
   \   00000070   0xE7EB             B.N      ??Draw_BMP_4
    527          	}
    528          }
   \                     ??Draw_BMP_5: (+1)
   \   00000072   0xE8BD 0x87F0      POP      {R4-R10,PC}      ;; return
    529          
    530          
    531          
    532          /*
    533          函数功能：OLED显示一行CCD图像
    534          形参：y0为起始行数(0～63)，y0为结束行数(0～63)，CCD_Data[]为CCD二值化后的数组
    535          返回值：无
    536          */

   \                                 In section .text, align 2, keep-with-next
    537          void OLED_Print_RowPic(uint8 y0, uint8 CCD_Data[])
    538           { 
   \                     OLED_Print_RowPic: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000D             MOVS     R5,R1
    539              uint8 i=0;
   \   00000006   0x2600             MOVS     R6,#+0
    540               for(i=0; i<128; i++) 
   \   00000008   0x2000             MOVS     R0,#+0
   \   0000000A   0x0006             MOVS     R6,R0
   \   0000000C   0xE00A             B.N      ??OLED_Print_RowPic_0
    541                 if(CCD_Data[i]==0)
   \                     ??OLED_Print_RowPic_1: (+1)
   \   0000000E   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000010   0x5D70             LDRB     R0,[R6, R5]
   \   00000012   0x2800             CMP      R0,#+0
   \   00000014   0xD105             BNE.N    ??OLED_Print_RowPic_2
    542                  OLED_PutPixel(i,y0); 
   \   00000016   0x0021             MOVS     R1,R4
   \   00000018   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000001A   0x0030             MOVS     R0,R6
   \   0000001C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000001E   0x.... 0x....      BL       OLED_PutPixel
   \                     ??OLED_Print_RowPic_2: (+1)
   \   00000022   0x1C76             ADDS     R6,R6,#+1
   \                     ??OLED_Print_RowPic_0: (+1)
   \   00000024   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000026   0x2E80             CMP      R6,#+128
   \   00000028   0xDBF1             BLT.N    ??OLED_Print_RowPic_1
    543           }
   \   0000002A   0xBD70             POP      {R4-R6,PC}       ;; return
    544          
    545          
    546          /*
    547          函数功能：OLED显示四位int数据，可显示正负
    548          形参：
    549          返回值：无
    550          */

   \                                 In section .text, align 2, keep-with-next
    551          void OLED_Print_Int(uint8 x0, uint8 y0, int Data)
    552          {
   \                     OLED_Print_Int: (+1)
   \   00000000   0xE92D 0x43F8      PUSH     {R3-R9,LR}
   \   00000004   0x0004             MOVS     R4,R0
   \   00000006   0x000D             MOVS     R5,R1
   \   00000008   0x0016             MOVS     R6,R2
    553            uint8 ge,shi,bai,qian;
    554            if( Data<0 )
   \   0000000A   0x2E00             CMP      R6,#+0
   \   0000000C   0xD508             BPL.N    ??OLED_Print_Int_0
    555             {
    556               OLED_P6x8Str(x0,y0,"-");
   \   0000000E   0x....             ADR.N    R2,??DataTable5  ;; "-"
   \   00000010   0x0029             MOVS     R1,R5
   \   00000012   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000014   0x0020             MOVS     R0,R4
   \   00000016   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000018   0x.... 0x....      BL       OLED_P6x8Str
    557               Data = -Data;
   \   0000001C   0x4276             RSBS     R6,R6,#+0
   \   0000001E   0xE006             B.N      ??OLED_Print_Int_1
    558             }
    559            else
    560              OLED_P6x8Str(x0,y0,"+");
   \                     ??OLED_Print_Int_0: (+1)
   \   00000020   0x....             ADR.N    R2,??DataTable5_1  ;; "+"
   \   00000022   0x0029             MOVS     R1,R5
   \   00000024   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000026   0x0020             MOVS     R0,R4
   \   00000028   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000002A   0x.... 0x....      BL       OLED_P6x8Str
    561            
    562            ge = Data%10;
   \                     ??OLED_Print_Int_1: (+1)
   \   0000002E   0x200A             MOVS     R0,#+10
   \   00000030   0xFB96 0xF1F0      SDIV     R1,R6,R0
   \   00000034   0xFB00 0x6711      MLS      R7,R0,R1,R6
    563            shi = (Data%100)/10;
   \   00000038   0x2064             MOVS     R0,#+100
   \   0000003A   0xFB96 0xF1F0      SDIV     R1,R6,R0
   \   0000003E   0xFB00 0x6011      MLS      R0,R0,R1,R6
   \   00000042   0x210A             MOVS     R1,#+10
   \   00000044   0xFB90 0xF8F1      SDIV     R8,R0,R1
    564            bai = (Data%1000)/100;
   \   00000048   0xF44F 0x707A      MOV      R0,#+1000
   \   0000004C   0xFB96 0xF1F0      SDIV     R1,R6,R0
   \   00000050   0xFB00 0x6011      MLS      R0,R0,R1,R6
   \   00000054   0x2164             MOVS     R1,#+100
   \   00000056   0xFB90 0xF9F1      SDIV     R9,R0,R1
    565            qian = (Data%10000)/1000;
   \   0000005A   0xF242 0x7010      MOVW     R0,#+10000
   \   0000005E   0xFB96 0xF1F0      SDIV     R1,R6,R0
   \   00000062   0xFB00 0x6011      MLS      R0,R0,R1,R6
   \   00000066   0xF44F 0x717A      MOV      R1,#+1000
   \   0000006A   0xFB90 0xF0F1      SDIV     R0,R0,R1
    566            
    567            if(qian!=0)
   \   0000006E   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000070   0x2800             CMP      R0,#+0
   \   00000072   0xD027             BEQ.N    ??OLED_Print_Int_2
    568             {
    569               OLED_6x8Char(x0+6,y0,qian+48); OLED_6x8Char(x0+12,y0,bai+48);
   \   00000074   0xF110 0x0230      ADDS     R2,R0,#+48
   \   00000078   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   0000007A   0x0029             MOVS     R1,R5
   \   0000007C   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000007E   0x1DA0             ADDS     R0,R4,#+6
   \   00000080   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000082   0x.... 0x....      BL       OLED_6x8Char
   \   00000086   0xF119 0x0230      ADDS     R2,R9,#+48
   \   0000008A   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   0000008C   0x0029             MOVS     R1,R5
   \   0000008E   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000090   0xF114 0x000C      ADDS     R0,R4,#+12
   \   00000094   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000096   0x.... 0x....      BL       OLED_6x8Char
    570               OLED_6x8Char(x0+18,y0,shi+48); OLED_6x8Char(x0+24,y0,ge+48);
   \   0000009A   0xF118 0x0230      ADDS     R2,R8,#+48
   \   0000009E   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   000000A0   0x0029             MOVS     R1,R5
   \   000000A2   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000000A4   0xF114 0x0012      ADDS     R0,R4,#+18
   \   000000A8   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000AA   0x.... 0x....      BL       OLED_6x8Char
   \   000000AE   0xF117 0x0230      ADDS     R2,R7,#+48
   \   000000B2   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   000000B4   0x0029             MOVS     R1,R5
   \   000000B6   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000000B8   0xF114 0x0018      ADDS     R0,R4,#+24
   \   000000BC   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000BE   0x.... 0x....      BL       OLED_6x8Char
   \   000000C2   0xE04F             B.N      ??OLED_Print_Int_3
    571             }
    572            else if(bai!=0)
   \                     ??OLED_Print_Int_2: (+1)
   \   000000C4   0xFA5F 0xF989      UXTB     R9,R9            ;; ZeroExt  R9,R9,#+24,#+24
   \   000000C8   0xF1B9 0x0F00      CMP      R9,#+0
   \   000000CC   0xD01D             BEQ.N    ??OLED_Print_Int_4
    573             {
    574               OLED_6x8Char(x0+6,y0,bai+48);  OLED_6x8Char(x0+12,y0,shi+48);
   \   000000CE   0xF119 0x0230      ADDS     R2,R9,#+48
   \   000000D2   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   000000D4   0x0029             MOVS     R1,R5
   \   000000D6   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000000D8   0x1DA0             ADDS     R0,R4,#+6
   \   000000DA   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000DC   0x.... 0x....      BL       OLED_6x8Char
   \   000000E0   0xF118 0x0230      ADDS     R2,R8,#+48
   \   000000E4   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   000000E6   0x0029             MOVS     R1,R5
   \   000000E8   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000000EA   0xF114 0x000C      ADDS     R0,R4,#+12
   \   000000EE   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000F0   0x.... 0x....      BL       OLED_6x8Char
    575               OLED_6x8Char(x0+18,y0,ge+48);
   \   000000F4   0xF117 0x0230      ADDS     R2,R7,#+48
   \   000000F8   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   000000FA   0x0029             MOVS     R1,R5
   \   000000FC   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000000FE   0xF114 0x0012      ADDS     R0,R4,#+18
   \   00000102   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000104   0x.... 0x....      BL       OLED_6x8Char
   \   00000108   0xE02C             B.N      ??OLED_Print_Int_3
    576             }
    577            else if(shi!=0)
   \                     ??OLED_Print_Int_4: (+1)
   \   0000010A   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   0000010E   0xF1B8 0x0F00      CMP      R8,#+0
   \   00000112   0xD013             BEQ.N    ??OLED_Print_Int_5
    578             {
    579               OLED_6x8Char(x0+6,y0,shi+48); OLED_6x8Char(x0+12,y0,ge+48);
   \   00000114   0xF118 0x0230      ADDS     R2,R8,#+48
   \   00000118   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   0000011A   0x0029             MOVS     R1,R5
   \   0000011C   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000011E   0x1DA0             ADDS     R0,R4,#+6
   \   00000120   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000122   0x.... 0x....      BL       OLED_6x8Char
   \   00000126   0xF117 0x0230      ADDS     R2,R7,#+48
   \   0000012A   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   0000012C   0x0029             MOVS     R1,R5
   \   0000012E   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000130   0xF114 0x000C      ADDS     R0,R4,#+12
   \   00000134   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000136   0x.... 0x....      BL       OLED_6x8Char
   \   0000013A   0xE013             B.N      ??OLED_Print_Int_3
    580             }
    581            else if(ge!=0)
   \                     ??OLED_Print_Int_5: (+1)
   \   0000013C   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   0000013E   0x2F00             CMP      R7,#+0
   \   00000140   0xD009             BEQ.N    ??OLED_Print_Int_6
    582               OLED_6x8Char(x0+6,y0,ge+48);
   \   00000142   0xF117 0x0230      ADDS     R2,R7,#+48
   \   00000146   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   00000148   0x0029             MOVS     R1,R5
   \   0000014A   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000014C   0x1DA0             ADDS     R0,R4,#+6
   \   0000014E   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000150   0x.... 0x....      BL       OLED_6x8Char
   \   00000154   0xE006             B.N      ??OLED_Print_Int_3
    583            else
    584               OLED_6x8Char(x0+6,y0,48);
   \                     ??OLED_Print_Int_6: (+1)
   \   00000156   0x2230             MOVS     R2,#+48
   \   00000158   0x0029             MOVS     R1,R5
   \   0000015A   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000015C   0x1DA0             ADDS     R0,R4,#+6
   \   0000015E   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000160   0x.... 0x....      BL       OLED_6x8Char
    585          }
   \                     ??OLED_Print_Int_3: (+1)
   \   00000164   0xE8BD 0x83F1      POP      {R0,R4-R9,PC}    ;; return
    586          
    587          
    588          /*
    589          函数功能：OLED显示四位int数据，可显示正负,以及一位浮点
    590          形参：
    591          返回值：无
    592          */

   \                                 In section .text, align 2, keep-with-next
    593          void OLED_Print_Float(uint8 x0, uint8 y0, float Data)
    594          {
   \                     OLED_Print_Float: (+1)
   \   00000000   0xE92D 0x4FF8      PUSH     {R3-R11,LR}
   \   00000004   0x0004             MOVS     R4,R0
   \   00000006   0x000D             MOVS     R5,R1
   \   00000008   0x4693             MOV      R11,R2
    595            uint8 ge,shi,bai,qian,decimus,hundth;
    596            if( Data<0 )
   \   0000000A   0x4658             MOV      R0,R11
   \   0000000C   0x2100             MOVS     R1,#+0
   \   0000000E   0x.... 0x....      BL       __aeabi_cfcmple
   \   00000012   0xD209             BCS.N    ??OLED_Print_Float_0
    597             {
    598               OLED_P6x8Str(x0,y0,"-");
   \   00000014   0x....             ADR.N    R2,??DataTable6  ;; "-"
   \   00000016   0x0029             MOVS     R1,R5
   \   00000018   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000001A   0x0020             MOVS     R0,R4
   \   0000001C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000001E   0x.... 0x....      BL       OLED_P6x8Str
    599               Data = -Data;
   \   00000022   0xF09B 0x4B00      EORS     R11,R11,#0x80000000
   \   00000026   0xE006             B.N      ??OLED_Print_Float_1
    600             }
    601            else
    602              OLED_P6x8Str(x0,y0,"+");
   \                     ??OLED_Print_Float_0: (+1)
   \   00000028   0x....             ADR.N    R2,??DataTable6_1  ;; "+"
   \   0000002A   0x0029             MOVS     R1,R5
   \   0000002C   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000002E   0x0020             MOVS     R0,R4
   \   00000030   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000032   0x.... 0x....      BL       OLED_P6x8Str
    603            
    604            ge = ( (uint8) (Data) )%10;
   \                     ??OLED_Print_Float_1: (+1)
   \   00000036   0x4658             MOV      R0,R11
   \   00000038   0x.... 0x....      BL       __aeabi_f2iz
   \   0000003C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000003E   0x210A             MOVS     R1,#+10
   \   00000040   0xFB90 0xF2F1      SDIV     R2,R0,R1
   \   00000044   0xFB01 0x0612      MLS      R6,R1,R2,R0
    605            shi =( (uint8) (Data) ) %100/10;
   \   00000048   0x4658             MOV      R0,R11
   \   0000004A   0x.... 0x....      BL       __aeabi_f2iz
   \   0000004E   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000050   0x2164             MOVS     R1,#+100
   \   00000052   0xFB90 0xF2F1      SDIV     R2,R0,R1
   \   00000056   0xFB01 0x0012      MLS      R0,R1,R2,R0
   \   0000005A   0x210A             MOVS     R1,#+10
   \   0000005C   0xFB90 0xF7F1      SDIV     R7,R0,R1
    606            bai =( (uint8) (Data) ) %1000/100;
   \   00000060   0x4658             MOV      R0,R11
   \   00000062   0x.... 0x....      BL       __aeabi_f2iz
   \   00000066   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000068   0xF44F 0x717A      MOV      R1,#+1000
   \   0000006C   0xFB90 0xF2F1      SDIV     R2,R0,R1
   \   00000070   0xFB01 0x0012      MLS      R0,R1,R2,R0
   \   00000074   0x2164             MOVS     R1,#+100
   \   00000076   0xFB90 0xF8F1      SDIV     R8,R0,R1
    607            qian = ( (uint8) (Data) ) %10000/1000;
   \   0000007A   0x4658             MOV      R0,R11
   \   0000007C   0x.... 0x....      BL       __aeabi_f2iz
   \   00000080   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000082   0xF242 0x7110      MOVW     R1,#+10000
   \   00000086   0xFB90 0xF2F1      SDIV     R2,R0,R1
   \   0000008A   0xFB01 0x0012      MLS      R0,R1,R2,R0
   \   0000008E   0xF44F 0x717A      MOV      R1,#+1000
   \   00000092   0xFB90 0xF9F1      SDIV     R9,R0,R1
    608            decimus = ( (uint8) (Data*10) )%10;
   \   00000096   0x.... 0x....      LDR.W    R0,??DataTable8_6  ;; 0x41200000
   \   0000009A   0x4659             MOV      R1,R11
   \   0000009C   0x.... 0x....      BL       __aeabi_fmul
   \   000000A0   0x.... 0x....      BL       __aeabi_f2iz
   \   000000A4   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000A6   0x210A             MOVS     R1,#+10
   \   000000A8   0xFB90 0xF2F1      SDIV     R2,R0,R1
   \   000000AC   0xFB01 0x0A12      MLS      R10,R1,R2,R0
    609            hundth = (uint8) (Data*100)%10;
   \   000000B0   0x.... 0x....      LDR.W    R0,??DataTable8_7  ;; 0x42c80000
   \   000000B4   0x4659             MOV      R1,R11
   \   000000B6   0x.... 0x....      BL       __aeabi_fmul
   \   000000BA   0x.... 0x....      BL       __aeabi_f2iz
   \   000000BE   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000C0   0x210A             MOVS     R1,#+10
   \   000000C2   0xFB90 0xF2F1      SDIV     R2,R0,R1
   \   000000C6   0xFB01 0x0B12      MLS      R11,R1,R2,R0
    610            if(qian!=0)
   \   000000CA   0xFA5F 0xF989      UXTB     R9,R9            ;; ZeroExt  R9,R9,#+24,#+24
   \   000000CE   0xF1B9 0x0F00      CMP      R9,#+0
   \   000000D2   0xD043             BEQ.N    ??OLED_Print_Float_2
    611             {
    612               OLED_6x8Char(x0+6,y0,qian+48); OLED_6x8Char(x0+12,y0,bai+48);
   \   000000D4   0xF119 0x0230      ADDS     R2,R9,#+48
   \   000000D8   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   000000DA   0x0029             MOVS     R1,R5
   \   000000DC   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000000DE   0x1DA0             ADDS     R0,R4,#+6
   \   000000E0   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000E2   0x.... 0x....      BL       OLED_6x8Char
   \   000000E6   0xF118 0x0230      ADDS     R2,R8,#+48
   \   000000EA   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   000000EC   0x0029             MOVS     R1,R5
   \   000000EE   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000000F0   0xF114 0x000C      ADDS     R0,R4,#+12
   \   000000F4   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000F6   0x.... 0x....      BL       OLED_6x8Char
    613               OLED_6x8Char(x0+18,y0,shi+48); OLED_6x8Char(x0+24,y0,ge+48);
   \   000000FA   0xF117 0x0230      ADDS     R2,R7,#+48
   \   000000FE   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   00000100   0x0029             MOVS     R1,R5
   \   00000102   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000104   0xF114 0x0012      ADDS     R0,R4,#+18
   \   00000108   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000010A   0x.... 0x....      BL       OLED_6x8Char
   \   0000010E   0xF116 0x0230      ADDS     R2,R6,#+48
   \   00000112   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   00000114   0x0029             MOVS     R1,R5
   \   00000116   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000118   0xF114 0x0018      ADDS     R0,R4,#+24
   \   0000011C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000011E   0x.... 0x....      BL       OLED_6x8Char
    614               OLED_P6x8Str(x0+30,y0,".");    OLED_6x8Char(x0+36,y0,decimus+48);
   \   00000122   0x....             ADR.N    R2,??DataTable6_2  ;; "."
   \   00000124   0x0029             MOVS     R1,R5
   \   00000126   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000128   0xF114 0x001E      ADDS     R0,R4,#+30
   \   0000012C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000012E   0x.... 0x....      BL       OLED_P6x8Str
   \   00000132   0xF11A 0x0230      ADDS     R2,R10,#+48
   \   00000136   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   00000138   0x0029             MOVS     R1,R5
   \   0000013A   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000013C   0xF114 0x0024      ADDS     R0,R4,#+36
   \   00000140   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000142   0x.... 0x....      BL       OLED_6x8Char
    615               OLED_6x8Char(x0+42,y0,hundth+48);
   \   00000146   0xF11B 0x0230      ADDS     R2,R11,#+48
   \   0000014A   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   0000014C   0x0029             MOVS     R1,R5
   \   0000014E   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000150   0xF114 0x002A      ADDS     R0,R4,#+42
   \   00000154   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000156   0x.... 0x....      BL       OLED_6x8Char
   \   0000015A   0xE0F3             B.N      ??OLED_Print_Float_3
    616             }
    617            else if(bai!=0)
   \                     ??OLED_Print_Float_2: (+1)
   \   0000015C   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   00000160   0xF1B8 0x0F00      CMP      R8,#+0
   \   00000164   0xD039             BEQ.N    ??OLED_Print_Float_4
    618             {
    619               OLED_6x8Char(x0+6,y0,bai+48);  OLED_6x8Char(x0+12,y0,shi+48);
   \   00000166   0xF118 0x0230      ADDS     R2,R8,#+48
   \   0000016A   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   0000016C   0x0029             MOVS     R1,R5
   \   0000016E   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000170   0x1DA0             ADDS     R0,R4,#+6
   \   00000172   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000174   0x.... 0x....      BL       OLED_6x8Char
   \   00000178   0xF117 0x0230      ADDS     R2,R7,#+48
   \   0000017C   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   0000017E   0x0029             MOVS     R1,R5
   \   00000180   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000182   0xF114 0x000C      ADDS     R0,R4,#+12
   \   00000186   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000188   0x.... 0x....      BL       OLED_6x8Char
    620               OLED_6x8Char(x0+18,y0,ge+48);   
   \   0000018C   0xF116 0x0230      ADDS     R2,R6,#+48
   \   00000190   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   00000192   0x0029             MOVS     R1,R5
   \   00000194   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000196   0xF114 0x0012      ADDS     R0,R4,#+18
   \   0000019A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000019C   0x.... 0x....      BL       OLED_6x8Char
    621               OLED_P6x8Str(x0+24,y0,".");    OLED_6x8Char(x0+30,y0,decimus+48);
   \   000001A0   0x....             ADR.N    R2,??DataTable6_2  ;; "."
   \   000001A2   0x0029             MOVS     R1,R5
   \   000001A4   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000001A6   0xF114 0x0018      ADDS     R0,R4,#+24
   \   000001AA   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000001AC   0x.... 0x....      BL       OLED_P6x8Str
   \   000001B0   0xF11A 0x0230      ADDS     R2,R10,#+48
   \   000001B4   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   000001B6   0x0029             MOVS     R1,R5
   \   000001B8   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000001BA   0xF114 0x001E      ADDS     R0,R4,#+30
   \   000001BE   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000001C0   0x.... 0x....      BL       OLED_6x8Char
    622               OLED_6x8Char(x0+36,y0,hundth+48);
   \   000001C4   0xF11B 0x0230      ADDS     R2,R11,#+48
   \   000001C8   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   000001CA   0x0029             MOVS     R1,R5
   \   000001CC   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000001CE   0xF114 0x0024      ADDS     R0,R4,#+36
   \   000001D2   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000001D4   0x.... 0x....      BL       OLED_6x8Char
   \   000001D8   0xE0B4             B.N      ??OLED_Print_Float_3
    623             }
    624            else if(shi!=0)
   \                     ??OLED_Print_Float_4: (+1)
   \   000001DA   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   000001DC   0x2F00             CMP      R7,#+0
   \   000001DE   0xD02F             BEQ.N    ??OLED_Print_Float_5
    625             {
    626               OLED_6x8Char(x0+6,y0,shi+48);  OLED_6x8Char(x0+12,y0,ge+48);
   \   000001E0   0xF117 0x0230      ADDS     R2,R7,#+48
   \   000001E4   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   000001E6   0x0029             MOVS     R1,R5
   \   000001E8   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000001EA   0x1DA0             ADDS     R0,R4,#+6
   \   000001EC   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000001EE   0x.... 0x....      BL       OLED_6x8Char
   \   000001F2   0xF116 0x0230      ADDS     R2,R6,#+48
   \   000001F6   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   000001F8   0x0029             MOVS     R1,R5
   \   000001FA   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000001FC   0xF114 0x000C      ADDS     R0,R4,#+12
   \   00000200   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000202   0x.... 0x....      BL       OLED_6x8Char
    627               OLED_P6x8Str(x0+18,y0,".");    OLED_6x8Char(x0+24,y0,decimus+48);
   \   00000206   0x....             ADR.N    R2,??DataTable6_2  ;; "."
   \   00000208   0x0029             MOVS     R1,R5
   \   0000020A   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000020C   0xF114 0x0012      ADDS     R0,R4,#+18
   \   00000210   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000212   0x.... 0x....      BL       OLED_P6x8Str
   \   00000216   0xF11A 0x0230      ADDS     R2,R10,#+48
   \   0000021A   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   0000021C   0x0029             MOVS     R1,R5
   \   0000021E   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000220   0xF114 0x0018      ADDS     R0,R4,#+24
   \   00000224   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000226   0x.... 0x....      BL       OLED_6x8Char
    628               OLED_6x8Char(x0+30,y0,hundth+48);
   \   0000022A   0xF11B 0x0230      ADDS     R2,R11,#+48
   \   0000022E   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   00000230   0x0029             MOVS     R1,R5
   \   00000232   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000234   0xF114 0x001E      ADDS     R0,R4,#+30
   \   00000238   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000023A   0x.... 0x....      BL       OLED_6x8Char
   \   0000023E   0xE081             B.N      ??OLED_Print_Float_3
    629             }
    630            else if(ge!=0)
   \                     ??OLED_Print_Float_5: (+1)
   \   00000240   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000242   0x2E00             CMP      R6,#+0
   \   00000244   0xD025             BEQ.N    ??OLED_Print_Float_6
    631             {
    632               OLED_6x8Char(x0+6,y0,ge+48);   OLED_P6x8Str(x0+12,y0,".");   
   \   00000246   0xF116 0x0230      ADDS     R2,R6,#+48
   \   0000024A   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   0000024C   0x0029             MOVS     R1,R5
   \   0000024E   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000250   0x1DA0             ADDS     R0,R4,#+6
   \   00000252   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000254   0x.... 0x....      BL       OLED_6x8Char
   \   00000258   0x....             ADR.N    R2,??DataTable6_2  ;; "."
   \   0000025A   0x0029             MOVS     R1,R5
   \   0000025C   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000025E   0xF114 0x000C      ADDS     R0,R4,#+12
   \   00000262   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000264   0x.... 0x....      BL       OLED_P6x8Str
    633               OLED_6x8Char(x0+18,y0,decimus+48); OLED_6x8Char(x0+24,y0,hundth+48);
   \   00000268   0xF11A 0x0230      ADDS     R2,R10,#+48
   \   0000026C   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   0000026E   0x0029             MOVS     R1,R5
   \   00000270   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000272   0xF114 0x0012      ADDS     R0,R4,#+18
   \   00000276   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000278   0x.... 0x....      BL       OLED_6x8Char
   \   0000027C   0xF11B 0x0230      ADDS     R2,R11,#+48
   \   00000280   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   00000282   0x0029             MOVS     R1,R5
   \   00000284   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000286   0xF114 0x0018      ADDS     R0,R4,#+24
   \   0000028A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000028C   0x.... 0x....      BL       OLED_6x8Char
   \   00000290   0xE058             B.N      ??OLED_Print_Float_3
    634             }
    635            else if(decimus!=0)
   \                     ??OLED_Print_Float_6: (+1)
   \   00000292   0xFA5F 0xFA8A      UXTB     R10,R10          ;; ZeroExt  R10,R10,#+24,#+24
   \   00000296   0xF1BA 0x0F00      CMP      R10,#+0
   \   0000029A   0xD023             BEQ.N    ??OLED_Print_Float_7
    636             {
    637               OLED_6x8Char(x0+6,y0,48);
   \   0000029C   0x2230             MOVS     R2,#+48
   \   0000029E   0x0029             MOVS     R1,R5
   \   000002A0   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000002A2   0x1DA0             ADDS     R0,R4,#+6
   \   000002A4   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000002A6   0x.... 0x....      BL       OLED_6x8Char
    638               OLED_P6x8Str(x0+12,y0,".");    OLED_6x8Char(x0+18,y0,decimus+48);
   \   000002AA   0x....             ADR.N    R2,??DataTable6_2  ;; "."
   \   000002AC   0x0029             MOVS     R1,R5
   \   000002AE   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000002B0   0xF114 0x000C      ADDS     R0,R4,#+12
   \   000002B4   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000002B6   0x.... 0x....      BL       OLED_P6x8Str
   \   000002BA   0xF11A 0x0230      ADDS     R2,R10,#+48
   \   000002BE   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   000002C0   0x0029             MOVS     R1,R5
   \   000002C2   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000002C4   0xF114 0x0012      ADDS     R0,R4,#+18
   \   000002C8   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000002CA   0x.... 0x....      BL       OLED_6x8Char
    639               OLED_6x8Char(x0+24,y0,hundth+48);     
   \   000002CE   0xF11B 0x0230      ADDS     R2,R11,#+48
   \   000002D2   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   000002D4   0x0029             MOVS     R1,R5
   \   000002D6   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000002D8   0xF114 0x0018      ADDS     R0,R4,#+24
   \   000002DC   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000002DE   0x.... 0x....      BL       OLED_6x8Char
   \   000002E2   0xE02F             B.N      ??OLED_Print_Float_3
    640             }
    641            else if(hundth!=0)
   \                     ??OLED_Print_Float_7: (+1)
   \   000002E4   0xFA5F 0xFB8B      UXTB     R11,R11          ;; ZeroExt  R11,R11,#+24,#+24
   \   000002E8   0xF1BB 0x0F00      CMP      R11,#+0
   \   000002EC   0xD023             BEQ.N    ??OLED_Print_Float_8
    642             {
    643               OLED_6x8Char(x0+6,y0,48);
   \   000002EE   0x2230             MOVS     R2,#+48
   \   000002F0   0x0029             MOVS     R1,R5
   \   000002F2   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000002F4   0x1DA0             ADDS     R0,R4,#+6
   \   000002F6   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000002F8   0x.... 0x....      BL       OLED_6x8Char
    644               OLED_P6x8Str(x0+12,y0,".");    OLED_6x8Char(x0+18,y0,decimus+48);
   \   000002FC   0x....             ADR.N    R2,??DataTable6_2  ;; "."
   \   000002FE   0x0029             MOVS     R1,R5
   \   00000300   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000302   0xF114 0x000C      ADDS     R0,R4,#+12
   \   00000306   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000308   0x.... 0x....      BL       OLED_P6x8Str
   \   0000030C   0xF11A 0x0230      ADDS     R2,R10,#+48
   \   00000310   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   00000312   0x0029             MOVS     R1,R5
   \   00000314   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000316   0xF114 0x0012      ADDS     R0,R4,#+18
   \   0000031A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000031C   0x.... 0x....      BL       OLED_6x8Char
    645               OLED_6x8Char(x0+24,y0,hundth+48);     
   \   00000320   0xF11B 0x0230      ADDS     R2,R11,#+48
   \   00000324   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   00000326   0x0029             MOVS     R1,R5
   \   00000328   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000032A   0xF114 0x0018      ADDS     R0,R4,#+24
   \   0000032E   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000330   0x.... 0x....      BL       OLED_6x8Char
   \   00000334   0xE006             B.N      ??OLED_Print_Float_3
    646             }
    647            else  
    648              OLED_6x8Char(x0+6,y0,48);
   \                     ??OLED_Print_Float_8: (+1)
   \   00000336   0x2230             MOVS     R2,#+48
   \   00000338   0x0029             MOVS     R1,R5
   \   0000033A   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000033C   0x1DA0             ADDS     R0,R4,#+6
   \   0000033E   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000340   0x.... 0x....      BL       OLED_6x8Char
    649          }
   \                     ??OLED_Print_Float_3: (+1)
   \   00000344   0xE8BD 0x8FF1      POP      {R0,R4-R11,PC}   ;; return
    650          
    651          
    652          extern int Flag_Island_Confirm;
    653          extern uint8 final;
    654          extern uint8 Flag_Island;
    655          extern int Ahead_TurnError; 
    656          extern uint8 Dir_IslandTurn;
    657          extern uint8 SendCommand;
    658          /*
    659          函数功能：主循环OLED显示
    660          返回值：无
    661          */

   \                                 In section .text, align 2, keep-with-next
    662           void OLED_while(uint8 Page_Slt)
    663           {
   \                     OLED_while: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    664                
    665              //清屏
    666              OLED_Fill(0x00);
   \   00000002   0x2000             MOVS     R0,#+0
   \   00000004   0x.... 0x....      BL       OLED_Fill
    667              
    668              //----不可调参界面显示------
    669              if(ShowOrDebug == Show)
   \   00000008   0x.... 0x....      LDR.W    R0,??DataTable8_8
   \   0000000C   0x7800             LDRB     R0,[R0, #+0]
   \   0000000E   0x2800             CMP      R0,#+0
   \   00000010   0xF040 0x8190      BNE.W    ??OLED_while_0
    670              {
    671                  OLED_P6x8Str(6,0,"Show:"); 
   \   00000014   0x.... 0x....      LDR.W    R2,??DataTable8_9
   \   00000018   0x2100             MOVS     R1,#+0
   \   0000001A   0x2006             MOVS     R0,#+6
   \   0000001C   0x.... 0x....      BL       OLED_P6x8Str
    672          
    673                  switch(Show_Page_Slt)
   \   00000020   0x.... 0x....      LDR.W    R0,??DataTable8_10
   \   00000024   0xF990 0x0000      LDRSB    R0,[R0, #+0]
   \   00000028   0x2801             CMP      R0,#+1
   \   0000002A   0xD009             BEQ.N    ??OLED_while_1
   \   0000002C   0xF0C0 0x8181      BCC.W    ??OLED_while_2
   \   00000030   0x2803             CMP      R0,#+3
   \   00000032   0xF000 0x80C7      BEQ.W    ??OLED_while_3
   \   00000036   0xD367             BCC.N    ??OLED_while_4
   \   00000038   0x2804             CMP      R0,#+4
   \   0000003A   0xF000 0x8160      BEQ.W    ??OLED_while_5
   \   0000003E   0xE178             B.N      ??OLED_while_2
    674                  {
    675                    
    676                    //------第一页显示---------
    677                     case 1:
    678                     {
    679                         OLED_P6x8Str(6,1,"Peak_Normal:"); 
   \                     ??OLED_while_1: (+1)
   \   00000040   0x.... 0x....      LDR.W    R2,??DataTable8_11
   \   00000044   0x2101             MOVS     R1,#+1
   \   00000046   0x2006             MOVS     R0,#+6
   \   00000048   0x.... 0x....      BL       OLED_P6x8Str
    680          
    681                         OLED_P6x8Str(15,3,"pk0=");     OLED_Print_Int(40,3,peak[0]); 
   \   0000004C   0x.... 0x....      LDR.W    R2,??DataTable8_12
   \   00000050   0x2103             MOVS     R1,#+3
   \   00000052   0x200F             MOVS     R0,#+15
   \   00000054   0x.... 0x....      BL       OLED_P6x8Str
   \   00000058   0x.... 0x....      LDR.W    R0,??DataTable8_13
   \   0000005C   0x6802             LDR      R2,[R0, #+0]
   \   0000005E   0x2103             MOVS     R1,#+3
   \   00000060   0x2028             MOVS     R0,#+40
   \   00000062   0x.... 0x....      BL       OLED_Print_Int
    682                         OLED_P6x8Str(70,3,"pk1=");     OLED_Print_Int(95,3,peak[1]); 
   \   00000066   0x.... 0x....      LDR.W    R2,??DataTable8_14
   \   0000006A   0x2103             MOVS     R1,#+3
   \   0000006C   0x2046             MOVS     R0,#+70
   \   0000006E   0x.... 0x....      BL       OLED_P6x8Str
   \   00000072   0x.... 0x....      LDR.W    R0,??DataTable8_13
   \   00000076   0x6842             LDR      R2,[R0, #+4]
   \   00000078   0x2103             MOVS     R1,#+3
   \   0000007A   0x205F             MOVS     R0,#+95
   \   0000007C   0x.... 0x....      BL       OLED_Print_Int
    683                         OLED_P6x8Str(15,4,"pk2=");     OLED_Print_Int(40,4,peak[2]); 
   \   00000080   0x.... 0x....      LDR.W    R2,??DataTable8_15
   \   00000084   0x2104             MOVS     R1,#+4
   \   00000086   0x200F             MOVS     R0,#+15
   \   00000088   0x.... 0x....      BL       OLED_P6x8Str
   \   0000008C   0x....             LDR.N    R0,??DataTable8_13
   \   0000008E   0x6882             LDR      R2,[R0, #+8]
   \   00000090   0x2104             MOVS     R1,#+4
   \   00000092   0x2028             MOVS     R0,#+40
   \   00000094   0x.... 0x....      BL       OLED_Print_Int
    684                         OLED_P6x8Str(70,4,"pk3=");     OLED_Print_Int(95,4,peak[3]); 
   \   00000098   0x....             LDR.N    R2,??DataTable8_16
   \   0000009A   0x2104             MOVS     R1,#+4
   \   0000009C   0x2046             MOVS     R0,#+70
   \   0000009E   0x.... 0x....      BL       OLED_P6x8Str
   \   000000A2   0x....             LDR.N    R0,??DataTable8_13
   \   000000A4   0x68C2             LDR      R2,[R0, #+12]
   \   000000A6   0x2104             MOVS     R1,#+4
   \   000000A8   0x205F             MOVS     R0,#+95
   \   000000AA   0x.... 0x....      BL       OLED_Print_Int
    685                         OLED_P6x8Str(15,5,"pk4=");     OLED_Print_Int(40,5,peak[4]); 
   \   000000AE   0x....             LDR.N    R2,??DataTable8_17
   \   000000B0   0x2105             MOVS     R1,#+5
   \   000000B2   0x200F             MOVS     R0,#+15
   \   000000B4   0x.... 0x....      BL       OLED_P6x8Str
   \   000000B8   0x....             LDR.N    R0,??DataTable8_13
   \   000000BA   0x6902             LDR      R2,[R0, #+16]
   \   000000BC   0x2105             MOVS     R1,#+5
   \   000000BE   0x2028             MOVS     R0,#+40
   \   000000C0   0x.... 0x....      BL       OLED_Print_Int
    686                         OLED_P6x8Str(70,5,"pk5=");     OLED_Print_Int(95,5,peak[5]); 
   \   000000C4   0x....             LDR.N    R2,??DataTable8_18
   \   000000C6   0x2105             MOVS     R1,#+5
   \   000000C8   0x2046             MOVS     R0,#+70
   \   000000CA   0x.... 0x....      BL       OLED_P6x8Str
   \   000000CE   0x....             LDR.N    R0,??DataTable8_13
   \   000000D0   0x6942             LDR      R2,[R0, #+20]
   \   000000D2   0x2105             MOVS     R1,#+5
   \   000000D4   0x205F             MOVS     R0,#+95
   \   000000D6   0x.... 0x....      BL       OLED_Print_Int
    687                         OLED_P6x8Str(15,6,"pk6=");     OLED_Print_Int(40,6,peak[6]); 
   \   000000DA   0x....             LDR.N    R2,??DataTable8_19
   \   000000DC   0x2106             MOVS     R1,#+6
   \   000000DE   0x200F             MOVS     R0,#+15
   \   000000E0   0x.... 0x....      BL       OLED_P6x8Str
   \   000000E4   0x....             LDR.N    R0,??DataTable8_13
   \   000000E6   0x6982             LDR      R2,[R0, #+24]
   \   000000E8   0x2106             MOVS     R1,#+6
   \   000000EA   0x2028             MOVS     R0,#+40
   \   000000EC   0x.... 0x....      BL       OLED_Print_Int
    688                         OLED_P6x8Str(70,6,"pk7=");     OLED_Print_Int(95,6,peak[7]);
   \   000000F0   0x....             LDR.N    R2,??DataTable8_20
   \   000000F2   0x2106             MOVS     R1,#+6
   \   000000F4   0x2046             MOVS     R0,#+70
   \   000000F6   0x.... 0x....      BL       OLED_P6x8Str
   \   000000FA   0x....             LDR.N    R0,??DataTable8_13
   \   000000FC   0x69C2             LDR      R2,[R0, #+28]
   \   000000FE   0x2106             MOVS     R1,#+6
   \   00000100   0x205F             MOVS     R0,#+95
   \   00000102   0x.... 0x....      BL       OLED_Print_Int
    689                     }
    690                     break;
   \   00000106   0xE133             B.N      ??OLED_while_6
    691          
    692                     //------第二页显示---------               
    693                     case 2:
    694                     {
    695                         OLED_P6x8Str(6,1,"Peak_Real:"); 
   \                     ??OLED_while_4: (+1)
   \   00000108   0x....             LDR.N    R2,??DataTable8_21
   \   0000010A   0x2101             MOVS     R1,#+1
   \   0000010C   0x2006             MOVS     R0,#+6
   \   0000010E   0x.... 0x....      BL       OLED_P6x8Str
    696          
    697                         OLED_P6x8Str(15,3,"pk0=");     OLED_Print_Int(40,3,peak_real[0]); 
   \   00000112   0x....             LDR.N    R2,??DataTable8_12
   \   00000114   0x2103             MOVS     R1,#+3
   \   00000116   0x200F             MOVS     R0,#+15
   \   00000118   0x.... 0x....      BL       OLED_P6x8Str
   \   0000011C   0x....             LDR.N    R0,??DataTable8_22
   \   0000011E   0x7802             LDRB     R2,[R0, #+0]
   \   00000120   0x2103             MOVS     R1,#+3
   \   00000122   0x2028             MOVS     R0,#+40
   \   00000124   0x.... 0x....      BL       OLED_Print_Int
    698                         OLED_P6x8Str(70,3,"pk1=");     OLED_Print_Int(95,3,peak_real[1]); 
   \   00000128   0x....             LDR.N    R2,??DataTable8_14
   \   0000012A   0x2103             MOVS     R1,#+3
   \   0000012C   0x2046             MOVS     R0,#+70
   \   0000012E   0x.... 0x....      BL       OLED_P6x8Str
   \   00000132   0x....             LDR.N    R0,??DataTable8_22
   \   00000134   0x7842             LDRB     R2,[R0, #+1]
   \   00000136   0x2103             MOVS     R1,#+3
   \   00000138   0x205F             MOVS     R0,#+95
   \   0000013A   0x.... 0x....      BL       OLED_Print_Int
    699                         OLED_P6x8Str(15,4,"pk2=");     OLED_Print_Int(40,4,peak_real[2]); 
   \   0000013E   0x....             LDR.N    R2,??DataTable8_15
   \   00000140   0x2104             MOVS     R1,#+4
   \   00000142   0x200F             MOVS     R0,#+15
   \   00000144   0x.... 0x....      BL       OLED_P6x8Str
   \   00000148   0x....             LDR.N    R0,??DataTable8_22
   \   0000014A   0x7882             LDRB     R2,[R0, #+2]
   \   0000014C   0x2104             MOVS     R1,#+4
   \   0000014E   0x2028             MOVS     R0,#+40
   \   00000150   0x.... 0x....      BL       OLED_Print_Int
    700                         OLED_P6x8Str(70,4,"pk3=");     OLED_Print_Int(95,4,peak_real[3]); 
   \   00000154   0x....             LDR.N    R2,??DataTable8_16
   \   00000156   0x2104             MOVS     R1,#+4
   \   00000158   0x2046             MOVS     R0,#+70
   \   0000015A   0x.... 0x....      BL       OLED_P6x8Str
   \   0000015E   0x....             LDR.N    R0,??DataTable8_22
   \   00000160   0x78C2             LDRB     R2,[R0, #+3]
   \   00000162   0x2104             MOVS     R1,#+4
   \   00000164   0x205F             MOVS     R0,#+95
   \   00000166   0x.... 0x....      BL       OLED_Print_Int
    701                         OLED_P6x8Str(15,5,"pk4=");     OLED_Print_Int(40,5,peak_real[4]); 
   \   0000016A   0x....             LDR.N    R2,??DataTable8_17
   \   0000016C   0x2105             MOVS     R1,#+5
   \   0000016E   0x200F             MOVS     R0,#+15
   \   00000170   0x.... 0x....      BL       OLED_P6x8Str
   \   00000174   0x....             LDR.N    R0,??DataTable8_22
   \   00000176   0x7902             LDRB     R2,[R0, #+4]
   \   00000178   0x2105             MOVS     R1,#+5
   \   0000017A   0x2028             MOVS     R0,#+40
   \   0000017C   0x.... 0x....      BL       OLED_Print_Int
    702                         OLED_P6x8Str(70,5,"pk5=");     OLED_Print_Int(95,5,peak_real[5]); 
   \   00000180   0x....             LDR.N    R2,??DataTable8_18
   \   00000182   0x2105             MOVS     R1,#+5
   \   00000184   0x2046             MOVS     R0,#+70
   \   00000186   0x.... 0x....      BL       OLED_P6x8Str
   \   0000018A   0x....             LDR.N    R0,??DataTable8_22
   \   0000018C   0x7942             LDRB     R2,[R0, #+5]
   \   0000018E   0x2105             MOVS     R1,#+5
   \   00000190   0x205F             MOVS     R0,#+95
   \   00000192   0x.... 0x....      BL       OLED_Print_Int
    703                         OLED_P6x8Str(15,6,"pk6=");     OLED_Print_Int(40,6,peak_real[6]); 
   \   00000196   0x....             LDR.N    R2,??DataTable8_19
   \   00000198   0x2106             MOVS     R1,#+6
   \   0000019A   0x200F             MOVS     R0,#+15
   \   0000019C   0x.... 0x....      BL       OLED_P6x8Str
   \   000001A0   0x....             LDR.N    R0,??DataTable8_22
   \   000001A2   0x7982             LDRB     R2,[R0, #+6]
   \   000001A4   0x2106             MOVS     R1,#+6
   \   000001A6   0x2028             MOVS     R0,#+40
   \   000001A8   0x.... 0x....      BL       OLED_Print_Int
    704                         OLED_P6x8Str(70,6,"pk7=");     OLED_Print_Int(95,6,peak_real[7]);
   \   000001AC   0x....             LDR.N    R2,??DataTable8_20
   \   000001AE   0x2106             MOVS     R1,#+6
   \   000001B0   0x2046             MOVS     R0,#+70
   \   000001B2   0x.... 0x....      BL       OLED_P6x8Str
   \   000001B6   0x....             LDR.N    R0,??DataTable8_22
   \   000001B8   0x79C2             LDRB     R2,[R0, #+7]
   \   000001BA   0x2106             MOVS     R1,#+6
   \   000001BC   0x205F             MOVS     R0,#+95
   \   000001BE   0x.... 0x....      BL       OLED_Print_Int
    705                     }
    706                     break;
   \   000001C2   0xE0D5             B.N      ??OLED_while_6
    707          
    708                     //------第三页显示---------                              
    709                     case 3:
    710                     {
    711                         OLED_P6x8Str(6,1,"Island:"); 
   \                     ??OLED_while_3: (+1)
   \   000001C4   0x....             LDR.N    R2,??DataTable8_23
   \   000001C6   0x2101             MOVS     R1,#+1
   \   000001C8   0x2006             MOVS     R0,#+6
   \   000001CA   0x.... 0x....      BL       OLED_P6x8Str
    712                         
    713                         OLED_P6x8Str(15,2,"Command=");   OLED_Print_Int(70,2,SendCommand);
   \   000001CE   0x....             LDR.N    R2,??DataTable8_24
   \   000001D0   0x2102             MOVS     R1,#+2
   \   000001D2   0x200F             MOVS     R0,#+15
   \   000001D4   0x.... 0x....      BL       OLED_P6x8Str
   \   000001D8   0x....             LDR.N    R0,??DataTable8_25
   \   000001DA   0x7802             LDRB     R2,[R0, #+0]
   \   000001DC   0x2102             MOVS     R1,#+2
   \   000001DE   0x2046             MOVS     R0,#+70
   \   000001E0   0x.... 0x....      BL       OLED_Print_Int
    714                         
    715                         OLED_P6x8Str(15,3,"Err=");      OLED_Print_Int(40,3,Error); 
   \   000001E4   0x....             LDR.N    R2,??DataTable8_26
   \   000001E6   0x2103             MOVS     R1,#+3
   \   000001E8   0x200F             MOVS     R0,#+15
   \   000001EA   0x.... 0x....      BL       OLED_P6x8Str
   \   000001EE   0x....             LDR.N    R0,??DataTable8_27
   \   000001F0   0x6802             LDR      R2,[R0, #+0]
   \   000001F2   0x2103             MOVS     R1,#+3
   \   000001F4   0x2028             MOVS     R0,#+40
   \   000001F6   0x.... 0x....      BL       OLED_Print_Int
    716          
    717                         OLED_P6x8Str(15,4,"Confirm=");  
   \   000001FA   0x....             LDR.N    R2,??DataTable8_28
   \   000001FC   0x2104             MOVS     R1,#+4
   \   000001FE   0x200F             MOVS     R0,#+15
   \   00000200   0x.... 0x....      BL       OLED_P6x8Str
    718                         if(Flag_Island_Confirm != 0)   OLED_Print_Int(67,4,Flag_Island_Confirm/100); 
   \   00000204   0x....             LDR.N    R0,??DataTable8_29
   \   00000206   0x6800             LDR      R0,[R0, #+0]
   \   00000208   0x2800             CMP      R0,#+0
   \   0000020A   0xD009             BEQ.N    ??OLED_while_7
   \   0000020C   0x....             LDR.N    R0,??DataTable8_29
   \   0000020E   0x6800             LDR      R0,[R0, #+0]
   \   00000210   0x2164             MOVS     R1,#+100
   \   00000212   0xFB90 0xF2F1      SDIV     R2,R0,R1
   \   00000216   0x2104             MOVS     R1,#+4
   \   00000218   0x2043             MOVS     R0,#+67
   \   0000021A   0x.... 0x....      BL       OLED_Print_Int
   \   0000021E   0xE004             B.N      ??OLED_while_8
    719                         else                           OLED_P6x8Str(67,4,"No");
   \                     ??OLED_while_7: (+1)
   \   00000220   0x....             ADR.N    R2,??DataTable8_1  ;; 0x4E, 0x6F, 0x00, 0x00
   \   00000222   0x2104             MOVS     R1,#+4
   \   00000224   0x2043             MOVS     R0,#+67
   \   00000226   0x.... 0x....      BL       OLED_P6x8Str
    720                         
    721                         OLED_P6x8Str(15,5,"final=");   
   \                     ??OLED_while_8: (+1)
   \   0000022A   0x....             LDR.N    R2,??DataTable8_30
   \   0000022C   0x2105             MOVS     R1,#+5
   \   0000022E   0x200F             MOVS     R0,#+15
   \   00000230   0x.... 0x....      BL       OLED_P6x8Str
    722                         if(final != 0)                 OLED_P6x8Str(55,5,"Yes");  
   \   00000234   0x....             LDR.N    R0,??DataTable8_31
   \   00000236   0x7800             LDRB     R0,[R0, #+0]
   \   00000238   0x2800             CMP      R0,#+0
   \   0000023A   0xD005             BEQ.N    ??OLED_while_9
   \   0000023C   0x....             ADR.N    R2,??DataTable8_2  ;; "Yes"
   \   0000023E   0x2105             MOVS     R1,#+5
   \   00000240   0x2037             MOVS     R0,#+55
   \   00000242   0x.... 0x....      BL       OLED_P6x8Str
   \   00000246   0xE004             B.N      ??OLED_while_10
    723                         else                           OLED_P6x8Str(55,5,"No");
   \                     ??OLED_while_9: (+1)
   \   00000248   0x....             ADR.N    R2,??DataTable8_1  ;; 0x4E, 0x6F, 0x00, 0x00
   \   0000024A   0x2105             MOVS     R1,#+5
   \   0000024C   0x2037             MOVS     R0,#+55
   \   0000024E   0x.... 0x....      BL       OLED_P6x8Str
    724          
    725                         OLED_P6x8Str(15,6,"Island=");   
   \                     ??OLED_while_10: (+1)
   \   00000252   0x....             LDR.N    R2,??DataTable8_32
   \   00000254   0x2106             MOVS     R1,#+6
   \   00000256   0x200F             MOVS     R0,#+15
   \   00000258   0x.... 0x....      BL       OLED_P6x8Str
    726                         if(Flag_Island != 0)           OLED_P6x8Str(63,6,"Yes");  
   \   0000025C   0x....             LDR.N    R0,??DataTable8_33
   \   0000025E   0x7800             LDRB     R0,[R0, #+0]
   \   00000260   0x2800             CMP      R0,#+0
   \   00000262   0xD005             BEQ.N    ??OLED_while_11
   \   00000264   0x....             ADR.N    R2,??DataTable8_2  ;; "Yes"
   \   00000266   0x2106             MOVS     R1,#+6
   \   00000268   0x203F             MOVS     R0,#+63
   \   0000026A   0x.... 0x....      BL       OLED_P6x8Str
   \   0000026E   0xE004             B.N      ??OLED_while_12
    727                         else                           OLED_P6x8Str(63,6,"No");
   \                     ??OLED_while_11: (+1)
   \   00000270   0x....             ADR.N    R2,??DataTable8_1  ;; 0x4E, 0x6F, 0x00, 0x00
   \   00000272   0x2106             MOVS     R1,#+6
   \   00000274   0x203F             MOVS     R0,#+63
   \   00000276   0x.... 0x....      BL       OLED_P6x8Str
    728          
    729          
    730                         if(Turn_Around == 0)
   \                     ??OLED_while_12: (+1)
   \   0000027A   0x....             LDR.N    R0,??DataTable8_34
   \   0000027C   0x7800             LDRB     R0,[R0, #+0]
   \   0000027E   0x2800             CMP      R0,#+0
   \   00000280   0xD11E             BNE.N    ??OLED_while_13
    731                         {
    732                            OLED_P6x8Str(15,7,"Ad_Turn=");   
   \   00000282   0x....             LDR.N    R2,??DataTable8_35
   \   00000284   0x2107             MOVS     R1,#+7
   \   00000286   0x200F             MOVS     R0,#+15
   \   00000288   0x.... 0x....      BL       OLED_P6x8Str
    733                            if(Ahead_TurnError > 0)                   OLED_P6x8Str(70,7,"Left");      
   \   0000028C   0x....             LDR.N    R0,??DataTable8_36
   \   0000028E   0x6800             LDR      R0,[R0, #+0]
   \   00000290   0x2801             CMP      R0,#+1
   \   00000292   0xDB05             BLT.N    ??OLED_while_14
   \   00000294   0x....             LDR.N    R2,??DataTable8_37
   \   00000296   0x2107             MOVS     R1,#+7
   \   00000298   0x2046             MOVS     R0,#+70
   \   0000029A   0x.... 0x....      BL       OLED_P6x8Str
   \   0000029E   0xE02D             B.N      ??OLED_while_15
    734                            else if(Ahead_TurnError < 0)              OLED_P6x8Str(70,7,"Right"); 
   \                     ??OLED_while_14: (+1)
   \   000002A0   0x....             LDR.N    R0,??DataTable8_36
   \   000002A2   0x6800             LDR      R0,[R0, #+0]
   \   000002A4   0x2800             CMP      R0,#+0
   \   000002A6   0xD505             BPL.N    ??OLED_while_16
   \   000002A8   0x....             LDR.N    R2,??DataTable8_38
   \   000002AA   0x2107             MOVS     R1,#+7
   \   000002AC   0x2046             MOVS     R0,#+70
   \   000002AE   0x.... 0x....      BL       OLED_P6x8Str
   \   000002B2   0xE023             B.N      ??OLED_while_15
    735                            else                                      OLED_P6x8Str(70,7,"No");
   \                     ??OLED_while_16: (+1)
   \   000002B4   0x....             ADR.N    R2,??DataTable8_1  ;; 0x4E, 0x6F, 0x00, 0x00
   \   000002B6   0x2107             MOVS     R1,#+7
   \   000002B8   0x2046             MOVS     R0,#+70
   \   000002BA   0x.... 0x....      BL       OLED_P6x8Str
   \   000002BE   0xE01D             B.N      ??OLED_while_15
    736                         }
    737                         else
    738                         {
    739                            OLED_P6x8Str(15,7,"Bd_Turn=");   
   \                     ??OLED_while_13: (+1)
   \   000002C0   0x....             LDR.N    R2,??DataTable8_39
   \   000002C2   0x2107             MOVS     R1,#+7
   \   000002C4   0x200F             MOVS     R0,#+15
   \   000002C6   0x.... 0x....      BL       OLED_P6x8Str
    740                            if(Dir_IslandTurn == Turn_Left)          OLED_P6x8Str(70,7,"Left");      
   \   000002CA   0x....             LDR.N    R0,??DataTable8_40
   \   000002CC   0x7800             LDRB     R0,[R0, #+0]
   \   000002CE   0x286B             CMP      R0,#+107
   \   000002D0   0xD105             BNE.N    ??OLED_while_17
   \   000002D2   0x....             LDR.N    R2,??DataTable8_37
   \   000002D4   0x2107             MOVS     R1,#+7
   \   000002D6   0x2046             MOVS     R0,#+70
   \   000002D8   0x.... 0x....      BL       OLED_P6x8Str
   \   000002DC   0xE00E             B.N      ??OLED_while_15
    741                            else if(Dir_IslandTurn == Turn_Right)    OLED_P6x8Str(70,7,"Right"); 
   \                     ??OLED_while_17: (+1)
   \   000002DE   0x....             LDR.N    R0,??DataTable8_40
   \   000002E0   0x7800             LDRB     R0,[R0, #+0]
   \   000002E2   0x286A             CMP      R0,#+106
   \   000002E4   0xD105             BNE.N    ??OLED_while_18
   \   000002E6   0x....             LDR.N    R2,??DataTable8_38
   \   000002E8   0x2107             MOVS     R1,#+7
   \   000002EA   0x2046             MOVS     R0,#+70
   \   000002EC   0x.... 0x....      BL       OLED_P6x8Str
   \   000002F0   0xE004             B.N      ??OLED_while_15
    742                            else                                      OLED_P6x8Str(70,7,"No");
   \                     ??OLED_while_18: (+1)
   \   000002F2   0x....             ADR.N    R2,??DataTable8_1  ;; 0x4E, 0x6F, 0x00, 0x00
   \   000002F4   0x2107             MOVS     R1,#+7
   \   000002F6   0x2046             MOVS     R0,#+70
   \   000002F8   0x.... 0x....      BL       OLED_P6x8Str
    743                         }
    744                     }
    745                     break;
   \                     ??OLED_while_15: (+1)
   \   000002FC   0xE038             B.N      ??OLED_while_6
    746          
    747                     //------第四页参数---------                                             
    748                     case 4:
    749                     {
    750                    
    751                         
    752                         OLED_P6x8Str(15,2,"Sum_Dis");   OLED_Print_Int(70,2,Sum_Distance/100);
   \                     ??OLED_while_5: (+1)
   \   000002FE   0x....             LDR.N    R2,??DataTable8_41
   \   00000300   0x2102             MOVS     R1,#+2
   \   00000302   0x200F             MOVS     R0,#+15
   \   00000304   0x.... 0x....      BL       OLED_P6x8Str
   \   00000308   0x....             LDR.N    R0,??DataTable8_42
   \   0000030A   0x6800             LDR      R0,[R0, #+0]
   \   0000030C   0x2164             MOVS     R1,#+100
   \   0000030E   0xFB90 0xF2F1      SDIV     R2,R0,R1
   \   00000312   0x2102             MOVS     R1,#+2
   \   00000314   0x2046             MOVS     R0,#+70
   \   00000316   0x.... 0x....      BL       OLED_Print_Int
    753                         
    754                         OLED_P6x8Str(15,3,"Err=");      OLED_Print_Int(40,3,Error); 
   \   0000031A   0x....             LDR.N    R2,??DataTable8_26
   \   0000031C   0x2103             MOVS     R1,#+3
   \   0000031E   0x200F             MOVS     R0,#+15
   \   00000320   0x.... 0x....      BL       OLED_P6x8Str
   \   00000324   0x....             LDR.N    R0,??DataTable8_27
   \   00000326   0x6802             LDR      R2,[R0, #+0]
   \   00000328   0x2103             MOVS     R1,#+3
   \   0000032A   0x2028             MOVS     R0,#+40
   \   0000032C   0x.... 0x....      BL       OLED_Print_Int
    755          
    756                    
    757                    
    758                     }
    759                     break;
   \   00000330   0xE01E             B.N      ??OLED_while_6
    760                                      
    761                     default:
    762                     break;
   \                     ??OLED_while_2: (+1)
   \   00000332   0xE01D             B.N      ??OLED_while_6
    763                  }        
    764          
    765              }
    766              
    767              //----调参界面显示------   
    768              else
    769              {
    770                  OLED_P6x8Str(6,0,"Debug:"); 
   \                     ??OLED_while_0: (+1)
   \   00000334   0x....             LDR.N    R2,??DataTable8_43
   \   00000336   0x2100             MOVS     R1,#+0
   \   00000338   0x2006             MOVS     R0,#+6
   \   0000033A   0x.... 0x....      BL       OLED_P6x8Str
    771                  OLED_P6x8Str(0,Debug_Para_Slt+1,"->"); 
   \   0000033E   0x....             ADR.N    R2,??DataTable8_3  ;; 0x2D, 0x3E, 0x00, 0x00
   \   00000340   0x....             LDR.N    R0,??DataTable8_44
   \   00000342   0xF990 0x0000      LDRSB    R0,[R0, #+0]
   \   00000346   0x1C41             ADDS     R1,R0,#+1
   \   00000348   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000034A   0x2000             MOVS     R0,#+0
   \   0000034C   0x.... 0x....      BL       OLED_P6x8Str
    772          
    773                  
    774                  switch(Debug_Page_Slt)
   \   00000350   0x....             LDR.N    R0,??DataTable8_45
   \   00000352   0xF990 0x0000      LDRSB    R0,[R0, #+0]
   \   00000356   0x2801             CMP      R0,#+1
   \   00000358   0xD006             BEQ.N    ??OLED_while_19
   \   0000035A   0xD309             BCC.N    ??OLED_while_20
   \   0000035C   0x2803             CMP      R0,#+3
   \   0000035E   0xD005             BEQ.N    ??OLED_while_21
   \   00000360   0xD303             BCC.N    ??OLED_while_22
   \   00000362   0x2804             CMP      R0,#+4
   \   00000364   0xD003             BEQ.N    ??OLED_while_23
   \   00000366   0xE003             B.N      ??OLED_while_20
    775                  {
    776                     //------第一页显示---------
    777                     case 1:
    778                     {
    779                         
    780                     }
    781                     break;
   \                     ??OLED_while_19: (+1)
   \   00000368   0xE002             B.N      ??OLED_while_6
    782          
    783                     //------第二页显示---------               
    784                     case 2:
    785                     {
    786                     }
    787                     break;
   \                     ??OLED_while_22: (+1)
   \   0000036A   0xE001             B.N      ??OLED_while_6
    788          
    789                     //------第三页显示---------                              
    790                     case 3:
    791                     {
    792                     }
    793                     break;
   \                     ??OLED_while_21: (+1)
   \   0000036C   0xE000             B.N      ??OLED_while_6
    794          
    795                     //------第四页参数---------                                             
    796                     case 4:
    797                     {
    798                     }
    799                     break;
   \                     ??OLED_while_23: (+1)
   \   0000036E   0xE7FF             B.N      ??OLED_while_6
    800                                      
    801                     default:
    802                     break;
    803                  }        
    804              }
    805           }
   \                     ??OLED_while_20: (+1)
   \                     ??OLED_while_6: (+1)
   \   00000370   0xBD01             POP      {R0,PC}          ;; return
    806             
    807          

   \                                 In section .text, align 2, keep-with-next
    808          void OLED_Stop()
    809           {
   \                     OLED_Stop: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    810               OLED_P6x8Str(20, 3,"STOP!!");
   \   00000002   0x....             LDR.N    R2,??DataTable8_46
   \   00000004   0x2103             MOVS     R1,#+3
   \   00000006   0x2014             MOVS     R0,#+20
   \   00000008   0x.... 0x....      BL       OLED_P6x8Str
    811           }
   \   0000000C   0xBD01             POP      {R0,PC}          ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5:
   \   00000000   0x2D 0x00          DC8      "-",0x0,0x0
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_1:
   \   00000000   0x2B 0x00          DC8      "+",0x0,0x0
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6:
   \   00000000   0x2D 0x00          DC8      "-",0x0,0x0
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_1:
   \   00000000   0x2B 0x00          DC8      "+",0x0,0x0
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_2:
   \   00000000   0x2E 0x00          DC8      ".",0x0,0x0
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8:
   \   00000000   0x400FF0C0         DC32     0x400ff0c0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_1:
   \   00000000   0x4E 0x6F          DC8      0x4E, 0x6F, 0x00, 0x00
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_2:
   \   00000000   0x59 0x65          DC8      "Yes"
   \              0x73 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_3:
   \   00000000   0x2D 0x3E          DC8      0x2D, 0x3E, 0x00, 0x00
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_4:
   \   00000000   0x........         DC32     F6x8

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_5:
   \   00000000   0x........         DC32     F8X16

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_6:
   \   00000000   0x41200000         DC32     0x41200000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_7:
   \   00000000   0x42C80000         DC32     0x42c80000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_8:
   \   00000000   0x........         DC32     ShowOrDebug

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_9:
   \   00000000   0x........         DC32     ?_3

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_10:
   \   00000000   0x........         DC32     Show_Page_Slt

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_11:
   \   00000000   0x........         DC32     ?_4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_12:
   \   00000000   0x........         DC32     ?_5

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_13:
   \   00000000   0x........         DC32     peak

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_14:
   \   00000000   0x........         DC32     ?_6

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_15:
   \   00000000   0x........         DC32     ?_7

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_16:
   \   00000000   0x........         DC32     ?_8

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_17:
   \   00000000   0x........         DC32     ?_9

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_18:
   \   00000000   0x........         DC32     ?_10

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_19:
   \   00000000   0x........         DC32     ?_11

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_20:
   \   00000000   0x........         DC32     ?_12

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_21:
   \   00000000   0x........         DC32     ?_13

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_22:
   \   00000000   0x........         DC32     peak_real

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_23:
   \   00000000   0x........         DC32     ?_14

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_24:
   \   00000000   0x........         DC32     ?_15

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_25:
   \   00000000   0x........         DC32     SendCommand

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_26:
   \   00000000   0x........         DC32     ?_16

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_27:
   \   00000000   0x........         DC32     Error

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_28:
   \   00000000   0x........         DC32     ?_17

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_29:
   \   00000000   0x........         DC32     Flag_Island_Confirm

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_30:
   \   00000000   0x........         DC32     ?_19

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_31:
   \   00000000   0x........         DC32     final

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_32:
   \   00000000   0x........         DC32     ?_21

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_33:
   \   00000000   0x........         DC32     Flag_Island

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_34:
   \   00000000   0x........         DC32     Turn_Around

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_35:
   \   00000000   0x........         DC32     ?_22

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_36:
   \   00000000   0x........         DC32     Ahead_TurnError

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_37:
   \   00000000   0x........         DC32     ?_23

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_38:
   \   00000000   0x........         DC32     ?_24

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_39:
   \   00000000   0x........         DC32     ?_25

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_40:
   \   00000000   0x........         DC32     Dir_IslandTurn

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_41:
   \   00000000   0x........         DC32     ?_26

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_42:
   \   00000000   0x........         DC32     Sum_Distance

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_43:
   \   00000000   0x........         DC32     ?_27

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_44:
   \   00000000   0x........         DC32     Debug_Para_Slt

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_45:
   \   00000000   0x........         DC32     Debug_Page_Slt

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_46:
   \   00000000   0x........         DC32     ?_29

   \                                 In section .rodata, align 2
   \   00000000   0x2D 0x00          DC8 "-"

   \                                 In section .rodata, align 2
   \   00000000   0x2B 0x00          DC8 "+"

   \                                 In section .rodata, align 2
   \   00000000   0x2E 0x00          DC8 "."

   \                                 In section .rodata, align 4
   \                     ?_3:
   \   00000000   0x53 0x68          DC8 "Show:"
   \              0x6F 0x77    
   \              0x3A 0x00    
   \   00000006   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_4:
   \   00000000   0x50 0x65          DC8 "Peak_Normal:"
   \              0x61 0x6B    
   \              0x5F 0x4E    
   \              0x6F 0x72    
   \              0x6D 0x61    
   \              0x6C 0x3A    
   \              0x00         
   \   0000000D   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_5:
   \   00000000   0x70 0x6B          DC8 "pk0="
   \              0x30 0x3D    
   \              0x00         
   \   00000005   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_6:
   \   00000000   0x70 0x6B          DC8 "pk1="
   \              0x31 0x3D    
   \              0x00         
   \   00000005   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_7:
   \   00000000   0x70 0x6B          DC8 "pk2="
   \              0x32 0x3D    
   \              0x00         
   \   00000005   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_8:
   \   00000000   0x70 0x6B          DC8 "pk3="
   \              0x33 0x3D    
   \              0x00         
   \   00000005   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_9:
   \   00000000   0x70 0x6B          DC8 "pk4="
   \              0x34 0x3D    
   \              0x00         
   \   00000005   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_10:
   \   00000000   0x70 0x6B          DC8 "pk5="
   \              0x35 0x3D    
   \              0x00         
   \   00000005   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_11:
   \   00000000   0x70 0x6B          DC8 "pk6="
   \              0x36 0x3D    
   \              0x00         
   \   00000005   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_12:
   \   00000000   0x70 0x6B          DC8 "pk7="
   \              0x37 0x3D    
   \              0x00         
   \   00000005   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_13:
   \   00000000   0x50 0x65          DC8 "Peak_Real:"
   \              0x61 0x6B    
   \              0x5F 0x52    
   \              0x65 0x61    
   \              0x6C 0x3A    
   \              0x00         
   \   0000000B   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_14:
   \   00000000   0x49 0x73          DC8 "Island:"
   \              0x6C 0x61    
   \              0x6E 0x64    
   \              0x3A 0x00    

   \                                 In section .rodata, align 4
   \                     ?_15:
   \   00000000   0x43 0x6F          DC8 "Command="
   \              0x6D 0x6D    
   \              0x61 0x6E    
   \              0x64 0x3D    
   \              0x00         
   \   00000009   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_16:
   \   00000000   0x45 0x72          DC8 "Err="
   \              0x72 0x3D    
   \              0x00         
   \   00000005   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_17:
   \   00000000   0x43 0x6F          DC8 "Confirm="
   \              0x6E 0x66    
   \              0x69 0x72    
   \              0x6D 0x3D    
   \              0x00         
   \   00000009   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \   00000000   0x4E 0x6F          DC8 "No"
   \              0x00         
   \   00000003   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_19:
   \   00000000   0x66 0x69          DC8 "final="
   \              0x6E 0x61    
   \              0x6C 0x3D    
   \              0x00         
   \   00000007   0x00               DC8 0

   \                                 In section .rodata, align 4
   \   00000000   0x59 0x65          DC8 "Yes"
   \              0x73 0x00    

   \                                 In section .rodata, align 4
   \                     ?_21:
   \   00000000   0x49 0x73          DC8 "Island="
   \              0x6C 0x61    
   \              0x6E 0x64    
   \              0x3D 0x00    

   \                                 In section .rodata, align 4
   \                     ?_22:
   \   00000000   0x41 0x64          DC8 "Ad_Turn="
   \              0x5F 0x54    
   \              0x75 0x72    
   \              0x6E 0x3D    
   \              0x00         
   \   00000009   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_23:
   \   00000000   0x4C 0x65          DC8 "Left"
   \              0x66 0x74    
   \              0x00         
   \   00000005   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_24:
   \   00000000   0x52 0x69          DC8 "Right"
   \              0x67 0x68    
   \              0x74 0x00    
   \   00000006   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_25:
   \   00000000   0x42 0x64          DC8 "Bd_Turn="
   \              0x5F 0x54    
   \              0x75 0x72    
   \              0x6E 0x3D    
   \              0x00         
   \   00000009   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_26:
   \   00000000   0x53 0x75          DC8 "Sum_Dis"
   \              0x6D 0x5F    
   \              0x44 0x69    
   \              0x73 0x00    

   \                                 In section .rodata, align 4
   \                     ?_27:
   \   00000000   0x44 0x65          DC8 "Debug:"
   \              0x62 0x75    
   \              0x67 0x3A    
   \              0x00         
   \   00000007   0x00               DC8 0

   \                                 In section .rodata, align 4
   \   00000000   0x2D 0x3E          DC8 "->"
   \              0x00         
   \   00000003   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_29:
   \   00000000   0x53 0x54          DC8 "STOP!!"
   \              0x4F 0x50    
   \              0x21 0x21    
   \              0x00         
   \   00000007   0x00               DC8 0
    812          
    813          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      32   Draw_BMP
        32   -> OLED_Set_Pos
        32   -> OLED_WrDat
      16   OLED_6x8Char
        16   -> OLED_Set_Pos
        16   -> OLED_WrDat
      16   OLED_CLS
        16   -> OLED_WrCmd
        16   -> OLED_WrDat
      16   OLED_Fill
        16   -> OLED_WrCmd
        16   -> OLED_WrDat
      32   OLED_P6x8Str
        32   -> OLED_Set_Pos
        32   -> OLED_WrDat
      32   OLED_P8x16Str
        32   -> OLED_Set_Pos
        32   -> OLED_WrDat
      24   OLED_Print
        24   -> OLED_P14x16Str
        24   -> OLED_P8x16Str
      40   OLED_Print_Float
        40   -> OLED_6x8Char
        40   -> OLED_P6x8Str
        40   -> __aeabi_f2iz
        40   -> __aeabi_fmul
        40 __aeabi_cfcmple
      32   OLED_Print_Int
        32   -> OLED_6x8Char
        32   -> OLED_P6x8Str
      16   OLED_Print_RowPic
        16   -> OLED_PutPixel
      16   OLED_PutPixel
        16   -> OLED_Set_Pos
        16   -> OLED_WrCmd
        16   -> OLED_WrDat
      32   OLED_Rectangle
        32   -> LPLD_LPTMR_DelayMs
        32   -> OLED_Set_Pos
        32   -> OLED_WrDat
       8   OLED_Set_Pos
         8   -> OLED_WrCmd
       8   OLED_Stop
         8   -> OLED_P6x8Str
      16   OLED_WrCmd
        16   -> LPLD_GPIO_Output_b
      16   OLED_WrDat
        16   -> LPLD_GPIO_Output_b
       8   OLED_while
         8   -> OLED_Fill
         8   -> OLED_P6x8Str
         8   -> OLED_Print_Int


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable5
       4  ??DataTable5_1
       4  ??DataTable6
       4  ??DataTable6_1
       4  ??DataTable6_2
       4  ??DataTable8
       4  ??DataTable8_1
       4  ??DataTable8_10
       4  ??DataTable8_11
       4  ??DataTable8_12
       4  ??DataTable8_13
       4  ??DataTable8_14
       4  ??DataTable8_15
       4  ??DataTable8_16
       4  ??DataTable8_17
       4  ??DataTable8_18
       4  ??DataTable8_19
       4  ??DataTable8_2
       4  ??DataTable8_20
       4  ??DataTable8_21
       4  ??DataTable8_22
       4  ??DataTable8_23
       4  ??DataTable8_24
       4  ??DataTable8_25
       4  ??DataTable8_26
       4  ??DataTable8_27
       4  ??DataTable8_28
       4  ??DataTable8_29
       4  ??DataTable8_3
       4  ??DataTable8_30
       4  ??DataTable8_31
       4  ??DataTable8_32
       4  ??DataTable8_33
       4  ??DataTable8_34
       4  ??DataTable8_35
       4  ??DataTable8_36
       4  ??DataTable8_37
       4  ??DataTable8_38
       4  ??DataTable8_39
       4  ??DataTable8_4
       4  ??DataTable8_40
       4  ??DataTable8_41
       4  ??DataTable8_42
       4  ??DataTable8_43
       4  ??DataTable8_44
       4  ??DataTable8_45
       4  ??DataTable8_46
       4  ??DataTable8_5
       4  ??DataTable8_6
       4  ??DataTable8_7
       4  ??DataTable8_8
       4  ??DataTable8_9
       2  ?_0
       2  ?_1
       8  ?_10
       8  ?_11
       8  ?_12
      12  ?_13
       8  ?_14
      12  ?_15
       8  ?_16
      12  ?_17
       4  ?_18
       8  ?_19
       2  ?_2
       4  ?_20
       8  ?_21
      12  ?_22
       8  ?_23
       8  ?_24
      12  ?_25
       8  ?_26
       8  ?_27
       4  ?_28
       8  ?_29
       8  ?_3
      16  ?_4
       8  ?_5
       8  ?_6
       8  ?_7
       8  ?_8
       8  ?_9
     118  Draw_BMP
     552  F6x8
    1520  F8X16
     480  LIBLOGO60x58
      58  OLED_6x8Char
      56  OLED_CLS
      60  OLED_Fill
     122  OLED_P6x8Str
     168  OLED_P8x16Str
     106  OLED_Print
     840  OLED_Print_Float
     360  OLED_Print_Int
      44  OLED_Print_RowPic
      80  OLED_PutPixel
     152  OLED_Rectangle
      44  OLED_Set_Pos
      14  OLED_Stop
     102  OLED_WrCmd
     102  OLED_WrDat
     882  OLED_while

 
 2 790 bytes in section .rodata
 3 516 bytes in section .text
 
 3 516 bytes of CODE  memory
 2 790 bytes of CONST memory

Errors: none
Warnings: none
