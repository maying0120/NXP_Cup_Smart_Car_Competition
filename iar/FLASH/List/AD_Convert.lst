###############################################################################
#
# IAR ANSI C/C++ Compiler V7.20.2.7424/W32 for ARM        07/Dec/2016  02:02:55
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after\app\AD_Convert.c
#    Command line =  
#        C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after\app\AD_Convert.c
#        -D LPLD_K60 -D USE_K60F12 -lCN
#        C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after\iar\FLASH\List\
#        -lB
#        C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after\iar\FLASH\List\
#        -o
#        C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after\iar\FLASH\Obj\
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M4F -e --fpu=VFPv4_sp --dlib_config
#        D:\IAR\arm\INC\c\DLib_Config_Normal.h -I
#        C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after\iar\..\app\
#        -I
#        C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after\iar\..\..\..\lib\CPU\
#        -I
#        C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after\iar\..\..\..\lib\common\
#        -I
#        C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after\iar\..\..\..\lib\LPLD\
#        -I
#        C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after\iar\..\..\..\lib\LPLD\HW\
#        -I
#        C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after\iar\..\..\..\lib\LPLD\DEV\
#        -I
#        C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after\iar\..\..\..\lib\LPLD\FUNC\
#        -I
#        C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after\iar\..\..\..\lib\uCOS-II\Ports\
#        -I
#        C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after\iar\..\..\..\lib\uCOS-II\Source\
#        -I
#        C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after\iar\..\..\..\lib\FatFs\
#        -I
#        C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after\iar\..\..\..\lib\FatFs\option\
#        -I
#        C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after\iar\..\..\..\lib\USB\common\
#        -I
#        C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after\iar\..\..\..\lib\USB\driver\
#        -I
#        C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after\iar\..\..\..\lib\USB\descriptor\
#        -I
#        C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after\iar\..\..\..\lib\USB\class\
#        -Ol -I D:\IAR\arm\CMSIS\Include\ -D ARM_MATH_CM4
#    List file    =  
#        C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after\iar\FLASH\List\AD_Convert.lst
#    Object file  =  
#        C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after\iar\FLASH\Obj\AD_Convert.o
#
###############################################################################

C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after\app\AD_Convert.c
      1          #include "AD_Convert.h"
      2          
      3          

   \                                 In section .bss, align 4
      4          int sensor[5][100] = {0};
   \                     sensor:
   \   00000000                      DS8 2000

   \                                 In section .bss, align 4
      5          int x;
   \                     x:
   \   00000000                      DS8 4

   \                                 In section .text, align 4, keep-with-next
      6          void ad_convert()
      7          {
   \                     ad_convert: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
      8            uint8 i,j;
      9            
     10            LPLD_ADC_Chn_Enable(ADC1, AD4);
   \   00000002   0x2104             MOVS     R1,#+4
   \   00000004   0x4826             LDR.N    R0,??ad_convert_0  ;; 0x400bb000
   \   00000006   0x.... 0x....      BL       LPLD_ADC_Chn_Enable
     11            for(i=0; i<100;i++)
   \   0000000A   0x2400             MOVS     R4,#+0
   \   0000000C   0xE008             B.N      ??ad_convert_1
     12              sensor[0][i] = LPLD_ADC_Get(ADC1, AD4);
   \                     ??ad_convert_2: (+1)
   \   0000000E   0x2104             MOVS     R1,#+4
   \   00000010   0x4823             LDR.N    R0,??ad_convert_0  ;; 0x400bb000
   \   00000012   0x.... 0x....      BL       LPLD_ADC_Get
   \   00000016   0x4923             LDR.N    R1,??ad_convert_0+0x4
   \   00000018   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000001A   0xF841 0x0024      STR      R0,[R1, R4, LSL #+2]
   \   0000001E   0x1C64             ADDS     R4,R4,#+1
   \                     ??ad_convert_1: (+1)
   \   00000020   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000022   0x2C64             CMP      R4,#+100
   \   00000024   0xDBF3             BLT.N    ??ad_convert_2
     13            
     14            LPLD_ADC_Chn_Enable(ADC1, AD5);
   \   00000026   0x2105             MOVS     R1,#+5
   \   00000028   0x481D             LDR.N    R0,??ad_convert_0  ;; 0x400bb000
   \   0000002A   0x.... 0x....      BL       LPLD_ADC_Chn_Enable
     15            for(i=0; i<100;i++)
   \   0000002E   0x2400             MOVS     R4,#+0
   \   00000030   0xE00A             B.N      ??ad_convert_3
     16              sensor[1][i] = LPLD_ADC_Get(ADC1, AD5);
   \                     ??ad_convert_4: (+1)
   \   00000032   0x2105             MOVS     R1,#+5
   \   00000034   0x481A             LDR.N    R0,??ad_convert_0  ;; 0x400bb000
   \   00000036   0x.... 0x....      BL       LPLD_ADC_Get
   \   0000003A   0x491A             LDR.N    R1,??ad_convert_0+0x4
   \   0000003C   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000003E   0xEB11 0x0184      ADDS     R1,R1,R4, LSL #+2
   \   00000042   0xF8C1 0x0190      STR      R0,[R1, #+400]
   \   00000046   0x1C64             ADDS     R4,R4,#+1
   \                     ??ad_convert_3: (+1)
   \   00000048   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000004A   0x2C64             CMP      R4,#+100
   \   0000004C   0xDBF1             BLT.N    ??ad_convert_4
     17          
     18            LPLD_ADC_Chn_Enable(ADC1, AD6);
   \   0000004E   0x2106             MOVS     R1,#+6
   \   00000050   0x4813             LDR.N    R0,??ad_convert_0  ;; 0x400bb000
   \   00000052   0x.... 0x....      BL       LPLD_ADC_Chn_Enable
     19            for(i=0; i<100;i++)
   \   00000056   0x2400             MOVS     R4,#+0
   \   00000058   0xE00A             B.N      ??ad_convert_5
     20              sensor[2][i] = LPLD_ADC_Get(ADC1, AD6);
   \                     ??ad_convert_6: (+1)
   \   0000005A   0x2106             MOVS     R1,#+6
   \   0000005C   0x4810             LDR.N    R0,??ad_convert_0  ;; 0x400bb000
   \   0000005E   0x.... 0x....      BL       LPLD_ADC_Get
   \   00000062   0x4910             LDR.N    R1,??ad_convert_0+0x4
   \   00000064   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000066   0xEB11 0x0184      ADDS     R1,R1,R4, LSL #+2
   \   0000006A   0xF8C1 0x0320      STR      R0,[R1, #+800]
   \   0000006E   0x1C64             ADDS     R4,R4,#+1
   \                     ??ad_convert_5: (+1)
   \   00000070   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000072   0x2C64             CMP      R4,#+100
   \   00000074   0xDBF1             BLT.N    ??ad_convert_6
     21          
     22            LPLD_ADC_Chn_Enable(ADC1, AD7);
   \   00000076   0x2107             MOVS     R1,#+7
   \   00000078   0x4809             LDR.N    R0,??ad_convert_0  ;; 0x400bb000
   \   0000007A   0x.... 0x....      BL       LPLD_ADC_Chn_Enable
     23            for(i=0; i<100;i++)
   \   0000007E   0x2400             MOVS     R4,#+0
   \   00000080   0xE00A             B.N      ??ad_convert_7
     24              sensor[3][i] = LPLD_ADC_Get(ADC1, AD7);
   \                     ??ad_convert_8: (+1)
   \   00000082   0x2107             MOVS     R1,#+7
   \   00000084   0x4806             LDR.N    R0,??ad_convert_0  ;; 0x400bb000
   \   00000086   0x.... 0x....      BL       LPLD_ADC_Get
   \   0000008A   0x4906             LDR.N    R1,??ad_convert_0+0x4
   \   0000008C   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000008E   0xEB11 0x0184      ADDS     R1,R1,R4, LSL #+2
   \   00000092   0xF8C1 0x04B0      STR      R0,[R1, #+1200]
   \   00000096   0x1C64             ADDS     R4,R4,#+1
   \                     ??ad_convert_7: (+1)
   \   00000098   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000009A   0x2C64             CMP      R4,#+100
   \   0000009C   0xDBF1             BLT.N    ??ad_convert_8
     25            
     26            //for(j=0; j<5; j++)
     27              //sensor[]
     28          }
   \   0000009E   0xBD10             POP      {R4,PC}          ;; return
   \                     ??ad_convert_0:
   \   000000A0   0x400BB000         DC32     0x400bb000
   \   000000A4   0x........         DC32     sensor

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   ad_convert
         8   -> LPLD_ADC_Chn_Enable
         8   -> LPLD_ADC_Get


   Section sizes:

   Bytes  Function/Label
   -----  --------------
     168  ad_convert
    2000  sensor
       4  x

 
 2 004 bytes in section .bss
   168 bytes in section .text
 
   168 bytes of CODE memory
 2 004 bytes of DATA memory

Errors: none
Warnings: 1
