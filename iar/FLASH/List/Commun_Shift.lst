###############################################################################
#
# IAR ANSI C/C++ Compiler V7.20.2.7424/W32 for ARM        10/Jul/2017  21:37:30
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after（完整程序）\app\Commun_Shift.c
#    Command line =  
#        C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after（完整程序）\app\Commun_Shift.c
#        -D LPLD_K60 -D USE_K60F12 -lCN
#        C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after（完整程序）\iar\FLASH\List\
#        -lB
#        C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after（完整程序）\iar\FLASH\List\
#        -o
#        C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after（完整程序）\iar\FLASH\Obj\
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M4F -e --fpu=None --dlib_config
#        D:\IAR\arm\INC\c\DLib_Config_Normal.h -I
#        C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after（完整程序）\iar\..\app\
#        -I
#        C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after（完整程序）\iar\..\..\..\lib\CPU\
#        -I
#        C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after（完整程序）\iar\..\..\..\lib\common\
#        -I
#        C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after（完整程序）\iar\..\..\..\lib\LPLD\
#        -I
#        C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after（完整程序）\iar\..\..\..\lib\LPLD\HW\
#        -I
#        C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after（完整程序）\iar\..\..\..\lib\LPLD\DEV\
#        -I
#        C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after（完整程序）\iar\..\..\..\lib\LPLD\FUNC\
#        -I
#        C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after（完整程序）\iar\..\..\..\lib\uCOS-II\Ports\
#        -I
#        C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after（完整程序）\iar\..\..\..\lib\uCOS-II\Source\
#        -I
#        C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after（完整程序）\iar\..\..\..\lib\FatFs\
#        -I
#        C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after（完整程序）\iar\..\..\..\lib\FatFs\option\
#        -I
#        C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after（完整程序）\iar\..\..\..\lib\USB\common\
#        -I
#        C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after（完整程序）\iar\..\..\..\lib\USB\driver\
#        -I
#        C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after（完整程序）\iar\..\..\..\lib\USB\descriptor\
#        -I
#        C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after（完整程序）\iar\..\..\..\lib\USB\class\
#        -Ol -I D:\IAR\arm\CMSIS\Include\ -D ARM_MATH_CM4
#    List file    =  
#        C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after（完整程序）\iar\FLASH\List\Commun_Shift.lst
#    Object file  =  
#        C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after（完整程序）\iar\FLASH\Obj\Commun_Shift.o
#
###############################################################################

C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after（完整程序）\app\Commun_Shift.c
      1          #include "Includes.h"
      2          

   \                                 In section .data, align 4
      3          int Mixed_Distance = 110;
   \                     Mixed_Distance:
   \   00000000   0x0000006E         DC32 110

   \                                 In section .bss, align 4
      4          int shift_error;
   \                     shift_error:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
      5          int Cnt_Encoder = 0;
   \                     Cnt_Encoder:
   \   00000000                      DS8 4
      6          extern int Count;
      7          extern int EncoderDis_Ahead;
      8          extern int EncoderDis_Behind;
      9          extern uint16 Ultra_Distance_Unfilter;
     10          extern uint8 Turn_Around;
     11          extern uint8 OverTake;
     12          extern uint8 Case1_Behind_IslandStop;
     13          extern uint8 Case1_Behind_IslandFollow;
     14          extern uint8 OverTake_Island;
     15          extern uint8 OverTake_Straight;
     16          extern uint8 Case2_Ahead_KeepSide;  
     17          extern uint8 Case2_Behind_KeepSide;
     18          extern uint8 Behind_LeaveIsland_ChaseFlag;
     19          extern int Ultra_Count;
     20          extern int Ultra_Count_Last3;
     21          extern int Flag_Island_Confirm;
     22          extern uint8 final;
     23          extern uint8 Flag_Island;
     24          
     25          

   \                                 In section .text, align 4, keep-with-next
     26          void Commun_Shift(void)
     27          {    
   \                     Commun_Shift: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
     28             if(Count%10==0 && Cnt_Encoder==1)
   \   00000002   0x200A             MOVS     R0,#+10
   \   00000004   0x493A             LDR.N    R1,??Commun_Shift_0
   \   00000006   0x6809             LDR      R1,[R1, #+0]
   \   00000008   0x4A39             LDR.N    R2,??Commun_Shift_0
   \   0000000A   0x6812             LDR      R2,[R2, #+0]
   \   0000000C   0xFB92 0xF2F0      SDIV     R2,R2,R0
   \   00000010   0xFB00 0x1012      MLS      R0,R0,R2,R1
   \   00000014   0x2800             CMP      R0,#+0
   \   00000016   0xD169             BNE.N    ??Commun_Shift_1
   \   00000018   0x4836             LDR.N    R0,??Commun_Shift_0+0x4
   \   0000001A   0x6800             LDR      R0,[R0, #+0]
   \   0000001C   0x2801             CMP      R0,#+1
   \   0000001E   0xD165             BNE.N    ??Commun_Shift_1
     29               {  
     30                  Cnt_Encoder = 0;
   \   00000020   0x2000             MOVS     R0,#+0
   \   00000022   0x4934             LDR.N    R1,??Commun_Shift_0+0x4
   \   00000024   0x6008             STR      R0,[R1, #+0]
     31          
     32                  /**前车发送100ms内运动距离给后车**/
     33                  if(Turn_Around == 0)   
   \   00000026   0x4834             LDR.N    R0,??Commun_Shift_0+0x8
   \   00000028   0x7800             LDRB     R0,[R0, #+0]
   \   0000002A   0x2800             CMP      R0,#+0
   \   0000002C   0xD106             BNE.N    ??Commun_Shift_2
     34                     Commu_Onetime(EncoderDis_Ahead + EncoderDis_Step);
   \   0000002E   0x4833             LDR.N    R0,??Commun_Shift_0+0xC
   \   00000030   0x6800             LDR      R0,[R0, #+0]
   \   00000032   0x3032             ADDS     R0,R0,#+50
   \   00000034   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000036   0x.... 0x....      BL       Commu_Onetime
   \   0000003A   0xE057             B.N      ??Commun_Shift_1
     35                  
     36                  /***后车解算两车之间的实际距离****/
     37                  else     
     38                    {
     39                       shift_error = (EncoderDis_Ahead - EncoderDis_Behind);
   \                     ??Commun_Shift_2: (+1)
   \   0000003C   0x482F             LDR.N    R0,??Commun_Shift_0+0xC
   \   0000003E   0x6800             LDR      R0,[R0, #+0]
   \   00000040   0x492F             LDR.N    R1,??Commun_Shift_0+0x10
   \   00000042   0x6809             LDR      R1,[R1, #+0]
   \   00000044   0x1A40             SUBS     R0,R0,R1
   \   00000046   0x492F             LDR.N    R1,??Commun_Shift_0+0x14
   \   00000048   0x6008             STR      R0,[R1, #+0]
     40                        
     41                       //----能接收到超声波信号时,对超声波进行滤波，以超声波距离为准----//
     42                       if(Count - Ultra_Count <= 10)
   \   0000004A   0x4829             LDR.N    R0,??Commun_Shift_0
   \   0000004C   0x6800             LDR      R0,[R0, #+0]
   \   0000004E   0x492E             LDR.N    R1,??Commun_Shift_0+0x18
   \   00000050   0x6809             LDR      R1,[R1, #+0]
   \   00000052   0x1A40             SUBS     R0,R0,R1
   \   00000054   0x280B             CMP      R0,#+11
   \   00000056   0xDA04             BGE.N    ??Commun_Shift_3
     43                             Mixed_Distance = Ultra_Distance_Unfilter;   
   \   00000058   0x482C             LDR.N    R0,??Commun_Shift_0+0x1C
   \   0000005A   0x8800             LDRH     R0,[R0, #+0]
   \   0000005C   0x492C             LDR.N    R1,??Commun_Shift_0+0x20
   \   0000005E   0x6008             STR      R0,[R1, #+0]
   \   00000060   0xE02A             B.N      ??Commun_Shift_4
     44          
     45                       //--------过渡过程中：双车距离 = 超声波基准距离+位移之差---------//
     46                       else 
     47                          {
     48                             Mixed_Distance += shift_error;
   \                     ??Commun_Shift_3: (+1)
   \   00000062   0x482B             LDR.N    R0,??Commun_Shift_0+0x20
   \   00000064   0x6800             LDR      R0,[R0, #+0]
   \   00000066   0x4927             LDR.N    R1,??Commun_Shift_0+0x14
   \   00000068   0x6809             LDR      R1,[R1, #+0]
   \   0000006A   0x1808             ADDS     R0,R1,R0
   \   0000006C   0x4928             LDR.N    R1,??Commun_Shift_0+0x20
   \   0000006E   0x6008             STR      R0,[R1, #+0]
     49                             
     50                             //进环岛时，距离设置为最远
     51                             if(Flag_Island_Confirm!=0 || final!=0 || Flag_Island!=0)
   \   00000070   0x4828             LDR.N    R0,??Commun_Shift_0+0x24
   \   00000072   0x6800             LDR      R0,[R0, #+0]
   \   00000074   0x2800             CMP      R0,#+0
   \   00000076   0xD107             BNE.N    ??Commun_Shift_5
   \   00000078   0x4827             LDR.N    R0,??Commun_Shift_0+0x28
   \   0000007A   0x7800             LDRB     R0,[R0, #+0]
   \   0000007C   0x2800             CMP      R0,#+0
   \   0000007E   0xD103             BNE.N    ??Commun_Shift_5
   \   00000080   0x4826             LDR.N    R0,??Commun_Shift_0+0x2C
   \   00000082   0x7800             LDRB     R0,[R0, #+0]
   \   00000084   0x2800             CMP      R0,#+0
   \   00000086   0xD003             BEQ.N    ??Commun_Shift_6
     52                                Mixed_Distance = 300;
   \                     ??Commun_Shift_5: (+1)
   \   00000088   0xF44F 0x7096      MOV      R0,#+300
   \   0000008C   0x4920             LDR.N    R1,??Commun_Shift_0+0x20
   \   0000008E   0x6008             STR      R0,[R1, #+0]
     53          
     54                             //出环岛时，追逐距离很远
     55                             if(Behind_LeaveIsland_ChaseFlag == 1)
   \                     ??Commun_Shift_6: (+1)
   \   00000090   0x4823             LDR.N    R0,??Commun_Shift_0+0x30
   \   00000092   0x7800             LDRB     R0,[R0, #+0]
   \   00000094   0x2801             CMP      R0,#+1
   \   00000096   0xD103             BNE.N    ??Commun_Shift_7
     56                               Mixed_Distance = 1000;
   \   00000098   0xF44F 0x707A      MOV      R0,#+1000
   \   0000009C   0x491C             LDR.N    R1,??Commun_Shift_0+0x20
   \   0000009E   0x6008             STR      R0,[R1, #+0]
     57                             
     58                             //Case2(直道超车)情况下，两车处于超车过程中，距离设置为最远
     59                             if(OverTake_Straight == Yes)
   \                     ??Commun_Shift_7: (+1)
   \   000000A0   0x4820             LDR.N    R0,??Commun_Shift_0+0x34
   \   000000A2   0x7800             LDRB     R0,[R0, #+0]
   \   000000A4   0x2801             CMP      R0,#+1
   \   000000A6   0xD107             BNE.N    ??Commun_Shift_4
     60                               {
     61                                  if(Case2_Ahead_KeepSide == 1)
   \   000000A8   0x481F             LDR.N    R0,??Commun_Shift_0+0x38
   \   000000AA   0x7800             LDRB     R0,[R0, #+0]
   \   000000AC   0x2801             CMP      R0,#+1
   \   000000AE   0xD103             BNE.N    ??Commun_Shift_4
     62                                     Mixed_Distance = 300;
   \   000000B0   0xF44F 0x7096      MOV      R0,#+300
   \   000000B4   0x4916             LDR.N    R1,??Commun_Shift_0+0x20
   \   000000B6   0x6008             STR      R0,[R1, #+0]
     63                               }
     64                          }
     65                       
     66                                    
     67                       //---------------------后车将距离通信给前车----------------------//
     68                       if(Mixed_Distance < 0)
   \                     ??Commun_Shift_4: (+1)
   \   000000B8   0x4815             LDR.N    R0,??Commun_Shift_0+0x20
   \   000000BA   0x6800             LDR      R0,[R0, #+0]
   \   000000BC   0x2800             CMP      R0,#+0
   \   000000BE   0xD503             BPL.N    ??Commun_Shift_8
     69                           Commu_Onetime(MixedDis_Step);
   \   000000C0   0x200A             MOVS     R0,#+10
   \   000000C2   0x.... 0x....      BL       Commu_Onetime
   \   000000C6   0xE011             B.N      ??Commun_Shift_1
     70                       else if(Mixed_Distance > 300)
   \                     ??Commun_Shift_8: (+1)
   \   000000C8   0x4811             LDR.N    R0,??Commun_Shift_0+0x20
   \   000000CA   0x6800             LDR      R0,[R0, #+0]
   \   000000CC   0xF5B0 0x7F96      CMP      R0,#+300
   \   000000D0   0xDD03             BLE.N    ??Commun_Shift_9
     71                           Commu_Onetime(30 + MixedDis_Step);
   \   000000D2   0x2028             MOVS     R0,#+40
   \   000000D4   0x.... 0x....      BL       Commu_Onetime
   \   000000D8   0xE008             B.N      ??Commun_Shift_1
     72                       else
     73                           Commu_Onetime(Mixed_Distance/10 + MixedDis_Step);
   \                     ??Commun_Shift_9: (+1)
   \   000000DA   0x480D             LDR.N    R0,??Commun_Shift_0+0x20
   \   000000DC   0x6800             LDR      R0,[R0, #+0]
   \   000000DE   0x210A             MOVS     R1,#+10
   \   000000E0   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   000000E4   0x300A             ADDS     R0,R0,#+10
   \   000000E6   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000E8   0x.... 0x....      BL       Commu_Onetime
     74                    }
     75               }
     76          }
   \                     ??Commun_Shift_1: (+1)
   \   000000EC   0xBD01             POP      {R0,PC}          ;; return
   \   000000EE   0xBF00             Nop      
   \                     ??Commun_Shift_0:
   \   000000F0   0x........         DC32     Count
   \   000000F4   0x........         DC32     Cnt_Encoder
   \   000000F8   0x........         DC32     Turn_Around
   \   000000FC   0x........         DC32     EncoderDis_Ahead
   \   00000100   0x........         DC32     EncoderDis_Behind
   \   00000104   0x........         DC32     shift_error
   \   00000108   0x........         DC32     Ultra_Count
   \   0000010C   0x........         DC32     Ultra_Distance_Unfilter
   \   00000110   0x........         DC32     Mixed_Distance
   \   00000114   0x........         DC32     Flag_Island_Confirm
   \   00000118   0x........         DC32     final
   \   0000011C   0x........         DC32     Flag_Island
   \   00000120   0x........         DC32     Behind_LeaveIsland_ChaseFlag
   \   00000124   0x........         DC32     OverTake_Straight
   \   00000128   0x........         DC32     Case2_Ahead_KeepSide

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   Commun_Shift
         8   -> Commu_Onetime


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  Cnt_Encoder
     300  Commun_Shift
       4  Mixed_Distance
       4  shift_error

 
   8 bytes in section .bss
   4 bytes in section .data
 300 bytes in section .text
 
 300 bytes of CODE memory
  12 bytes of DATA memory

Errors: none
Warnings: none
