###############################################################################
#
# IAR ANSI C/C++ Compiler V7.20.2.7424/W32 for ARM        11/Jul/2017  13:16:08
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after（完整程序）\app\Dis_Calc.c
#    Command line =  
#        C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after（完整程序）\app\Dis_Calc.c
#        -D LPLD_K60 -D USE_K60F12 -lCN
#        C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after（完整程序）\iar\FLASH\List\
#        -lB
#        C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after（完整程序）\iar\FLASH\List\
#        -o
#        C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after（完整程序）\iar\FLASH\Obj\
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M4F -e --fpu=None --dlib_config
#        D:\IAR\arm\INC\c\DLib_Config_Normal.h -I
#        C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after（完整程序）\iar\..\app\
#        -I
#        C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after（完整程序）\iar\..\..\..\lib\CPU\
#        -I
#        C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after（完整程序）\iar\..\..\..\lib\common\
#        -I
#        C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after（完整程序）\iar\..\..\..\lib\LPLD\
#        -I
#        C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after（完整程序）\iar\..\..\..\lib\LPLD\HW\
#        -I
#        C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after（完整程序）\iar\..\..\..\lib\LPLD\DEV\
#        -I
#        C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after（完整程序）\iar\..\..\..\lib\LPLD\FUNC\
#        -I
#        C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after（完整程序）\iar\..\..\..\lib\uCOS-II\Ports\
#        -I
#        C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after（完整程序）\iar\..\..\..\lib\uCOS-II\Source\
#        -I
#        C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after（完整程序）\iar\..\..\..\lib\FatFs\
#        -I
#        C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after（完整程序）\iar\..\..\..\lib\FatFs\option\
#        -I
#        C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after（完整程序）\iar\..\..\..\lib\USB\common\
#        -I
#        C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after（完整程序）\iar\..\..\..\lib\USB\driver\
#        -I
#        C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after（完整程序）\iar\..\..\..\lib\USB\descriptor\
#        -I
#        C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after（完整程序）\iar\..\..\..\lib\USB\class\
#        -Ol -I D:\IAR\arm\CMSIS\Include\ -D ARM_MATH_CM4
#    List file    =  
#        C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after（完整程序）\iar\FLASH\List\Dis_Calc.lst
#    Object file  =  
#        C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after（完整程序）\iar\FLASH\Obj\Dis_Calc.o
#
###############################################################################

C:\Users\lenovo\Desktop\17智能车省赛\LPLD_OSKinetis_V3\project\chase_after（完整程序）\app\Dis_Calc.c
      1          #include "Includes.h"
      2          
      3          
      4          //变量定义与声明

   \                                 In section .bss, align 1
      5          uint8  Flag_Island = 0; //0:正常, 1:环岛内
   \                     Flag_Island:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
      6          uint8  Flag_Ramp = 0;   //0:正常，1:坡道
   \                     Flag_Ramp:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
      7          uint8  Flag_Island_Last = 0;
   \                     Flag_Island_Last:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
      8          uint8  final_Last;
   \                     final_Last:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
      9          uint8  fang = 0;
   \                     fang:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
     10          uint8  Flag_ForceTurn = 0;
   \                     Flag_ForceTurn:
   \   00000000                      DS8 1

   \                                 In section .bss, align 4
     11          uint8  peak_real[8];
   \                     peak_real:
   \   00000000                      DS8 8

   \                                 In section .bss, align 4
     12          uint8  sensor[8][SampleNum] = {0}; //电感的多个采样值
   \                     sensor:
   \   00000000                      DS8 800

   \                                 In section .bss, align 4
     13          int    peak[8] = {0}; //每个电感的峰峰值
   \                     peak:
   \   00000000                      DS8 32

   \                                 In section .bss, align 4
     14          int    E_Max[8] = {0};     //电感1，2，3最大电压值
   \                     E_Max:
   \   00000000                      DS8 32

   \                                 In section .bss, align 4
     15          int    start_peak[8][10] = {0};
   \                     start_peak:
   \   00000000                      DS8 320

   \                                 In section .bss, align 4
     16          int    RampIn_Distance=0;
   \                     RampIn_Distance:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     17          int    RampAdmit_Distance = 0;
   \                     RampAdmit_Distance:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     18          int    ForceTurn_Distance=0;
   \                     ForceTurn_Distance:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     19          int    Pre_Error[ErrorNum] = {0};
   \                     Pre_Error:
   \   00000000                      DS8 400

   \                                 In section .bss, align 4
     20          int    Error = 0;
   \                     Error:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     21          int    Turn_Distance;
   \                     Turn_Distance:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     22          int    Case3_Behind_PassDis;
   \                     Case3_Behind_PassDis:
   \   00000000                      DS8 4
     23          extern long int IslandIn_Distance;
     24          extern uint8 Island_Error_Turn;
     25          extern uint8 Turn_Around;
     26          extern uint8 Family_Status;
     27          extern uint8 final;
     28          extern uint8 Flag_Island_Confirm_Dir;
     29          extern uint8 Dir_IslandTurn;
     30          extern uint8 Flag_Island_Position;
     31          extern uint8 OverTake_Straight;
     32          extern uint8 Case2_Ahead_KeepSide;  
     33          extern uint8 Case2_Behind_KeepSide;
     34          extern uint8 OverTake_CrossRoad;
     35          extern uint8 Case3_Ahead_Stop;
     36          extern uint8 Case3_Behind_Pass;
     37          extern uint8 Case3_Turn;
     38          extern uint8 SendCommand;
     39          extern int Count;
     40          extern int Mixed_Distance;
     41          extern int Ahead_TurnError; 
     42          extern int Distance;
     43          extern int Flag_Island_Confirm;
     44          extern int Flag_Island_Confirm_Last;
     45          extern long int Sum_Distance;
     46          extern float  error_all;
     47          extern struct Speed Spd;
     48          extern int final_Distance;
     49          extern uint8 Spd_Switch;
     50          /*
     51          function:解算车体中心到
     52          
     53          
     54          跑道中心的距离
     55          return:Null
     56          */

   \                                 In section .text, align 2, keep-with-next
     57          void Dis_Calc()
     58          {
   \                     Dis_Calc: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
     59            //adc转换
     60            ad_convert();
   \   00000002   0x.... 0x....      BL       ad_convert
     61            //每个电感的峰峰值解算
     62            peak_calc();
   \   00000006   0x.... 0x....      BL       peak_calc
     63            //坡道处理
     64            Ramp_Handle();
   \   0000000A   0x.... 0x....      BL       Ramp_Handle
     65            //和环岛相关的处理
     66            Island_Handle();
   \   0000000E   0x.... 0x....      BL       Island_Handle
     67            //偏差计算
     68            error_calcu(); 
   \   00000012   0x.... 0x....      BL       error_calcu
     69            //偏差赋值
     70            Error = (int)error_all;
   \   00000016   0x.... 0x....      LDR.W    R0,??DataTable6
   \   0000001A   0x6800             LDR      R0,[R0, #+0]
   \   0000001C   0x.... 0x....      BL       __aeabi_f2iz
   \   00000020   0x.... 0x....      LDR.W    R1,??DataTable6_1
   \   00000024   0x6008             STR      R0,[R1, #+0]
     71            //防丢线
     72            Prevent_LostLine(); 
   \   00000026   0x.... 0x....      BL       Prevent_LostLine
     73          }
   \   0000002A   0xBD01             POP      {R0,PC}          ;; return
     74          
     75          /*
     76          function:Prevent the generation of the wrong Error
     77          return:Null*/

   \                                 In section .text, align 2, keep-with-next
     78          void Prevent_LostLine()
     79          { 
   \                     Prevent_LostLine: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
     80            //---------环岛外路径防丢线--------//
     81             if(     Flag_Ramp==0
     82                 && Flag_Island_Confirm==0 && Flag_Island==0 && final==0
     83                 //&& Flag_Island_Confirm_Last==0 && final_Last==0 && Flag_Island_Last==0
     84                 && (peak[0]<60 && peak[4]<60 && peak[1]<50 && peak[3]<50)
     85                 && Case2_Ahead_KeepSide==0 && Case2_Behind_KeepSide==0
     86               )    
   \   00000002   0x.... 0x....      LDR.W    R0,??DataTable6_2
   \   00000006   0x7800             LDRB     R0,[R0, #+0]
   \   00000008   0x.... 0x....      LDR.W    R1,??DataTable6_3
   \   0000000C   0x6809             LDR      R1,[R1, #+0]
   \   0000000E   0x4308             ORRS     R0,R1,R0
   \   00000010   0x2800             CMP      R0,#+0
   \   00000012   0xD140             BNE.N    ??Prevent_LostLine_0
   \   00000014   0x.... 0x....      LDR.W    R0,??DataTable6_4
   \   00000018   0x7800             LDRB     R0,[R0, #+0]
   \   0000001A   0x2800             CMP      R0,#+0
   \   0000001C   0xD13B             BNE.N    ??Prevent_LostLine_0
   \   0000001E   0x.... 0x....      LDR.W    R0,??DataTable6_5
   \   00000022   0x7800             LDRB     R0,[R0, #+0]
   \   00000024   0x2800             CMP      R0,#+0
   \   00000026   0xD136             BNE.N    ??Prevent_LostLine_0
   \   00000028   0x.... 0x....      LDR.W    R0,??DataTable6_6
   \   0000002C   0x6800             LDR      R0,[R0, #+0]
   \   0000002E   0x283C             CMP      R0,#+60
   \   00000030   0xDA31             BGE.N    ??Prevent_LostLine_0
   \   00000032   0x.... 0x....      LDR.W    R0,??DataTable6_6
   \   00000036   0x6900             LDR      R0,[R0, #+16]
   \   00000038   0x283C             CMP      R0,#+60
   \   0000003A   0xDA2C             BGE.N    ??Prevent_LostLine_0
   \   0000003C   0x.... 0x....      LDR.W    R0,??DataTable6_6
   \   00000040   0x6840             LDR      R0,[R0, #+4]
   \   00000042   0x2832             CMP      R0,#+50
   \   00000044   0xDA27             BGE.N    ??Prevent_LostLine_0
   \   00000046   0x.... 0x....      LDR.W    R0,??DataTable6_6
   \   0000004A   0x68C0             LDR      R0,[R0, #+12]
   \   0000004C   0x2832             CMP      R0,#+50
   \   0000004E   0xDA22             BGE.N    ??Prevent_LostLine_0
   \   00000050   0x.... 0x....      LDR.W    R0,??DataTable6_7
   \   00000054   0x7800             LDRB     R0,[R0, #+0]
   \   00000056   0x2800             CMP      R0,#+0
   \   00000058   0xD11D             BNE.N    ??Prevent_LostLine_0
   \   0000005A   0x.... 0x....      LDR.W    R0,??DataTable6_8
   \   0000005E   0x7800             LDRB     R0,[R0, #+0]
   \   00000060   0x2800             CMP      R0,#+0
   \   00000062   0xD118             BNE.N    ??Prevent_LostLine_0
     87               {
     88                   if(fabs(Error-Pre_Error[ErrorNum-1]) > 25)
   \   00000064   0x.... 0x....      LDR.W    R0,??DataTable6_1
   \   00000068   0x6800             LDR      R0,[R0, #+0]
   \   0000006A   0x.... 0x....      LDR.W    R1,??DataTable6_9
   \   0000006E   0xF8D1 0x118C      LDR      R1,[R1, #+396]
   \   00000072   0x1A40             SUBS     R0,R0,R1
   \   00000074   0x.... 0x....      BL       __aeabi_i2d
   \   00000078   0xF031 0x4100      BICS     R1,R1,#0x80000000
   \   0000007C   0x2201             MOVS     R2,#+1
   \   0000007E   0x.... 0x....      LDR.W    R3,??DataTable6_10  ;; 0x40390000
   \   00000082   0x.... 0x....      BL       __aeabi_cdrcmple
   \   00000086   0xD806             BHI.N    ??Prevent_LostLine_0
     89                      Error = Pre_Error[ErrorNum-1]; 
   \   00000088   0x.... 0x....      LDR.W    R0,??DataTable6_9
   \   0000008C   0xF8D0 0x018C      LDR      R0,[R0, #+396]
   \   00000090   0x.... 0x....      LDR.W    R1,??DataTable6_1
   \   00000094   0x6008             STR      R0,[R1, #+0]
     90               }
     91             
     92            //--------环岛内路径防丢线---------//
     93             //第一、二步防丢线
     94             if(Flag_Island_Confirm!=0 || final!=0)
   \                     ??Prevent_LostLine_0: (+1)
   \   00000096   0x.... 0x....      LDR.W    R0,??DataTable6_3
   \   0000009A   0x6800             LDR      R0,[R0, #+0]
   \   0000009C   0x2800             CMP      R0,#+0
   \   0000009E   0xD104             BNE.N    ??Prevent_LostLine_1
   \   000000A0   0x.... 0x....      LDR.W    R0,??DataTable6_5
   \   000000A4   0x7800             LDRB     R0,[R0, #+0]
   \   000000A6   0x2800             CMP      R0,#+0
   \   000000A8   0xD05C             BEQ.N    ??Prevent_LostLine_2
     95               if(Turn_Around == 0)
   \                     ??Prevent_LostLine_1: (+1)
   \   000000AA   0x.... 0x....      LDR.W    R0,??DataTable6_11
   \   000000AE   0x7800             LDRB     R0,[R0, #+0]
   \   000000B0   0x2800             CMP      R0,#+0
   \   000000B2   0xD157             BNE.N    ??Prevent_LostLine_2
     96                {
     97                  //数值不能变小
     98                  if(fabs(Error) < fabs(Pre_Error[ErrorNum-1]))
   \   000000B4   0x.... 0x....      LDR.W    R0,??DataTable6_1
   \   000000B8   0x6800             LDR      R0,[R0, #+0]
   \   000000BA   0x.... 0x....      BL       __aeabi_i2d
   \   000000BE   0x0004             MOVS     R4,R0
   \   000000C0   0x000D             MOVS     R5,R1
   \   000000C2   0xF035 0x4500      BICS     R5,R5,#0x80000000
   \   000000C6   0x.... 0x....      LDR.W    R0,??DataTable6_9
   \   000000CA   0xF8D0 0x018C      LDR      R0,[R0, #+396]
   \   000000CE   0x.... 0x....      BL       __aeabi_i2d
   \   000000D2   0xF031 0x4100      BICS     R1,R1,#0x80000000
   \   000000D6   0x0002             MOVS     R2,R0
   \   000000D8   0x000B             MOVS     R3,R1
   \   000000DA   0x0020             MOVS     R0,R4
   \   000000DC   0x0029             MOVS     R1,R5
   \   000000DE   0x.... 0x....      BL       __aeabi_cdcmple
   \   000000E2   0xD220             BCS.N    ??Prevent_LostLine_3
     99                  {
    100                     if(Error > 0)
   \   000000E4   0x.... 0x....      LDR.W    R0,??DataTable6_1
   \   000000E8   0x6800             LDR      R0,[R0, #+0]
   \   000000EA   0x2801             CMP      R0,#+1
   \   000000EC   0xDB0D             BLT.N    ??Prevent_LostLine_4
    101                       Error = (int)(fabs(Pre_Error[ErrorNum-1]));
   \   000000EE   0x.... 0x....      LDR.W    R0,??DataTable6_9
   \   000000F2   0xF8D0 0x018C      LDR      R0,[R0, #+396]
   \   000000F6   0x.... 0x....      BL       __aeabi_i2d
   \   000000FA   0xF031 0x4100      BICS     R1,R1,#0x80000000
   \   000000FE   0x.... 0x....      BL       __aeabi_d2iz
   \   00000102   0x.... 0x....      LDR.W    R1,??DataTable6_1
   \   00000106   0x6008             STR      R0,[R1, #+0]
   \   00000108   0xE00D             B.N      ??Prevent_LostLine_3
    102                     else
    103                       Error = -(int)(fabs(Pre_Error[ErrorNum-1]));
   \                     ??Prevent_LostLine_4: (+1)
   \   0000010A   0x.... 0x....      LDR.W    R0,??DataTable6_9
   \   0000010E   0xF8D0 0x018C      LDR      R0,[R0, #+396]
   \   00000112   0x.... 0x....      BL       __aeabi_i2d
   \   00000116   0xF031 0x4100      BICS     R1,R1,#0x80000000
   \   0000011A   0x.... 0x....      BL       __aeabi_d2iz
   \   0000011E   0x4240             RSBS     R0,R0,#+0
   \   00000120   0x.... 0x....      LDR.W    R1,??DataTable6_1
   \   00000124   0x6008             STR      R0,[R1, #+0]
    104                  }
    105                    
    106                  //方向不能改变
    107                  if(Flag_Island_Confirm_Dir == Turn_Left)
   \                     ??Prevent_LostLine_3: (+1)
   \   00000126   0x.... 0x....      LDR.W    R0,??DataTable6_12
   \   0000012A   0x7800             LDRB     R0,[R0, #+0]
   \   0000012C   0x286B             CMP      R0,#+107
   \   0000012E   0xD10C             BNE.N    ??Prevent_LostLine_5
    108                     Error = (int)(fabs(Error));  
   \   00000130   0x.... 0x....      LDR.W    R0,??DataTable6_1
   \   00000134   0x6800             LDR      R0,[R0, #+0]
   \   00000136   0x.... 0x....      BL       __aeabi_i2d
   \   0000013A   0xF031 0x4100      BICS     R1,R1,#0x80000000
   \   0000013E   0x.... 0x....      BL       __aeabi_d2iz
   \   00000142   0x.... 0x....      LDR.W    R1,??DataTable6_1
   \   00000146   0x6008             STR      R0,[R1, #+0]
   \   00000148   0xE00C             B.N      ??Prevent_LostLine_2
    109                  else
    110                     Error = -(int)(fabs(Error));          
   \                     ??Prevent_LostLine_5: (+1)
   \   0000014A   0x.... 0x....      LDR.W    R0,??DataTable6_1
   \   0000014E   0x6800             LDR      R0,[R0, #+0]
   \   00000150   0x.... 0x....      BL       __aeabi_i2d
   \   00000154   0xF031 0x4100      BICS     R1,R1,#0x80000000
   \   00000158   0x.... 0x....      BL       __aeabi_d2iz
   \   0000015C   0x4240             RSBS     R0,R0,#+0
   \   0000015E   0x.... 0x....      LDR.W    R1,??DataTable6_1
   \   00000162   0x6008             STR      R0,[R1, #+0]
    111                }  
    112             
    113             //环岛内防丢线
    114             if(Flag_Island==1 && fabs(Error-Pre_Error[ErrorNum-1]) >= 30)
   \                     ??Prevent_LostLine_2: (+1)
   \   00000164   0x.... 0x....      LDR.W    R0,??DataTable6_4
   \   00000168   0x7800             LDRB     R0,[R0, #+0]
   \   0000016A   0x2801             CMP      R0,#+1
   \   0000016C   0xD138             BNE.N    ??Prevent_LostLine_6
   \   0000016E   0x.... 0x....      LDR.W    R0,??DataTable6_1
   \   00000172   0x6800             LDR      R0,[R0, #+0]
   \   00000174   0x.... 0x....      LDR.W    R1,??DataTable6_9
   \   00000178   0xF8D1 0x118C      LDR      R1,[R1, #+396]
   \   0000017C   0x1A40             SUBS     R0,R0,R1
   \   0000017E   0x.... 0x....      BL       __aeabi_i2d
   \   00000182   0xF031 0x4100      BICS     R1,R1,#0x80000000
   \   00000186   0x2200             MOVS     R2,#+0
   \   00000188   0x.... 0x....      LDR.W    R3,??DataTable6_13  ;; 0x403e0000
   \   0000018C   0x.... 0x....      BL       __aeabi_cdrcmple
   \   00000190   0xD826             BHI.N    ??Prevent_LostLine_6
    115               {
    116                  //还处于直道时，防止跳变
    117                  if(peak[7]>55)
   \   00000192   0x.... 0x....      LDR.W    R0,??DataTable6_6
   \   00000196   0x69C0             LDR      R0,[R0, #+28]
   \   00000198   0x2838             CMP      R0,#+56
   \   0000019A   0xDB07             BLT.N    ??Prevent_LostLine_7
    118                      Error = Pre_Error[ErrorNum-1];  
   \   0000019C   0x.... 0x....      LDR.W    R0,??DataTable6_9
   \   000001A0   0xF8D0 0x018C      LDR      R0,[R0, #+396]
   \   000001A4   0x.... 0x....      LDR.W    R1,??DataTable6_1
   \   000001A8   0x6008             STR      R0,[R1, #+0]
   \   000001AA   0xE019             B.N      ??Prevent_LostLine_6
    119                  
    120                  //进入环岛时，需要条件
    121                  else
    122                    { 
    123                      if(peak[1]+peak[3]<30 && peak[1]<20 && peak[3]<20)
   \                     ??Prevent_LostLine_7: (+1)
   \   000001AC   0x.... 0x....      LDR.W    R0,??DataTable6_6
   \   000001B0   0x6840             LDR      R0,[R0, #+4]
   \   000001B2   0x.... 0x....      LDR.W    R1,??DataTable6_6
   \   000001B6   0x68C9             LDR      R1,[R1, #+12]
   \   000001B8   0x1808             ADDS     R0,R1,R0
   \   000001BA   0x281E             CMP      R0,#+30
   \   000001BC   0xDA10             BGE.N    ??Prevent_LostLine_6
   \   000001BE   0x.... 0x....      LDR.W    R0,??DataTable6_6
   \   000001C2   0x6840             LDR      R0,[R0, #+4]
   \   000001C4   0x2814             CMP      R0,#+20
   \   000001C6   0xDA0B             BGE.N    ??Prevent_LostLine_6
   \   000001C8   0x.... 0x....      LDR.W    R0,??DataTable6_6
   \   000001CC   0x68C0             LDR      R0,[R0, #+12]
   \   000001CE   0x2814             CMP      R0,#+20
   \   000001D0   0xDA06             BGE.N    ??Prevent_LostLine_6
    124                          Error = Pre_Error[ErrorNum-1];  
   \   000001D2   0x.... 0x....      LDR.W    R0,??DataTable6_9
   \   000001D6   0xF8D0 0x018C      LDR      R0,[R0, #+396]
   \   000001DA   0x.... 0x....      LDR.W    R1,??DataTable6_1
   \   000001DE   0x6008             STR      R0,[R1, #+0]
    125                    }
    126               }
    127               
    128             
    129            
    130            //-----------坡道防丢线------------//
    131            if(     Flag_Ramp==1  && Flag_Island_Confirm==0 && Flag_Island==0 && final==0
    132                 && Flag_Island_Confirm_Last==0 && final_Last==0 && Flag_Island_Last==0 )    
   \                     ??Prevent_LostLine_6: (+1)
   \   000001E0   0x.... 0x....      LDR.W    R0,??DataTable6_2
   \   000001E4   0x7800             LDRB     R0,[R0, #+0]
   \   000001E6   0x2801             CMP      R0,#+1
   \   000001E8   0xD135             BNE.N    ??Prevent_LostLine_8
   \   000001EA   0x.... 0x....      LDR.W    R0,??DataTable6_3
   \   000001EE   0x6800             LDR      R0,[R0, #+0]
   \   000001F0   0x2800             CMP      R0,#+0
   \   000001F2   0xD130             BNE.N    ??Prevent_LostLine_8
   \   000001F4   0x.... 0x....      LDR.W    R0,??DataTable6_4
   \   000001F8   0x7800             LDRB     R0,[R0, #+0]
   \   000001FA   0x2800             CMP      R0,#+0
   \   000001FC   0xD12B             BNE.N    ??Prevent_LostLine_8
   \   000001FE   0x.... 0x....      LDR.W    R0,??DataTable6_5
   \   00000202   0x7800             LDRB     R0,[R0, #+0]
   \   00000204   0x.... 0x....      LDR.W    R1,??DataTable6_14
   \   00000208   0x6809             LDR      R1,[R1, #+0]
   \   0000020A   0x4308             ORRS     R0,R1,R0
   \   0000020C   0x2800             CMP      R0,#+0
   \   0000020E   0xD122             BNE.N    ??Prevent_LostLine_8
   \   00000210   0x.... 0x....      LDR.W    R0,??DataTable6_15
   \   00000214   0x7800             LDRB     R0,[R0, #+0]
   \   00000216   0x2800             CMP      R0,#+0
   \   00000218   0xD11D             BNE.N    ??Prevent_LostLine_8
   \   0000021A   0x.... 0x....      LDR.W    R0,??DataTable6_16
   \   0000021E   0x7800             LDRB     R0,[R0, #+0]
   \   00000220   0x2800             CMP      R0,#+0
   \   00000222   0xD118             BNE.N    ??Prevent_LostLine_8
    133               {
    134                   if(fabs(Error-Pre_Error[ErrorNum-1]) > 50)
   \   00000224   0x.... 0x....      LDR.W    R0,??DataTable6_1
   \   00000228   0x6800             LDR      R0,[R0, #+0]
   \   0000022A   0x.... 0x....      LDR.W    R1,??DataTable6_9
   \   0000022E   0xF8D1 0x118C      LDR      R1,[R1, #+396]
   \   00000232   0x1A40             SUBS     R0,R0,R1
   \   00000234   0x.... 0x....      BL       __aeabi_i2d
   \   00000238   0xF031 0x4100      BICS     R1,R1,#0x80000000
   \   0000023C   0x2201             MOVS     R2,#+1
   \   0000023E   0x.... 0x....      LDR.W    R3,??DataTable6_17  ;; 0x40490000
   \   00000242   0x.... 0x....      BL       __aeabi_cdrcmple
   \   00000246   0xD806             BHI.N    ??Prevent_LostLine_8
    135                      Error = Pre_Error[ErrorNum-1]; 
   \   00000248   0x.... 0x....      LDR.W    R0,??DataTable6_9
   \   0000024C   0xF8D0 0x018C      LDR      R0,[R0, #+396]
   \   00000250   0x.... 0x....      LDR.W    R1,??DataTable6_1
   \   00000254   0x6008             STR      R0,[R1, #+0]
    136               }
    137             
    138            //-----后车进入环岛的强制转向------//
    139            //进入环岛后，后车强行转向
    140               if(Turn_Around == 1)
   \                     ??Prevent_LostLine_8: (+1)
   \   00000256   0x.... 0x....      LDR.W    R0,??DataTable6_11
   \   0000025A   0x7800             LDRB     R0,[R0, #+0]
   \   0000025C   0x2801             CMP      R0,#+1
   \   0000025E   0xD127             BNE.N    ??Prevent_LostLine_9
    141                   if(Flag_Island_Confirm>=Confirm_First*100 || final!=0)
   \   00000260   0x.... 0x....      LDR.W    R0,??DataTable6_3
   \   00000264   0x6800             LDR      R0,[R0, #+0]
   \   00000266   0xF240 0x51DC      MOVW     R1,#+1500
   \   0000026A   0x4288             CMP      R0,R1
   \   0000026C   0xDA04             BGE.N    ??Prevent_LostLine_10
   \   0000026E   0x.... 0x....      LDR.W    R0,??DataTable6_5
   \   00000272   0x7800             LDRB     R0,[R0, #+0]
   \   00000274   0x2800             CMP      R0,#+0
   \   00000276   0xD01B             BEQ.N    ??Prevent_LostLine_9
    142                      {        
    143                         if(Dir_IslandTurn == Turn_Right)
   \                     ??Prevent_LostLine_10: (+1)
   \   00000278   0x.... 0x....      LDR.W    R0,??DataTable6_18
   \   0000027C   0x7800             LDRB     R0,[R0, #+0]
   \   0000027E   0x286A             CMP      R0,#+106
   \   00000280   0xD109             BNE.N    ??Prevent_LostLine_11
    144                            Error = -(20+2*Spd_Switch);
   \   00000282   0x.... 0x....      LDR.W    R0,??DataTable6_19
   \   00000286   0x7800             LDRB     R0,[R0, #+0]
   \   00000288   0x0040             LSLS     R0,R0,#+1
   \   0000028A   0x3014             ADDS     R0,R0,#+20
   \   0000028C   0x4240             RSBS     R0,R0,#+0
   \   0000028E   0x.... 0x....      LDR.W    R1,??DataTable6_1
   \   00000292   0x6008             STR      R0,[R1, #+0]
   \   00000294   0xE00C             B.N      ??Prevent_LostLine_9
    145                         else if(Dir_IslandTurn == Turn_Left)
   \                     ??Prevent_LostLine_11: (+1)
   \   00000296   0x.... 0x....      LDR.W    R0,??DataTable6_18
   \   0000029A   0x7800             LDRB     R0,[R0, #+0]
   \   0000029C   0x286B             CMP      R0,#+107
   \   0000029E   0xD107             BNE.N    ??Prevent_LostLine_9
    146                            Error =  (20+2*Spd_Switch);
   \   000002A0   0x.... 0x....      LDR.W    R0,??DataTable6_19
   \   000002A4   0x7800             LDRB     R0,[R0, #+0]
   \   000002A6   0x0040             LSLS     R0,R0,#+1
   \   000002A8   0x3014             ADDS     R0,R0,#+20
   \   000002AA   0x.... 0x....      LDR.W    R1,??DataTable6_1
   \   000002AE   0x6008             STR      R0,[R1, #+0]
    147                      }
    148            
    149            for(uint8 i=0; i<ErrorNum-1; i++)
   \                     ??Prevent_LostLine_9: (+1)
   \   000002B0   0x2000             MOVS     R0,#+0
   \   000002B2   0xE00B             B.N      ??Prevent_LostLine_12
    150               Pre_Error[i] = Pre_Error[i+1];
   \                     ??Prevent_LostLine_13: (+1)
   \   000002B4   0x.... 0x....      LDR.W    R1,??DataTable6_9
   \   000002B8   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000002BA   0xEB11 0x0180      ADDS     R1,R1,R0, LSL #+2
   \   000002BE   0x6849             LDR      R1,[R1, #+4]
   \   000002C0   0x.... 0x....      LDR.W    R2,??DataTable6_9
   \   000002C4   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000002C6   0xF842 0x1020      STR      R1,[R2, R0, LSL #+2]
   \   000002CA   0x1C40             ADDS     R0,R0,#+1
   \                     ??Prevent_LostLine_12: (+1)
   \   000002CC   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000002CE   0x2863             CMP      R0,#+99
   \   000002D0   0xDBF0             BLT.N    ??Prevent_LostLine_13
    151            Pre_Error[ErrorNum-1] = Error;
   \   000002D2   0x.... 0x....      LDR.W    R0,??DataTable6_1
   \   000002D6   0x6800             LDR      R0,[R0, #+0]
   \   000002D8   0x.... 0x....      LDR.W    R1,??DataTable6_9
   \   000002DC   0xF8C1 0x018C      STR      R0,[R1, #+396]
    152          }
   \   000002E0   0xBD31             POP      {R0,R4,R5,PC}    ;; return
    153          
    154          
    155          //开机采值

   \                                 In section .text, align 2, keep-with-next
    156          void Set_SensorPara(uint8 cnt)
    157          {
   \                     Set_SensorPara: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x0004             MOVS     R4,R0
    158            //采值
    159            for(uint8 i=0; i<SampleNum; i++)
   \   00000004   0x2500             MOVS     R5,#+0
   \   00000006   0xE056             B.N      ??Set_SensorPara_0
    160             {
    161                sensor[0][i] = LPLD_ADC_Get(ADC1, AD12);
   \                     ??Set_SensorPara_1: (+1)
   \   00000008   0x210C             MOVS     R1,#+12
   \   0000000A   0x.... 0x....      LDR.W    R0,??DataTable6_20  ;; 0x400bb000
   \   0000000E   0x.... 0x....      BL       LPLD_ADC_Get
   \   00000012   0x.... 0x....      LDR.W    R1,??DataTable6_21
   \   00000016   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000018   0x5468             STRB     R0,[R5, R1]
    162                sensor[7][i] = LPLD_ADC_Get(ADC1, AD9);
   \   0000001A   0x2109             MOVS     R1,#+9
   \   0000001C   0x.... 0x....      LDR.W    R0,??DataTable6_20  ;; 0x400bb000
   \   00000020   0x.... 0x....      BL       LPLD_ADC_Get
   \   00000024   0x.... 0x....      LDR.W    R1,??DataTable6_21
   \   00000028   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   0000002A   0x1869             ADDS     R1,R5,R1
   \   0000002C   0xF881 0x02BC      STRB     R0,[R1, #+700]
    163                sensor[1][i] = LPLD_ADC_Get(ADC1, AD15);
   \   00000030   0x210F             MOVS     R1,#+15
   \   00000032   0x.... 0x....      LDR.W    R0,??DataTable6_20  ;; 0x400bb000
   \   00000036   0x.... 0x....      BL       LPLD_ADC_Get
   \   0000003A   0x.... 0x....      LDR.W    R1,??DataTable6_21
   \   0000003E   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000040   0x1869             ADDS     R1,R5,R1
   \   00000042   0xF881 0x0064      STRB     R0,[R1, #+100]
    164                sensor[2][i] = LPLD_ADC_Get(ADC1, AD14); 
   \   00000046   0x210E             MOVS     R1,#+14
   \   00000048   0x.... 0x....      LDR.W    R0,??DataTable6_20  ;; 0x400bb000
   \   0000004C   0x.... 0x....      BL       LPLD_ADC_Get
   \   00000050   0x.... 0x....      LDR.W    R1,??DataTable6_21
   \   00000054   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000056   0x1869             ADDS     R1,R5,R1
   \   00000058   0xF881 0x00C8      STRB     R0,[R1, #+200]
    165                sensor[3][i] = LPLD_ADC_Get(ADC1, AD10);
   \   0000005C   0x210A             MOVS     R1,#+10
   \   0000005E   0x.... 0x....      LDR.W    R0,??DataTable6_20  ;; 0x400bb000
   \   00000062   0x.... 0x....      BL       LPLD_ADC_Get
   \   00000066   0x.... 0x....      LDR.W    R1,??DataTable6_21
   \   0000006A   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   0000006C   0x1869             ADDS     R1,R5,R1
   \   0000006E   0xF881 0x012C      STRB     R0,[R1, #+300]
    166                sensor[4][i] = LPLD_ADC_Get(ADC1, AD11);
   \   00000072   0x210B             MOVS     R1,#+11
   \   00000074   0x.... 0x....      LDR.W    R0,??DataTable6_20  ;; 0x400bb000
   \   00000078   0x.... 0x....      BL       LPLD_ADC_Get
   \   0000007C   0x.... 0x....      LDR.W    R1,??DataTable6_21
   \   00000080   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000082   0x1869             ADDS     R1,R5,R1
   \   00000084   0xF881 0x0190      STRB     R0,[R1, #+400]
    167                sensor[5][i] = LPLD_ADC_Get(ADC1, AD13);
   \   00000088   0x210D             MOVS     R1,#+13
   \   0000008A   0x.... 0x....      LDR.W    R0,??DataTable6_20  ;; 0x400bb000
   \   0000008E   0x.... 0x....      BL       LPLD_ADC_Get
   \   00000092   0x.... 0x....      LDR.W    R1,??DataTable6_21
   \   00000096   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000098   0x1869             ADDS     R1,R5,R1
   \   0000009A   0xF881 0x01F4      STRB     R0,[R1, #+500]
    168                sensor[6][i] = LPLD_ADC_Get(ADC1, AD8);
   \   0000009E   0x2108             MOVS     R1,#+8
   \   000000A0   0x.... 0x....      LDR.W    R0,??DataTable6_20  ;; 0x400bb000
   \   000000A4   0x.... 0x....      BL       LPLD_ADC_Get
   \   000000A8   0x.... 0x....      LDR.W    R1,??DataTable6_21
   \   000000AC   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   000000AE   0x1869             ADDS     R1,R5,R1
   \   000000B0   0xF881 0x0258      STRB     R0,[R1, #+600]
    169             } 
   \   000000B4   0x1C6D             ADDS     R5,R5,#+1
   \                     ??Set_SensorPara_0: (+1)
   \   000000B6   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   000000B8   0x2D64             CMP      R5,#+100
   \   000000BA   0xDBA5             BLT.N    ??Set_SensorPara_1
    170            
    171            for(uint8 i=0; i<8; i++)
   \   000000BC   0x2500             MOVS     R5,#+0
   \   000000BE   0xE00D             B.N      ??Set_SensorPara_2
    172            {
    173               peak[i] = CalcMaxToMin(sensor[i]);
   \                     ??Set_SensorPara_3: (+1)
   \   000000C0   0x.... 0x....      LDR.W    R0,??DataTable6_21
   \   000000C4   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   000000C6   0x2164             MOVS     R1,#+100
   \   000000C8   0xFB01 0x0005      MLA      R0,R1,R5,R0
   \   000000CC   0x.... 0x....      BL       CalcMaxToMin
   \   000000D0   0x.... 0x....      LDR.W    R1,??DataTable6_6
   \   000000D4   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   000000D6   0xF841 0x0025      STR      R0,[R1, R5, LSL #+2]
    174            }
   \   000000DA   0x1C6D             ADDS     R5,R5,#+1
   \                     ??Set_SensorPara_2: (+1)
   \   000000DC   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   000000DE   0x2D08             CMP      R5,#+8
   \   000000E0   0xDBEE             BLT.N    ??Set_SensorPara_3
    175            
    176            for(uint8 i=0; i<8; i++)
   \   000000E2   0x2000             MOVS     R0,#+0
   \   000000E4   0xE00E             B.N      ??Set_SensorPara_4
    177               start_peak[i][cnt] = peak[i];
   \                     ??Set_SensorPara_5: (+1)
   \   000000E6   0x.... 0x....      LDR.W    R1,??DataTable6_22
   \   000000EA   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000EC   0x2228             MOVS     R2,#+40
   \   000000EE   0xFB02 0x1100      MLA      R1,R2,R0,R1
   \   000000F2   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000000F4   0x.... 0x....      LDR.W    R2,??DataTable6_6
   \   000000F8   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000FA   0xF852 0x2020      LDR      R2,[R2, R0, LSL #+2]
   \   000000FE   0xF841 0x2024      STR      R2,[R1, R4, LSL #+2]
   \   00000102   0x1C40             ADDS     R0,R0,#+1
   \                     ??Set_SensorPara_4: (+1)
   \   00000104   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000106   0x2808             CMP      R0,#+8
   \   00000108   0xDBED             BLT.N    ??Set_SensorPara_5
    178          }
   \   0000010A   0xBD31             POP      {R0,R4,R5,PC}    ;; return
    179          
    180          

   \                                 In section .text, align 2, keep-with-next
    181          void  AveEmax_Calcu() 
    182          {
   \                     AveEmax_Calcu: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    183             for(uint8 i=0; i<10; i++)
   \   00000002   0x2000             MOVS     R0,#+0
   \   00000004   0xE06B             B.N      ??AveEmax_Calcu_0
    184               {
    185                 E_Max[0] += start_peak[0][i];
   \                     ??AveEmax_Calcu_1: (+1)
   \   00000006   0x.... 0x....      LDR.W    R1,??DataTable6_23
   \   0000000A   0x6809             LDR      R1,[R1, #+0]
   \   0000000C   0x.... 0x....      LDR.W    R2,??DataTable6_22
   \   00000010   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000012   0xF852 0x2020      LDR      R2,[R2, R0, LSL #+2]
   \   00000016   0x1851             ADDS     R1,R2,R1
   \   00000018   0x.... 0x....      LDR.W    R2,??DataTable6_23
   \   0000001C   0x6011             STR      R1,[R2, #+0]
    186                 E_Max[1] += start_peak[1][i];
   \   0000001E   0x.... 0x....      LDR.W    R1,??DataTable6_23
   \   00000022   0x6849             LDR      R1,[R1, #+4]
   \   00000024   0x.... 0x....      LDR.W    R2,??DataTable6_22
   \   00000028   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000002A   0xEB12 0x0280      ADDS     R2,R2,R0, LSL #+2
   \   0000002E   0x6A92             LDR      R2,[R2, #+40]
   \   00000030   0x1851             ADDS     R1,R2,R1
   \   00000032   0x.... 0x....      LDR.W    R2,??DataTable6_23
   \   00000036   0x6051             STR      R1,[R2, #+4]
    187                 E_Max[2] += start_peak[2][i];
   \   00000038   0x.... 0x....      LDR.W    R1,??DataTable6_23
   \   0000003C   0x6889             LDR      R1,[R1, #+8]
   \   0000003E   0x.... 0x....      LDR.W    R2,??DataTable6_22
   \   00000042   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000044   0xEB12 0x0280      ADDS     R2,R2,R0, LSL #+2
   \   00000048   0x6D12             LDR      R2,[R2, #+80]
   \   0000004A   0x1851             ADDS     R1,R2,R1
   \   0000004C   0x.... 0x....      LDR.W    R2,??DataTable6_23
   \   00000050   0x6091             STR      R1,[R2, #+8]
    188                 E_Max[3] += start_peak[3][i];
   \   00000052   0x.... 0x....      LDR.W    R1,??DataTable6_23
   \   00000056   0x68C9             LDR      R1,[R1, #+12]
   \   00000058   0x.... 0x....      LDR.W    R2,??DataTable6_22
   \   0000005C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000005E   0xEB12 0x0280      ADDS     R2,R2,R0, LSL #+2
   \   00000062   0x6F92             LDR      R2,[R2, #+120]
   \   00000064   0x1851             ADDS     R1,R2,R1
   \   00000066   0x.... 0x....      LDR.W    R2,??DataTable6_23
   \   0000006A   0x60D1             STR      R1,[R2, #+12]
    189                 E_Max[4] += start_peak[4][i];
   \   0000006C   0x.... 0x....      LDR.W    R1,??DataTable6_23
   \   00000070   0x6909             LDR      R1,[R1, #+16]
   \   00000072   0x.... 0x....      LDR.W    R2,??DataTable6_22
   \   00000076   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000078   0xEB12 0x0280      ADDS     R2,R2,R0, LSL #+2
   \   0000007C   0xF8D2 0x20A0      LDR      R2,[R2, #+160]
   \   00000080   0x1851             ADDS     R1,R2,R1
   \   00000082   0x.... 0x....      LDR.W    R2,??DataTable6_23
   \   00000086   0x6111             STR      R1,[R2, #+16]
    190                 E_Max[5] += start_peak[5][i];
   \   00000088   0x.... 0x....      LDR.W    R1,??DataTable6_23
   \   0000008C   0x6949             LDR      R1,[R1, #+20]
   \   0000008E   0x.... 0x....      LDR.W    R2,??DataTable6_22
   \   00000092   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000094   0xEB12 0x0280      ADDS     R2,R2,R0, LSL #+2
   \   00000098   0xF8D2 0x20C8      LDR      R2,[R2, #+200]
   \   0000009C   0x1851             ADDS     R1,R2,R1
   \   0000009E   0x.... 0x....      LDR.W    R2,??DataTable6_23
   \   000000A2   0x6151             STR      R1,[R2, #+20]
    191                 E_Max[6] += start_peak[6][i];
   \   000000A4   0x.... 0x....      LDR.W    R1,??DataTable6_23
   \   000000A8   0x6989             LDR      R1,[R1, #+24]
   \   000000AA   0x.... 0x....      LDR.W    R2,??DataTable6_22
   \   000000AE   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000B0   0xEB12 0x0280      ADDS     R2,R2,R0, LSL #+2
   \   000000B4   0xF8D2 0x20F0      LDR      R2,[R2, #+240]
   \   000000B8   0x1851             ADDS     R1,R2,R1
   \   000000BA   0x.... 0x....      LDR.W    R2,??DataTable6_23
   \   000000BE   0x6191             STR      R1,[R2, #+24]
    192                 E_Max[7] += start_peak[7][i];
   \   000000C0   0x.... 0x....      LDR.W    R1,??DataTable6_23
   \   000000C4   0x69C9             LDR      R1,[R1, #+28]
   \   000000C6   0x.... 0x....      LDR.W    R2,??DataTable6_22
   \   000000CA   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000CC   0xEB12 0x0280      ADDS     R2,R2,R0, LSL #+2
   \   000000D0   0xF8D2 0x2118      LDR      R2,[R2, #+280]
   \   000000D4   0x1851             ADDS     R1,R2,R1
   \   000000D6   0x.... 0x....      LDR.W    R2,??DataTable6_23
   \   000000DA   0x61D1             STR      R1,[R2, #+28]
    193               }
   \   000000DC   0x1C40             ADDS     R0,R0,#+1
   \                     ??AveEmax_Calcu_0: (+1)
   \   000000DE   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000E0   0x280A             CMP      R0,#+10
   \   000000E2   0xDB90             BLT.N    ??AveEmax_Calcu_1
    194             
    195             for(uint8 i=0; i<8; i++)
   \   000000E4   0x2000             MOVS     R0,#+0
   \   000000E6   0xE00D             B.N      ??AveEmax_Calcu_2
    196                E_Max[i] /= 10;
   \                     ??AveEmax_Calcu_3: (+1)
   \   000000E8   0x.... 0x....      LDR.W    R1,??DataTable6_23
   \   000000EC   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000EE   0xF851 0x1020      LDR      R1,[R1, R0, LSL #+2]
   \   000000F2   0x220A             MOVS     R2,#+10
   \   000000F4   0xFB91 0xF1F2      SDIV     R1,R1,R2
   \   000000F8   0x.... 0x....      LDR.W    R2,??DataTable6_23
   \   000000FC   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000FE   0xF842 0x1020      STR      R1,[R2, R0, LSL #+2]
   \   00000102   0x1C40             ADDS     R0,R0,#+1
   \                     ??AveEmax_Calcu_2: (+1)
   \   00000104   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000106   0x2808             CMP      R0,#+8
   \   00000108   0xDBEE             BLT.N    ??AveEmax_Calcu_3
    197             
    198             E_Max[1]  = (E_Max[1]+E_Max[3])/2;
   \   0000010A   0x.... 0x....      LDR.W    R0,??DataTable6_23
   \   0000010E   0x6840             LDR      R0,[R0, #+4]
   \   00000110   0x.... 0x....      LDR.W    R1,??DataTable6_23
   \   00000114   0x68C9             LDR      R1,[R1, #+12]
   \   00000116   0x1808             ADDS     R0,R1,R0
   \   00000118   0x2102             MOVS     R1,#+2
   \   0000011A   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   0000011E   0x.... 0x....      LDR.W    R1,??DataTable6_23
   \   00000122   0x6048             STR      R0,[R1, #+4]
    199             E_Max[3]  =  E_Max[1];
   \   00000124   0x.... 0x....      LDR.W    R0,??DataTable6_23
   \   00000128   0x6840             LDR      R0,[R0, #+4]
   \   0000012A   0x.... 0x....      LDR.W    R1,??DataTable6_23
   \   0000012E   0x60C8             STR      R0,[R1, #+12]
    200             E_Max[1] *= (Sensor_Height2*Sensor_Height2 + 7.5*7.5)/(Sensor_Height2*Sensor_Height2*1.0);
   \   00000130   0x.... 0x....      LDR.W    R0,??DataTable6_23
   \   00000134   0x6840             LDR      R0,[R0, #+4]
   \   00000136   0x.... 0x....      BL       __aeabi_i2d
   \   0000013A   0x.... 0x....      LDR.W    R2,??DataTable6_24  ;; 0x9161f9ae
   \   0000013E   0x.... 0x....      LDR.W    R3,??DataTable6_25  ;; 0x3ff4f032
   \   00000142   0x.... 0x....      BL       __aeabi_dmul
   \   00000146   0x.... 0x....      BL       __aeabi_d2iz
   \   0000014A   0x.... 0x....      LDR.W    R1,??DataTable6_23
   \   0000014E   0x6048             STR      R0,[R1, #+4]
    201             E_Max[3]  =  E_Max[1];  
   \   00000150   0x.... 0x....      LDR.W    R0,??DataTable6_23
   \   00000154   0x6840             LDR      R0,[R0, #+4]
   \   00000156   0x.... 0x....      LDR.W    R1,??DataTable6_23
   \   0000015A   0x60C8             STR      R0,[R1, #+12]
    202             E_Max[5] *= 2;
   \   0000015C   0x.... 0x....      LDR.W    R0,??DataTable6_23
   \   00000160   0x6940             LDR      R0,[R0, #+20]
   \   00000162   0x0040             LSLS     R0,R0,#+1
   \   00000164   0x.... 0x....      LDR.W    R1,??DataTable6_23
   \   00000168   0x6148             STR      R0,[R1, #+20]
    203             E_Max[6] *= 2;
   \   0000016A   0x.... 0x....      LDR.W    R0,??DataTable6_23
   \   0000016E   0x6980             LDR      R0,[R0, #+24]
   \   00000170   0x0040             LSLS     R0,R0,#+1
   \   00000172   0x.... 0x....      LDR.W    R1,??DataTable6_23
   \   00000176   0x6188             STR      R0,[R1, #+24]
    204             
    205             for(uint8 i=0; i<8; i++)
   \   00000178   0x2000             MOVS     R0,#+0
   \   0000017A   0xE00D             B.N      ??AveEmax_Calcu_4
    206               if(E_Max[i] < 5)
   \                     ??AveEmax_Calcu_5: (+1)
   \   0000017C   0x.... 0x....      LDR.W    R1,??DataTable6_23
   \   00000180   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000182   0xF851 0x1020      LDR      R1,[R1, R0, LSL #+2]
   \   00000186   0x2905             CMP      R1,#+5
   \   00000188   0xDA05             BGE.N    ??AveEmax_Calcu_6
    207                  E_Max[i] = 5;
   \   0000018A   0x2105             MOVS     R1,#+5
   \   0000018C   0x.... 0x....      LDR.W    R2,??DataTable6_23
   \   00000190   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000192   0xF842 0x1020      STR      R1,[R2, R0, LSL #+2]
   \                     ??AveEmax_Calcu_6: (+1)
   \   00000196   0x1C40             ADDS     R0,R0,#+1
   \                     ??AveEmax_Calcu_4: (+1)
   \   00000198   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000019A   0x2808             CMP      R0,#+8
   \   0000019C   0xDBEE             BLT.N    ??AveEmax_Calcu_5
    208          }
   \   0000019E   0xBD01             POP      {R0,PC}          ;; return
    209          
    210          

   \                                 In section .text, align 2, keep-with-next
    211          void ad_convert()
    212          {
   \                     ad_convert: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
    213            uint16 i;
    214            for(i=0; i<SampleNum; i++)
   \   00000002   0x2400             MOVS     R4,#+0
   \   00000004   0xE056             B.N      ??ad_convert_0
    215              {
    216                sensor[0][i] = LPLD_ADC_Get(ADC1, AD12);
   \                     ??ad_convert_1: (+1)
   \   00000006   0x210C             MOVS     R1,#+12
   \   00000008   0x.... 0x....      LDR.W    R0,??DataTable6_20  ;; 0x400bb000
   \   0000000C   0x.... 0x....      BL       LPLD_ADC_Get
   \   00000010   0x.... 0x....      LDR.W    R1,??DataTable6_21
   \   00000014   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   00000016   0x5460             STRB     R0,[R4, R1]
    217                sensor[7][i] = LPLD_ADC_Get(ADC1, AD9);
   \   00000018   0x2109             MOVS     R1,#+9
   \   0000001A   0x.... 0x....      LDR.W    R0,??DataTable6_20  ;; 0x400bb000
   \   0000001E   0x.... 0x....      BL       LPLD_ADC_Get
   \   00000022   0x.... 0x....      LDR.W    R1,??DataTable6_21
   \   00000026   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   00000028   0x1861             ADDS     R1,R4,R1
   \   0000002A   0xF881 0x02BC      STRB     R0,[R1, #+700]
    218                sensor[1][i] = LPLD_ADC_Get(ADC1, AD15);
   \   0000002E   0x210F             MOVS     R1,#+15
   \   00000030   0x.... 0x....      LDR.W    R0,??DataTable6_20  ;; 0x400bb000
   \   00000034   0x.... 0x....      BL       LPLD_ADC_Get
   \   00000038   0x.... 0x....      LDR.W    R1,??DataTable6_21
   \   0000003C   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   0000003E   0x1861             ADDS     R1,R4,R1
   \   00000040   0xF881 0x0064      STRB     R0,[R1, #+100]
    219                sensor[2][i] = LPLD_ADC_Get(ADC1, AD14); 
   \   00000044   0x210E             MOVS     R1,#+14
   \   00000046   0x.... 0x....      LDR.W    R0,??DataTable6_20  ;; 0x400bb000
   \   0000004A   0x.... 0x....      BL       LPLD_ADC_Get
   \   0000004E   0x.... 0x....      LDR.W    R1,??DataTable6_21
   \   00000052   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   00000054   0x1861             ADDS     R1,R4,R1
   \   00000056   0xF881 0x00C8      STRB     R0,[R1, #+200]
    220                sensor[3][i] = LPLD_ADC_Get(ADC1, AD10);
   \   0000005A   0x210A             MOVS     R1,#+10
   \   0000005C   0x.... 0x....      LDR.W    R0,??DataTable6_20  ;; 0x400bb000
   \   00000060   0x.... 0x....      BL       LPLD_ADC_Get
   \   00000064   0x.... 0x....      LDR.W    R1,??DataTable6_21
   \   00000068   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   0000006A   0x1861             ADDS     R1,R4,R1
   \   0000006C   0xF881 0x012C      STRB     R0,[R1, #+300]
    221                sensor[4][i] = LPLD_ADC_Get(ADC1, AD11);
   \   00000070   0x210B             MOVS     R1,#+11
   \   00000072   0x.... 0x....      LDR.W    R0,??DataTable6_20  ;; 0x400bb000
   \   00000076   0x.... 0x....      BL       LPLD_ADC_Get
   \   0000007A   0x.... 0x....      LDR.W    R1,??DataTable6_21
   \   0000007E   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   00000080   0x1861             ADDS     R1,R4,R1
   \   00000082   0xF881 0x0190      STRB     R0,[R1, #+400]
    222                sensor[5][i] = LPLD_ADC_Get(ADC1, AD13);
   \   00000086   0x210D             MOVS     R1,#+13
   \   00000088   0x.... 0x....      LDR.W    R0,??DataTable6_20  ;; 0x400bb000
   \   0000008C   0x.... 0x....      BL       LPLD_ADC_Get
   \   00000090   0x.... 0x....      LDR.W    R1,??DataTable6_21
   \   00000094   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   00000096   0x1861             ADDS     R1,R4,R1
   \   00000098   0xF881 0x01F4      STRB     R0,[R1, #+500]
    223                sensor[6][i] = LPLD_ADC_Get(ADC1, AD8);
   \   0000009C   0x2108             MOVS     R1,#+8
   \   0000009E   0x.... 0x....      LDR.W    R0,??DataTable6_20  ;; 0x400bb000
   \   000000A2   0x.... 0x....      BL       LPLD_ADC_Get
   \   000000A6   0x.... 0x....      LDR.W    R1,??DataTable6_21
   \   000000AA   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   000000AC   0x1861             ADDS     R1,R4,R1
   \   000000AE   0xF881 0x0258      STRB     R0,[R1, #+600]
    224              }   
   \   000000B2   0x1C64             ADDS     R4,R4,#+1
   \                     ??ad_convert_0: (+1)
   \   000000B4   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   000000B6   0x2C64             CMP      R4,#+100
   \   000000B8   0xDBA5             BLT.N    ??ad_convert_1
    225          }
   \   000000BA   0xBD10             POP      {R4,PC}          ;; return
    226          
    227          

   \                                 In section .text, align 2, keep-with-next
    228          void peak_calc()
    229          {
   \                     peak_calc: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
    230             uint8 i;
    231            
    232             for(i=0; i<8; i++)
   \   00000002   0x2400             MOVS     R4,#+0
   \   00000004   0xE016             B.N      ??peak_calc_0
    233             {
    234                peak[i] = CalcMaxToMin(sensor[i]);
   \                     ??peak_calc_1: (+1)
   \   00000006   0x.... 0x....      LDR.W    R0,??DataTable6_21
   \   0000000A   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000000C   0x2164             MOVS     R1,#+100
   \   0000000E   0xFB01 0x0004      MLA      R0,R1,R4,R0
   \   00000012   0x.... 0x....      BL       CalcMaxToMin
   \   00000016   0x.... 0x....      LDR.W    R1,??DataTable6_6
   \   0000001A   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000001C   0xF841 0x0024      STR      R0,[R1, R4, LSL #+2]
    235                peak_real[i] = peak[i];
   \   00000020   0x.... 0x....      LDR.W    R0,??DataTable6_6
   \   00000024   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000026   0xF850 0x0024      LDR      R0,[R0, R4, LSL #+2]
   \   0000002A   0x.... 0x....      LDR.W    R1,??DataTable6_26
   \   0000002E   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000030   0x5460             STRB     R0,[R4, R1]
    236             }
   \   00000032   0x1C64             ADDS     R4,R4,#+1
   \                     ??peak_calc_0: (+1)
   \   00000034   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000036   0x2C08             CMP      R4,#+8
   \   00000038   0xDBE5             BLT.N    ??peak_calc_1
    237            
    238            // peak1, peak2, peak3归一化 
    239             peak[1] = (int)( (peak[1]* 100)/(E_Max[1]*1.0) );   
   \   0000003A   0x.... 0x....      LDR.W    R0,??DataTable6_6
   \   0000003E   0x6840             LDR      R0,[R0, #+4]
   \   00000040   0x2164             MOVS     R1,#+100
   \   00000042   0x4348             MULS     R0,R1,R0
   \   00000044   0x.... 0x....      BL       __aeabi_i2d
   \   00000048   0x0004             MOVS     R4,R0
   \   0000004A   0x000D             MOVS     R5,R1
   \   0000004C   0x.... 0x....      LDR.W    R0,??DataTable6_23
   \   00000050   0x6840             LDR      R0,[R0, #+4]
   \   00000052   0x.... 0x....      BL       __aeabi_i2d
   \   00000056   0x2200             MOVS     R2,#+0
   \   00000058   0x.... 0x....      LDR.W    R3,??DataTable6_27  ;; 0x3ff00000
   \   0000005C   0x.... 0x....      BL       __aeabi_dmul
   \   00000060   0x0002             MOVS     R2,R0
   \   00000062   0x000B             MOVS     R3,R1
   \   00000064   0x0020             MOVS     R0,R4
   \   00000066   0x0029             MOVS     R1,R5
   \   00000068   0x.... 0x....      BL       __aeabi_ddiv
   \   0000006C   0x.... 0x....      BL       __aeabi_d2iz
   \   00000070   0x.... 0x....      LDR.W    R1,??DataTable6_6
   \   00000074   0x6048             STR      R0,[R1, #+4]
    240             peak[3] = (int)( (peak[3]* 100)/(E_Max[3]*1.0) );   
   \   00000076   0x.... 0x....      LDR.W    R0,??DataTable6_6
   \   0000007A   0x68C0             LDR      R0,[R0, #+12]
   \   0000007C   0x2164             MOVS     R1,#+100
   \   0000007E   0x4348             MULS     R0,R1,R0
   \   00000080   0x.... 0x....      BL       __aeabi_i2d
   \   00000084   0x0004             MOVS     R4,R0
   \   00000086   0x000D             MOVS     R5,R1
   \   00000088   0x.... 0x....      LDR.W    R0,??DataTable6_23
   \   0000008C   0x68C0             LDR      R0,[R0, #+12]
   \   0000008E   0x.... 0x....      BL       __aeabi_i2d
   \   00000092   0x2200             MOVS     R2,#+0
   \   00000094   0x.... 0x....      LDR.W    R3,??DataTable6_27  ;; 0x3ff00000
   \   00000098   0x.... 0x....      BL       __aeabi_dmul
   \   0000009C   0x0002             MOVS     R2,R0
   \   0000009E   0x000B             MOVS     R3,R1
   \   000000A0   0x0020             MOVS     R0,R4
   \   000000A2   0x0029             MOVS     R1,R5
   \   000000A4   0x.... 0x....      BL       __aeabi_ddiv
   \   000000A8   0x.... 0x....      BL       __aeabi_d2iz
   \   000000AC   0x.... 0x....      LDR.W    R1,??DataTable6_6
   \   000000B0   0x60C8             STR      R0,[R1, #+12]
    241             peak[2] = (int)( (peak[2]* 100)/(E_Max[2]*1.0) );   
   \   000000B2   0x.... 0x....      LDR.W    R0,??DataTable6_6
   \   000000B6   0x6880             LDR      R0,[R0, #+8]
   \   000000B8   0x2164             MOVS     R1,#+100
   \   000000BA   0x4348             MULS     R0,R1,R0
   \   000000BC   0x.... 0x....      BL       __aeabi_i2d
   \   000000C0   0x0004             MOVS     R4,R0
   \   000000C2   0x000D             MOVS     R5,R1
   \   000000C4   0x.... 0x....      LDR.W    R0,??DataTable6_23
   \   000000C8   0x6880             LDR      R0,[R0, #+8]
   \   000000CA   0x.... 0x....      BL       __aeabi_i2d
   \   000000CE   0x2200             MOVS     R2,#+0
   \   000000D0   0x.... 0x....      LDR.W    R3,??DataTable6_27  ;; 0x3ff00000
   \   000000D4   0x.... 0x....      BL       __aeabi_dmul
   \   000000D8   0x0002             MOVS     R2,R0
   \   000000DA   0x000B             MOVS     R3,R1
   \   000000DC   0x0020             MOVS     R0,R4
   \   000000DE   0x0029             MOVS     R1,R5
   \   000000E0   0x.... 0x....      BL       __aeabi_ddiv
   \   000000E4   0x.... 0x....      BL       __aeabi_d2iz
   \   000000E8   0x.... 0x....      LDR.W    R1,??DataTable6_6
   \   000000EC   0x6088             STR      R0,[R1, #+8]
    242             
    243             //peak0, peak4归一化
    244             peak[0] = (int)(peak[0]/(E_Max[2]*1.0) * 120);   
   \   000000EE   0x.... 0x....      LDR.W    R0,??DataTable6_6
   \   000000F2   0x6800             LDR      R0,[R0, #+0]
   \   000000F4   0x.... 0x....      BL       __aeabi_i2d
   \   000000F8   0x0004             MOVS     R4,R0
   \   000000FA   0x000D             MOVS     R5,R1
   \   000000FC   0x.... 0x....      LDR.W    R0,??DataTable6_23
   \   00000100   0x6880             LDR      R0,[R0, #+8]
   \   00000102   0x.... 0x....      BL       __aeabi_i2d
   \   00000106   0x2200             MOVS     R2,#+0
   \   00000108   0x.... 0x....      LDR.W    R3,??DataTable6_27  ;; 0x3ff00000
   \   0000010C   0x.... 0x....      BL       __aeabi_dmul
   \   00000110   0x0002             MOVS     R2,R0
   \   00000112   0x000B             MOVS     R3,R1
   \   00000114   0x0020             MOVS     R0,R4
   \   00000116   0x0029             MOVS     R1,R5
   \   00000118   0x.... 0x....      BL       __aeabi_ddiv
   \   0000011C   0x2200             MOVS     R2,#+0
   \   0000011E   0x.... 0x....      LDR.W    R3,??DataTable6_28  ;; 0x405e0000
   \   00000122   0x.... 0x....      BL       __aeabi_dmul
   \   00000126   0x.... 0x....      BL       __aeabi_d2iz
   \   0000012A   0x.... 0x....      LDR.W    R1,??DataTable6_6
   \   0000012E   0x6008             STR      R0,[R1, #+0]
    245             peak[4] = (int)(peak[4]/(E_Max[2]*1.0) * 120);  
   \   00000130   0x.... 0x....      LDR.W    R0,??DataTable6_6
   \   00000134   0x6900             LDR      R0,[R0, #+16]
   \   00000136   0x.... 0x....      BL       __aeabi_i2d
   \   0000013A   0x0004             MOVS     R4,R0
   \   0000013C   0x000D             MOVS     R5,R1
   \   0000013E   0x.... 0x....      LDR.W    R0,??DataTable6_23
   \   00000142   0x6880             LDR      R0,[R0, #+8]
   \   00000144   0x.... 0x....      BL       __aeabi_i2d
   \   00000148   0x2200             MOVS     R2,#+0
   \   0000014A   0x.... 0x....      LDR.W    R3,??DataTable6_27  ;; 0x3ff00000
   \   0000014E   0x.... 0x....      BL       __aeabi_dmul
   \   00000152   0x0002             MOVS     R2,R0
   \   00000154   0x000B             MOVS     R3,R1
   \   00000156   0x0020             MOVS     R0,R4
   \   00000158   0x0029             MOVS     R1,R5
   \   0000015A   0x.... 0x....      BL       __aeabi_ddiv
   \   0000015E   0x2200             MOVS     R2,#+0
   \   00000160   0x.... 0x....      LDR.W    R3,??DataTable6_28  ;; 0x405e0000
   \   00000164   0x.... 0x....      BL       __aeabi_dmul
   \   00000168   0x.... 0x....      BL       __aeabi_d2iz
   \   0000016C   0x.... 0x....      LDR.W    R1,??DataTable6_6
   \   00000170   0x6108             STR      R0,[R1, #+16]
    246             
    247             //peak5, peak6，peak7归一化 
    248             peak[5] = (int)( (peak[5]* 100)/(E_Max[5]*1.0) );   
   \   00000172   0x....             LDR.N    R0,??DataTable6_6
   \   00000174   0x6940             LDR      R0,[R0, #+20]
   \   00000176   0x2164             MOVS     R1,#+100
   \   00000178   0x4348             MULS     R0,R1,R0
   \   0000017A   0x.... 0x....      BL       __aeabi_i2d
   \   0000017E   0x0004             MOVS     R4,R0
   \   00000180   0x000D             MOVS     R5,R1
   \   00000182   0x.... 0x....      LDR.W    R0,??DataTable6_23
   \   00000186   0x6940             LDR      R0,[R0, #+20]
   \   00000188   0x.... 0x....      BL       __aeabi_i2d
   \   0000018C   0x2200             MOVS     R2,#+0
   \   0000018E   0x.... 0x....      LDR.W    R3,??DataTable6_27  ;; 0x3ff00000
   \   00000192   0x.... 0x....      BL       __aeabi_dmul
   \   00000196   0x0002             MOVS     R2,R0
   \   00000198   0x000B             MOVS     R3,R1
   \   0000019A   0x0020             MOVS     R0,R4
   \   0000019C   0x0029             MOVS     R1,R5
   \   0000019E   0x.... 0x....      BL       __aeabi_ddiv
   \   000001A2   0x.... 0x....      BL       __aeabi_d2iz
   \   000001A6   0x....             LDR.N    R1,??DataTable6_6
   \   000001A8   0x6148             STR      R0,[R1, #+20]
    249             peak[6] = (int)( (peak[6]* 100)/(E_Max[6]*1.0) );   
   \   000001AA   0x....             LDR.N    R0,??DataTable6_6
   \   000001AC   0x6980             LDR      R0,[R0, #+24]
   \   000001AE   0x2164             MOVS     R1,#+100
   \   000001B0   0x4348             MULS     R0,R1,R0
   \   000001B2   0x.... 0x....      BL       __aeabi_i2d
   \   000001B6   0x0004             MOVS     R4,R0
   \   000001B8   0x000D             MOVS     R5,R1
   \   000001BA   0x....             LDR.N    R0,??DataTable6_23
   \   000001BC   0x6980             LDR      R0,[R0, #+24]
   \   000001BE   0x.... 0x....      BL       __aeabi_i2d
   \   000001C2   0x2200             MOVS     R2,#+0
   \   000001C4   0x....             LDR.N    R3,??DataTable6_27  ;; 0x3ff00000
   \   000001C6   0x.... 0x....      BL       __aeabi_dmul
   \   000001CA   0x0002             MOVS     R2,R0
   \   000001CC   0x000B             MOVS     R3,R1
   \   000001CE   0x0020             MOVS     R0,R4
   \   000001D0   0x0029             MOVS     R1,R5
   \   000001D2   0x.... 0x....      BL       __aeabi_ddiv
   \   000001D6   0x.... 0x....      BL       __aeabi_d2iz
   \   000001DA   0x....             LDR.N    R1,??DataTable6_6
   \   000001DC   0x6188             STR      R0,[R1, #+24]
    250             peak[7] = (int)( (peak[7]* 100)/(E_Max[7]*1.0) );   
   \   000001DE   0x....             LDR.N    R0,??DataTable6_6
   \   000001E0   0x69C0             LDR      R0,[R0, #+28]
   \   000001E2   0x2164             MOVS     R1,#+100
   \   000001E4   0x4348             MULS     R0,R1,R0
   \   000001E6   0x.... 0x....      BL       __aeabi_i2d
   \   000001EA   0x0004             MOVS     R4,R0
   \   000001EC   0x000D             MOVS     R5,R1
   \   000001EE   0x....             LDR.N    R0,??DataTable6_23
   \   000001F0   0x69C0             LDR      R0,[R0, #+28]
   \   000001F2   0x.... 0x....      BL       __aeabi_i2d
   \   000001F6   0x2200             MOVS     R2,#+0
   \   000001F8   0x....             LDR.N    R3,??DataTable6_27  ;; 0x3ff00000
   \   000001FA   0x.... 0x....      BL       __aeabi_dmul
   \   000001FE   0x0002             MOVS     R2,R0
   \   00000200   0x000B             MOVS     R3,R1
   \   00000202   0x0020             MOVS     R0,R4
   \   00000204   0x0029             MOVS     R1,R5
   \   00000206   0x.... 0x....      BL       __aeabi_ddiv
   \   0000020A   0x.... 0x....      BL       __aeabi_d2iz
   \   0000020E   0x....             LDR.N    R1,??DataTable6_6
   \   00000210   0x61C8             STR      R0,[R1, #+28]
    251          } 
   \   00000212   0xBD31             POP      {R0,R4,R5,PC}    ;; return
    252          
    253          

   \                                 In section .text, align 2, keep-with-next
    254          uint8 CalcMaxToMin(uint8 data[SampleNum]) 
    255          {
   \                     CalcMaxToMin: (+1)
   \   00000000   0xB410             PUSH     {R4}
    256              uint8 Max = 0;
   \   00000002   0x2100             MOVS     R1,#+0
    257              uint8 Min = 0;
   \   00000004   0x2200             MOVS     R2,#+0
    258              Max = data[0];
   \   00000006   0x7803             LDRB     R3,[R0, #+0]
   \   00000008   0x0019             MOVS     R1,R3
    259              Min = data[0];
   \   0000000A   0x7803             LDRB     R3,[R0, #+0]
   \   0000000C   0x001A             MOVS     R2,R3
    260              
    261              for(uint8 i=0; i<SampleNum; i++) 
   \   0000000E   0x2300             MOVS     R3,#+0
   \   00000010   0xE00E             B.N      ??CalcMaxToMin_0
    262                 {
    263                   if(data[i] > Max)   Max = data[i];
   \                     ??CalcMaxToMin_1: (+1)
   \   00000012   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   00000014   0x5C1C             LDRB     R4,[R3, R0]
   \   00000016   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000018   0x42A1             CMP      R1,R4
   \   0000001A   0xD201             BCS.N    ??CalcMaxToMin_2
   \   0000001C   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   0000001E   0x5C19             LDRB     R1,[R3, R0]
    264                   if(data[i] < Min)   Min = data[i];
   \                     ??CalcMaxToMin_2: (+1)
   \   00000020   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   00000022   0x5C1C             LDRB     R4,[R3, R0]
   \   00000024   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   00000026   0x4294             CMP      R4,R2
   \   00000028   0xD201             BCS.N    ??CalcMaxToMin_3
   \   0000002A   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   0000002C   0x5C1A             LDRB     R2,[R3, R0]
    265                 }
   \                     ??CalcMaxToMin_3: (+1)
   \   0000002E   0x1C5B             ADDS     R3,R3,#+1
   \                     ??CalcMaxToMin_0: (+1)
   \   00000030   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   00000032   0x2B64             CMP      R3,#+100
   \   00000034   0xDBED             BLT.N    ??CalcMaxToMin_1
    266              return Max-Min;
   \   00000036   0x1A88             SUBS     R0,R1,R2
   \   00000038   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000003A   0xBC10             POP      {R4}
   \   0000003C   0x4770             BX       LR               ;; return
    267          } 
    268            
    269          

   \                                 In section .bss, align 4
    270          float  error_all;
   \                     error_all:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
    271          float  error2_all;  
   \                     error2_all:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
    272          float  error7_all;  
   \                     error7_all:
   \   00000000                      DS8 4

   \                                 In section .bss, align 1
    273          uint8   Flag_Direction = 0;
   \                     Flag_Direction:
   \   00000000                      DS8 1

   \                                 In section .text, align 2, keep-with-next
    274          void  error_calcu()
    275          {
   \                     error_calcu: (+1)
   \   00000000   0xB500             PUSH     {LR}
   \   00000002   0xB089             SUB      SP,SP,#+36
    276             float  error_sensor[8] = {0};  //每个电感到跑道中心的距离
   \   00000004   0xA800             ADD      R0,SP,#+0
   \   00000006   0x2120             MOVS     R1,#+32
   \   00000008   0x.... 0x....      BL       __aeabi_memclr4
    277             int peak2;
    278             int peak7;
    279             
    280             peak2 = peak[2];
   \   0000000C   0x....             LDR.N    R0,??DataTable6_6
   \   0000000E   0x6880             LDR      R0,[R0, #+8]
    281             if(peak2 > 100)    peak2 = 100;
   \   00000010   0x2865             CMP      R0,#+101
   \   00000012   0xDB00             BLT.N    ??error_calcu_0
   \   00000014   0x2064             MOVS     R0,#+100
    282             error_sensor[2] = (float)( 100/(peak2*1.0) -1);
   \                     ??error_calcu_0: (+1)
   \   00000016   0x.... 0x....      BL       __aeabi_i2d
   \   0000001A   0x2200             MOVS     R2,#+0
   \   0000001C   0x....             LDR.N    R3,??DataTable6_27  ;; 0x3ff00000
   \   0000001E   0x.... 0x....      BL       __aeabi_dmul
   \   00000022   0x0002             MOVS     R2,R0
   \   00000024   0x000B             MOVS     R3,R1
   \   00000026   0x2000             MOVS     R0,#+0
   \   00000028   0x....             LDR.N    R1,??DataTable6_29  ;; 0x40590000
   \   0000002A   0x.... 0x....      BL       __aeabi_ddiv
   \   0000002E   0x2200             MOVS     R2,#+0
   \   00000030   0x....             LDR.N    R3,??DataTable6_30  ;; 0xbff00000
   \   00000032   0x.... 0x....      BL       __aeabi_dadd
   \   00000036   0x.... 0x....      BL       __aeabi_d2f
   \   0000003A   0x9002             STR      R0,[SP, #+8]
    283             error2_all = Sensor_Height2*sqrt(error_sensor[2]);
   \   0000003C   0x9802             LDR      R0,[SP, #+8]
   \   0000003E   0x.... 0x....      BL       __aeabi_f2d
   \   00000042   0x.... 0x....      BL       sqrt
   \   00000046   0x2200             MOVS     R2,#+0
   \   00000048   0x....             LDR.N    R3,??DataTable6_31  ;; 0x402b0000
   \   0000004A   0x.... 0x....      BL       __aeabi_dmul
   \   0000004E   0x.... 0x....      BL       __aeabi_d2f
   \   00000052   0x....             LDR.N    R1,??DataTable6_32
   \   00000054   0x6008             STR      R0,[R1, #+0]
    284          
    285               
    286             //环岛处理   
    287             if(Flag_Island==1 || Flag_Island_Confirm!=0 || final!=0)
   \   00000056   0x....             LDR.N    R0,??DataTable6_4
   \   00000058   0x7800             LDRB     R0,[R0, #+0]
   \   0000005A   0x2801             CMP      R0,#+1
   \   0000005C   0xD007             BEQ.N    ??error_calcu_1
   \   0000005E   0x....             LDR.N    R0,??DataTable6_3
   \   00000060   0x6800             LDR      R0,[R0, #+0]
   \   00000062   0x2800             CMP      R0,#+0
   \   00000064   0xD103             BNE.N    ??error_calcu_1
   \   00000066   0x....             LDR.N    R0,??DataTable6_5
   \   00000068   0x7800             LDRB     R0,[R0, #+0]
   \   0000006A   0x2800             CMP      R0,#+0
   \   0000006C   0xD025             BEQ.N    ??error_calcu_2
    288              {
    289                peak2 = 2*peak[2];
   \                     ??error_calcu_1: (+1)
   \   0000006E   0x....             LDR.N    R0,??DataTable6_6
   \   00000070   0x6880             LDR      R0,[R0, #+8]
   \   00000072   0x0040             LSLS     R0,R0,#+1
    290                if(peak2 > 100)    peak2 = 100;
   \   00000074   0x2865             CMP      R0,#+101
   \   00000076   0xDB00             BLT.N    ??error_calcu_3
   \   00000078   0x2064             MOVS     R0,#+100
    291                error_sensor[2] = (float)( 100/(peak2*1.0) -1);
   \                     ??error_calcu_3: (+1)
   \   0000007A   0x.... 0x....      BL       __aeabi_i2d
   \   0000007E   0x2200             MOVS     R2,#+0
   \   00000080   0x....             LDR.N    R3,??DataTable6_27  ;; 0x3ff00000
   \   00000082   0x.... 0x....      BL       __aeabi_dmul
   \   00000086   0x0002             MOVS     R2,R0
   \   00000088   0x000B             MOVS     R3,R1
   \   0000008A   0x2000             MOVS     R0,#+0
   \   0000008C   0x....             LDR.N    R1,??DataTable6_29  ;; 0x40590000
   \   0000008E   0x.... 0x....      BL       __aeabi_ddiv
   \   00000092   0x2200             MOVS     R2,#+0
   \   00000094   0x....             LDR.N    R3,??DataTable6_30  ;; 0xbff00000
   \   00000096   0x.... 0x....      BL       __aeabi_dadd
   \   0000009A   0x.... 0x....      BL       __aeabi_d2f
   \   0000009E   0x9002             STR      R0,[SP, #+8]
    292                error2_all = Sensor_Height2*sqrt(error_sensor[2]);     
   \   000000A0   0x9802             LDR      R0,[SP, #+8]
   \   000000A2   0x.... 0x....      BL       __aeabi_f2d
   \   000000A6   0x.... 0x....      BL       sqrt
   \   000000AA   0x2200             MOVS     R2,#+0
   \   000000AC   0x....             LDR.N    R3,??DataTable6_31  ;; 0x402b0000
   \   000000AE   0x.... 0x....      BL       __aeabi_dmul
   \   000000B2   0x.... 0x....      BL       __aeabi_d2f
   \   000000B6   0x....             LDR.N    R1,??DataTable6_32
   \   000000B8   0x6008             STR      R0,[R1, #+0]
    293              }
    294          
    295             //正常距离正负判断
    296             if(Flag_Island==0)
   \                     ??error_calcu_2: (+1)
   \   000000BA   0x....             LDR.N    R0,??DataTable6_4
   \   000000BC   0x7800             LDRB     R0,[R0, #+0]
   \   000000BE   0x2800             CMP      R0,#+0
   \   000000C0   0xD135             BNE.N    ??error_calcu_4
    297                {
    298                   if(peak[1]>30 || peak[3]>30)
   \   000000C2   0x....             LDR.N    R0,??DataTable6_6
   \   000000C4   0x6840             LDR      R0,[R0, #+4]
   \   000000C6   0x281F             CMP      R0,#+31
   \   000000C8   0xDA03             BGE.N    ??error_calcu_5
   \   000000CA   0x....             LDR.N    R0,??DataTable6_6
   \   000000CC   0x68C0             LDR      R0,[R0, #+12]
   \   000000CE   0x281F             CMP      R0,#+31
   \   000000D0   0xDB1D             BLT.N    ??error_calcu_6
    299                    {
    300                      if(peak[1] > peak[3])
   \                     ??error_calcu_5: (+1)
   \   000000D2   0x....             LDR.N    R0,??DataTable6_6
   \   000000D4   0x68C0             LDR      R0,[R0, #+12]
   \   000000D6   0x....             LDR.N    R1,??DataTable6_6
   \   000000D8   0x6849             LDR      R1,[R1, #+4]
   \   000000DA   0x4288             CMP      R0,R1
   \   000000DC   0xDA07             BGE.N    ??error_calcu_7
    301                        {
    302                          error_all = error2_all;
   \   000000DE   0x....             LDR.N    R0,??DataTable6_32
   \   000000E0   0x6800             LDR      R0,[R0, #+0]
   \   000000E2   0x....             LDR.N    R1,??DataTable6
   \   000000E4   0x6008             STR      R0,[R1, #+0]
    303                          Flag_Direction = 1;     
   \   000000E6   0x2001             MOVS     R0,#+1
   \   000000E8   0x....             LDR.N    R1,??DataTable6_33
   \   000000EA   0x7008             STRB     R0,[R1, #+0]
   \   000000EC   0xE054             B.N      ??error_calcu_8
    304                        }
    305                      else if(peak[1] < peak[3])
   \                     ??error_calcu_7: (+1)
   \   000000EE   0x....             LDR.N    R0,??DataTable6_6
   \   000000F0   0x6840             LDR      R0,[R0, #+4]
   \   000000F2   0x....             LDR.N    R1,??DataTable6_6
   \   000000F4   0x68C9             LDR      R1,[R1, #+12]
   \   000000F6   0x4288             CMP      R0,R1
   \   000000F8   0xDA4E             BGE.N    ??error_calcu_8
    306                        {
    307                          error_all = -error2_all;
   \   000000FA   0x....             LDR.N    R0,??DataTable6_32
   \   000000FC   0x6800             LDR      R0,[R0, #+0]
   \   000000FE   0xF090 0x4000      EORS     R0,R0,#0x80000000
   \   00000102   0x....             LDR.N    R1,??DataTable6
   \   00000104   0x6008             STR      R0,[R1, #+0]
    308                          Flag_Direction = 2;     
   \   00000106   0x2002             MOVS     R0,#+2
   \   00000108   0x....             LDR.N    R1,??DataTable6_33
   \   0000010A   0x7008             STRB     R0,[R1, #+0]
   \   0000010C   0xE044             B.N      ??error_calcu_8
    309                        }
    310                    }
    311                   else
    312                    { 
    313                      if(Flag_Direction == 1)
   \                     ??error_calcu_6: (+1)
   \   0000010E   0x....             LDR.N    R0,??DataTable6_33
   \   00000110   0x7800             LDRB     R0,[R0, #+0]
   \   00000112   0x2801             CMP      R0,#+1
   \   00000114   0xD104             BNE.N    ??error_calcu_9
    314                          error_all = error2_all;
   \   00000116   0x....             LDR.N    R0,??DataTable6_32
   \   00000118   0x6800             LDR      R0,[R0, #+0]
   \   0000011A   0x....             LDR.N    R1,??DataTable6
   \   0000011C   0x6008             STR      R0,[R1, #+0]
   \   0000011E   0xE03B             B.N      ??error_calcu_8
    315                      else              
    316                          error_all = -error2_all;
   \                     ??error_calcu_9: (+1)
   \   00000120   0x....             LDR.N    R0,??DataTable6_32
   \   00000122   0x6800             LDR      R0,[R0, #+0]
   \   00000124   0xF090 0x4000      EORS     R0,R0,#0x80000000
   \   00000128   0x....             LDR.N    R1,??DataTable6
   \   0000012A   0x6008             STR      R0,[R1, #+0]
   \   0000012C   0xE034             B.N      ??error_calcu_8
    317                    }        
    318                }
    319             
    320             //环岛方向判断
    321             else
    322               {
    323                   if((peak[1]>25 || peak[3]>25))
   \                     ??error_calcu_4: (+1)
   \   0000012E   0x....             LDR.N    R0,??DataTable6_6
   \   00000130   0x6840             LDR      R0,[R0, #+4]
   \   00000132   0x281A             CMP      R0,#+26
   \   00000134   0xDA03             BGE.N    ??error_calcu_10
   \   00000136   0x....             LDR.N    R0,??DataTable6_6
   \   00000138   0x68C0             LDR      R0,[R0, #+12]
   \   0000013A   0x281A             CMP      R0,#+26
   \   0000013C   0xDB1D             BLT.N    ??error_calcu_11
    324                    {
    325                      if(peak[1] > peak[3])
   \                     ??error_calcu_10: (+1)
   \   0000013E   0x....             LDR.N    R0,??DataTable6_6
   \   00000140   0x68C0             LDR      R0,[R0, #+12]
   \   00000142   0x....             LDR.N    R1,??DataTable6_6
   \   00000144   0x6849             LDR      R1,[R1, #+4]
   \   00000146   0x4288             CMP      R0,R1
   \   00000148   0xDA07             BGE.N    ??error_calcu_12
    326                        {
    327                          error_all = error2_all;
   \   0000014A   0x....             LDR.N    R0,??DataTable6_32
   \   0000014C   0x6800             LDR      R0,[R0, #+0]
   \   0000014E   0x....             LDR.N    R1,??DataTable6
   \   00000150   0x6008             STR      R0,[R1, #+0]
    328                          Flag_Direction = 1;     
   \   00000152   0x2001             MOVS     R0,#+1
   \   00000154   0x....             LDR.N    R1,??DataTable6_33
   \   00000156   0x7008             STRB     R0,[R1, #+0]
   \   00000158   0xE01E             B.N      ??error_calcu_8
    329                        }
    330                      else if(peak[1] < peak[3])
   \                     ??error_calcu_12: (+1)
   \   0000015A   0x....             LDR.N    R0,??DataTable6_6
   \   0000015C   0x6840             LDR      R0,[R0, #+4]
   \   0000015E   0x....             LDR.N    R1,??DataTable6_6
   \   00000160   0x68C9             LDR      R1,[R1, #+12]
   \   00000162   0x4288             CMP      R0,R1
   \   00000164   0xDA18             BGE.N    ??error_calcu_8
    331                        {
    332                          error_all = -error2_all;
   \   00000166   0x....             LDR.N    R0,??DataTable6_32
   \   00000168   0x6800             LDR      R0,[R0, #+0]
   \   0000016A   0xF090 0x4000      EORS     R0,R0,#0x80000000
   \   0000016E   0x....             LDR.N    R1,??DataTable6
   \   00000170   0x6008             STR      R0,[R1, #+0]
    333                          Flag_Direction = 2;     
   \   00000172   0x2002             MOVS     R0,#+2
   \   00000174   0x....             LDR.N    R1,??DataTable6_33
   \   00000176   0x7008             STRB     R0,[R1, #+0]
   \   00000178   0xE00E             B.N      ??error_calcu_8
    334                        }
    335                    }
    336                   else
    337                    { 
    338                      if(Flag_Direction == 1)
   \                     ??error_calcu_11: (+1)
   \   0000017A   0x....             LDR.N    R0,??DataTable6_33
   \   0000017C   0x7800             LDRB     R0,[R0, #+0]
   \   0000017E   0x2801             CMP      R0,#+1
   \   00000180   0xD104             BNE.N    ??error_calcu_13
    339                          error_all = error2_all;
   \   00000182   0x....             LDR.N    R0,??DataTable6_32
   \   00000184   0x6800             LDR      R0,[R0, #+0]
   \   00000186   0x....             LDR.N    R1,??DataTable6
   \   00000188   0x6008             STR      R0,[R1, #+0]
   \   0000018A   0xE005             B.N      ??error_calcu_8
    340                      else              
    341                          error_all = -error2_all;
   \                     ??error_calcu_13: (+1)
   \   0000018C   0x....             LDR.N    R0,??DataTable6_32
   \   0000018E   0x6800             LDR      R0,[R0, #+0]
   \   00000190   0xF090 0x4000      EORS     R0,R0,#0x80000000
   \   00000194   0x....             LDR.N    R1,??DataTable6
   \   00000196   0x6008             STR      R0,[R1, #+0]
    342                    }        
    343              
    344               }
    345          
    346             //-----直道超车偏差修正------------//
    347             if(OverTake_Straight == Yes)
   \                     ??error_calcu_8: (+1)
   \   00000198   0x....             LDR.N    R0,??DataTable6_34
   \   0000019A   0x7800             LDRB     R0,[R0, #+0]
   \   0000019C   0x2801             CMP      R0,#+1
   \   0000019E   0xD11E             BNE.N    ??error_calcu_14
    348               {
    349                  //前车右边停车
    350                  if(Turn_Around == 0)
   \   000001A0   0x....             LDR.N    R0,??DataTable6_11
   \   000001A2   0x7800             LDRB     R0,[R0, #+0]
   \   000001A4   0x2800             CMP      R0,#+0
   \   000001A6   0xD10B             BNE.N    ??error_calcu_15
    351                    {
    352                      if(Case2_Ahead_KeepSide == 1)
   \   000001A8   0x....             LDR.N    R0,??DataTable6_7
   \   000001AA   0x7800             LDRB     R0,[R0, #+0]
   \   000001AC   0x2801             CMP      R0,#+1
   \   000001AE   0xD116             BNE.N    ??error_calcu_14
    353                         error_all = error_all - 14;      
   \   000001B0   0x....             LDR.N    R0,??DataTable6
   \   000001B2   0x6801             LDR      R1,[R0, #+0]
   \   000001B4   0x....             LDR.N    R0,??DataTable6_35  ;; 0xc1600000
   \   000001B6   0x.... 0x....      BL       __aeabi_fadd
   \   000001BA   0x....             LDR.N    R1,??DataTable6
   \   000001BC   0x6008             STR      R0,[R1, #+0]
   \   000001BE   0xE00E             B.N      ??error_calcu_14
    354                    }
    355                  //后车左边超车
    356                  else if(Turn_Around == 1) 
   \                     ??error_calcu_15: (+1)
   \   000001C0   0x....             LDR.N    R0,??DataTable6_11
   \   000001C2   0x7800             LDRB     R0,[R0, #+0]
   \   000001C4   0x2801             CMP      R0,#+1
   \   000001C6   0xD10A             BNE.N    ??error_calcu_14
    357                    {
    358                      if(Case2_Behind_KeepSide == 1)
   \   000001C8   0x....             LDR.N    R0,??DataTable6_8
   \   000001CA   0x7800             LDRB     R0,[R0, #+0]
   \   000001CC   0x2801             CMP      R0,#+1
   \   000001CE   0xD106             BNE.N    ??error_calcu_14
    359                         error_all = error_all + 12;                 
   \   000001D0   0x....             LDR.N    R0,??DataTable6
   \   000001D2   0x6801             LDR      R1,[R0, #+0]
   \   000001D4   0x....             LDR.N    R0,??DataTable6_36  ;; 0x41400000
   \   000001D6   0x.... 0x....      BL       __aeabi_fadd
   \   000001DA   0x....             LDR.N    R1,??DataTable6
   \   000001DC   0x6008             STR      R0,[R1, #+0]
    360                    }
    361               }
    362             
    363             
    364             
    365              //Error限幅
    366              if(error_all > Error_Limit)
   \                     ??error_calcu_14: (+1)
   \   000001DE   0x....             LDR.N    R0,??DataTable6
   \   000001E0   0x6800             LDR      R0,[R0, #+0]
   \   000001E2   0x....             LDR.N    R1,??DataTable6_37  ;; 0x41f00001
   \   000001E4   0x.... 0x....      BL       __aeabi_cfrcmple
   \   000001E8   0xD803             BHI.N    ??error_calcu_16
    367                 error_all = Error_Limit;
   \   000001EA   0x....             LDR.N    R0,??DataTable6_38  ;; 0x41f00000
   \   000001EC   0x....             LDR.N    R1,??DataTable6
   \   000001EE   0x6008             STR      R0,[R1, #+0]
   \   000001F0   0xE008             B.N      ??error_calcu_17
    368              else if(error_all < -Error_Limit)
   \                     ??error_calcu_16: (+1)
   \   000001F2   0x....             LDR.N    R0,??DataTable6
   \   000001F4   0x6800             LDR      R0,[R0, #+0]
   \   000001F6   0x....             LDR.N    R1,??DataTable6_39  ;; 0xc1f00000
   \   000001F8   0x.... 0x....      BL       __aeabi_cfcmple
   \   000001FC   0xD202             BCS.N    ??error_calcu_17
    369                 error_all = -Error_Limit; 
   \   000001FE   0x....             LDR.N    R0,??DataTable6_39  ;; 0xc1f00000
   \   00000200   0x....             LDR.N    R1,??DataTable6
   \   00000202   0x6008             STR      R0,[R1, #+0]
    370          }
   \                     ??error_calcu_17: (+1)
   \   00000204   0xB009             ADD      SP,SP,#+36
   \   00000206   0xBD00             POP      {PC}             ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6:
   \   00000000   0x........         DC32     error_all

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_1:
   \   00000000   0x........         DC32     Error

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_2:
   \   00000000   0x........         DC32     Flag_Ramp

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_3:
   \   00000000   0x........         DC32     Flag_Island_Confirm

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_4:
   \   00000000   0x........         DC32     Flag_Island

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_5:
   \   00000000   0x........         DC32     final

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_6:
   \   00000000   0x........         DC32     peak

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_7:
   \   00000000   0x........         DC32     Case2_Ahead_KeepSide

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_8:
   \   00000000   0x........         DC32     Case2_Behind_KeepSide

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_9:
   \   00000000   0x........         DC32     Pre_Error

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_10:
   \   00000000   0x40390000         DC32     0x40390000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_11:
   \   00000000   0x........         DC32     Turn_Around

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_12:
   \   00000000   0x........         DC32     Flag_Island_Confirm_Dir

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_13:
   \   00000000   0x403E0000         DC32     0x403e0000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_14:
   \   00000000   0x........         DC32     Flag_Island_Confirm_Last

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_15:
   \   00000000   0x........         DC32     final_Last

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_16:
   \   00000000   0x........         DC32     Flag_Island_Last

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_17:
   \   00000000   0x40490000         DC32     0x40490000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_18:
   \   00000000   0x........         DC32     Dir_IslandTurn

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_19:
   \   00000000   0x........         DC32     Spd_Switch

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_20:
   \   00000000   0x400BB000         DC32     0x400bb000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_21:
   \   00000000   0x........         DC32     sensor

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_22:
   \   00000000   0x........         DC32     start_peak

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_23:
   \   00000000   0x........         DC32     E_Max

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_24:
   \   00000000   0x9161F9AE         DC32     0x9161f9ae

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_25:
   \   00000000   0x3FF4F032         DC32     0x3ff4f032

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_26:
   \   00000000   0x........         DC32     peak_real

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_27:
   \   00000000   0x3FF00000         DC32     0x3ff00000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_28:
   \   00000000   0x405E0000         DC32     0x405e0000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_29:
   \   00000000   0x40590000         DC32     0x40590000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_30:
   \   00000000   0xBFF00000         DC32     0xbff00000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_31:
   \   00000000   0x402B0000         DC32     0x402b0000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_32:
   \   00000000   0x........         DC32     error2_all

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_33:
   \   00000000   0x........         DC32     Flag_Direction

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_34:
   \   00000000   0x........         DC32     OverTake_Straight

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_35:
   \   00000000   0xC1600000         DC32     0xc1600000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_36:
   \   00000000   0x41400000         DC32     0x41400000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_37:
   \   00000000   0x41F00001         DC32     0x41f00001

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_38:
   \   00000000   0x41F00000         DC32     0x41f00000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_39:
   \   00000000   0xC1F00000         DC32     0xc1f00000

   \                                 In section .rodata, align 4
   \   00000000   0x00000000         DC32 0H
   \   00000004   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000014   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
    371          
    372          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   AveEmax_Calcu
         8   -> __aeabi_d2iz
         8   -> __aeabi_dmul
         8   -> __aeabi_i2d
       4   CalcMaxToMin
       8   Dis_Calc
         8   -> Island_Handle
         8   -> Prevent_LostLine
         8   -> Ramp_Handle
         8   -> __aeabi_f2iz
         8   -> ad_convert
         8   -> error_calcu
         8   -> peak_calc
      16   Prevent_LostLine
        16   -> __aeabi_d2iz
        16   -> __aeabi_i2d
        16 __aeabi_cdcmple
        16 __aeabi_cdrcmple
      16   Set_SensorPara
        16   -> CalcMaxToMin
        16   -> LPLD_ADC_Get
       8   ad_convert
         8   -> LPLD_ADC_Get
      40   error_calcu
        40   -> __aeabi_d2f
        40   -> __aeabi_dadd
        40   -> __aeabi_ddiv
        40   -> __aeabi_dmul
        40   -> __aeabi_f2d
        40   -> __aeabi_fadd
        40   -> __aeabi_i2d
        40   -> __aeabi_memclr4
        40   -> sqrt
        40 __aeabi_cfcmple
        40 __aeabi_cfrcmple
      16   peak_calc
        16   -> CalcMaxToMin
        16   -> __aeabi_d2iz
        16   -> __aeabi_ddiv
        16   -> __aeabi_dmul
        16   -> __aeabi_i2d


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable6
       4  ??DataTable6_1
       4  ??DataTable6_10
       4  ??DataTable6_11
       4  ??DataTable6_12
       4  ??DataTable6_13
       4  ??DataTable6_14
       4  ??DataTable6_15
       4  ??DataTable6_16
       4  ??DataTable6_17
       4  ??DataTable6_18
       4  ??DataTable6_19
       4  ??DataTable6_2
       4  ??DataTable6_20
       4  ??DataTable6_21
       4  ??DataTable6_22
       4  ??DataTable6_23
       4  ??DataTable6_24
       4  ??DataTable6_25
       4  ??DataTable6_26
       4  ??DataTable6_27
       4  ??DataTable6_28
       4  ??DataTable6_29
       4  ??DataTable6_3
       4  ??DataTable6_30
       4  ??DataTable6_31
       4  ??DataTable6_32
       4  ??DataTable6_33
       4  ??DataTable6_34
       4  ??DataTable6_35
       4  ??DataTable6_36
       4  ??DataTable6_37
       4  ??DataTable6_38
       4  ??DataTable6_39
       4  ??DataTable6_4
       4  ??DataTable6_5
       4  ??DataTable6_6
       4  ??DataTable6_7
       4  ??DataTable6_8
       4  ??DataTable6_9
      32  ?_0
     416  AveEmax_Calcu
      62  CalcMaxToMin
       4  Case3_Behind_PassDis
      44  Dis_Calc
      32  E_Max
       4  Error
       1  Flag_Direction
       1  Flag_ForceTurn
       1  Flag_Island
       1  Flag_Island_Last
       1  Flag_Ramp
       4  ForceTurn_Distance
     400  Pre_Error
     738  Prevent_LostLine
       4  RampAdmit_Distance
       4  RampIn_Distance
     268  Set_SensorPara
       4  Turn_Distance
     188  ad_convert
       4  error2_all
       4  error7_all
       4  error_all
     520  error_calcu
       1  fang
       1  final_Last
      32  peak
     532  peak_calc
       8  peak_real
     800  sensor
     320  start_peak

 
 1 635 bytes in section .bss
    32 bytes in section .rodata
 2 928 bytes in section .text
 
 2 928 bytes of CODE  memory
    32 bytes of CONST memory
 1 635 bytes of DATA  memory

Errors: none
Warnings: 1
